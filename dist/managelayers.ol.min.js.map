{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/templates/template_managelayers_control.html","webpack:///./src/facade/js/_externs_html.sortable.min.js","webpack:///./src/templates/activelayers.html","webpack:///./src/templates/baselayers.html","webpack:///./src/templates/thematiclayers.html","webpack:///./src/templates/template_managelayers_toolbar.html","webpack:///./src/templates/wmclayers.html","webpack:///./src/impl/ol/js/managelayerscontrol.js","webpack:///./src/facade/js/managelayerscontrol.js","webpack:///./src/impl/ol/js/activelayersControl.js","webpack:///./src/facade/js/activelayersControl.js","webpack:///./src/impl/ol/js/baselayersControl.js","webpack:///./src/facade/js/baselayersControl.js","webpack:///./src/facade/js/_mapea_core_extension.js","webpack:///./src/facade/js/thematiclayersControl.js","webpack:///./src/facade/js/managelayers.js","webpack:///./src/facade/js/wmclayersControl.js","webpack:///./src/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","define","e","nodeType","toString","this","el","options","b","z","group","Math","random","sort","disabled","store","handle","scroll","scrollSensitivity","scrollSpeed","draggable","test","nodeName","ghostClass","chosenClass","dragClass","ignore","filter","preventOnFilter","animation","setData","textContent","dropBubble","dragoverBubble","dataIdAttr","delay","forceFallback","fallbackClass","fallbackOnBody","fallbackTolerance","fallbackOffset","x","y","supportPointer","a","dt","charAt","nativeDraggable","nt","_onTapStart","st","push","_onDragOver","lastPullMode","state","revertClone","N","insertBefore","k","_animate","C","Q","parentNode","host","addEventListener","tt","removeEventListener","classList","className","replace","V","style","defaultView","getComputedStyle","currentStyle","getElementsByTagName","length","createEvent","toUpperCase","substr","initEvent","to","from","item","clone","oldIndex","newIndex","dispatchEvent","h","onMove","dragged","draggedRect","related","relatedRect","getBoundingClientRect","willInsertAfter","u","it","g","tagName","src","href","charCodeAt","v","previousElementSibling","split","shift","RegExp","join","match","_","arguments","J","apply","D","$","dom","cloneNode","K","w","T","clearTimeout","window","document","Error","S","E","B","P","Y","X","O","I","R","A","M","L","F","U","j","H","W","q","Date","getTime","G","Z","parseInt","setTimeout","jQuery","Zepto","Polymer","createElement","ot","navigator","userAgent","cssText","pointerEvents","rt","abs","at","min","lt","ct","clientX","clientY","f","innerWidth","innerHeight","scrollFn","offsetWidth","scrollWidth","offsetHeight","scrollHeight","right","left","bottom","top","vx","vy","clearInterval","pid","setInterval","scrollTo","pageXOffset","pageYOffset","scrollTop","scrollLeft","indexOf","checkPull","pull","checkPut","put","capture","passive","constructor","type","touches","target","shadowRoot","path","checked","button","isContentEditable","preventDefault","some","trim","_prepareDragStart","ownerDocument","nextSibling","_lastX","_lastY","_disableDelayedDrag","_triggerDragStart","forEach","_onDrop","_dragStartTimer","pointerType","_onDragStart","selection","empty","getSelection","removeAllRanges","_dragStarted","active","_nulling","_emulateDragOver","elementFromPoint","rootEl","_onTouchMove","_appendGhost","marginTop","marginLeft","width","height","body","appendChild","dataTransfer","_offUpEvents","_cloneId","_loopId","effectAllowed","_dragStartId","stopPropagation","animated","contains","children","lastElementChild","cssFloat","display","nextElementSibling","offsetTop","removeChild","save","handleEvent","dropEffect","toArray","getAttribute","set","closest","option","destroy","Array","querySelectorAll","removeAttribute","splice","utils","on","off","css","find","is","extend","throttle","toggleClass","index","nextTick","cancelNextTick","version","ManageLayersControl","impl","Control","params","params_","facadeMap_","map","element","deactivate","remove","getMapImpl","removeControl","isUndefined","ManageLayersImplControl","exception","controlName","options_","getControlOptions_","NAME","template","iconClass","tooltip","Promise","success","fail","html","compileSync","vars","content","isNullOrEmpty","toolbar","getPanel","_controlsContainer","_element","querySelector","selector","getSelectorToolbarButton_","container","getSelectorToolbarContainer_","selectorBtn","selectorContainer","addEvents","getToolbarContainer_","toggle","getControlButton_","getTitleControlManageLayers_","innerText","opt_","CONFIG_BASE","baseName","toLowerCase","getSelectorButton_","obj","equals","getSelectorContainer_","getOptionsManageLayers","setOptionsManageLayers","manageLayers","layer","CSS","escape","minHeight","add","layers","map_","addLayers","getImpl","removeItemLayers","isLoad","findLayerById","id","layerName","findItemByProperty","getLayers","layerId","lstItems","itemProperty","itemValue","ActiveLayersControl","totalActiveLayers_","olMap","ol","control","addControl","registerEvents","unregisterEvents","registerViewEvents_","getView","registerLayersEvents_","evt","onViewChange_","unregisterViewEvents_","unregisterLayersEvents_","un","view","renderPanel","ly","registerLayerEvents_","onAddLayer_","oldValue","setZIndex","facadeCtrol_","lstLayers","getFilterLayerList","avance","getZIndex","order","reverse","filterLayers","isBaseMap","isDrawLayer","isTransparent","transparent","displayInLayerSwitcher","isNotWMC","WMC","isNotWMSFull","WMS","updateOrderLayer","zindexA","zindexB","isNaN","sum","position","arr","selectedStyle","setSelectedStyle","getMetadataURL","getStylesLayer","selectedStyle_","ActiveLayersImplControl","countID_","boundClickLayer_","clickLayer","clickLayerSlider","event","itemTarget","setOpacity","parseFloat","innerHTML","ctolContainer","getControlContainer_","itemTocOptions","getQuerySelectorScapeCSS","getOptionsControlManageLayers","collapsed","titleText","input","select","focus","_event_blur","legend","isVisible","opacity","parentElement","setVisible","WFS","getMetadataLink","then","metadataLink","open","getAbstractLayer","descripcion","titulo","dialog","info","stylesContainer","showStyles","getLayerStylePosition","setLayerStyle","resetOptionsManageLayers","removeLayers","moveLayer","activateLoading","getTemplateVariables_","templateVariables","TEMPLATE","sortableList","actions","action","registerImgErrorEvents_","itemSortable","Sortable","onEnd","deactivateLoading","setConfigLayers","promises","parseLayerForTemplate_","all","err","console","log","configToc","setOptionsControlManageLayers","layerTitle","metadata","infoLayer","WMTS","groupId","groupTitle","layerGroup_","title","result","origen","getLegendURL","inRange","getOpacity","styles","selected","imgElements","imgElem","legendErrorUrl","concatUrlPaths","config","THEME_URL","Layer","LEGEND_ERROR","setLegendURL","urlLegend","BaseLayersControl","BaseLayersImplControl","baseMaps_","mapaActivo","activatedBlankMap","loadConfigInicial","BASEMAP_BLANCO","tempVars","configTemplate","baseMapBlanco","activo","baseMap","urlImg","img","clickBaseLayer","CHANGE_WMC","activeItem","activeId","selectMap","getOL3Layer","error","baseMaps","bmapLoaded","loadedBaseMaps","getBaseLayers","isArray","itemMap","baseLayer","getImgLayer","parameter","isbaseLayer","queryable","url","getMaxExtent","getProjection","code","IMG_BASEMAP_DEFAULT","MapeaCoreExtension","this_","fnEquals_","GeoJSON","KML","Mapbox","OSM","_fn_equals","getCapabilities","abstract_","getInfoCapabilities","Contents","Abstract","metadataLink_","MetadataURL","OnlineResource","baseUrlLayer","hostname","remote","any","response","uuid","DOMParser","parseFromString","text","childNodes","nodeValue","listStyles_","Style","LegendURL","Name","getSource","getParams","STYLES","getSelectedStyle","updateParams","GetCapabilities","capabilities","Capability","getInfoCapabilitiesRecursive_","ilen","itemInfo","isObject","Map","itemLayer","layers_","MBtiles","extract","featuresHandler_","removeLayer","ol3Layer","lay","haveOSMorMapboxLayer","getControls","getArray","data","Attribution","legendUrl_","LEGEND_DEFAULT","legendUrl","Z_INDEX","ThematicLayersControl","thematicLayers_","clickThematicLayer","groups","parseGroupForTemplate_","activated","overlays","isLoadLayer","selectorItems","click","loadConfigOverlays","concat","overlaysParam","overlay","isTematica","ManageLayers","Plugin","parameters","controls_","config_","metadata_","api","overrideMapeaCore","initMapeaCoreExtension","createView","toolbar_","once","COMPLETED","initControls","ctrol","getConfigControl","addControlToPlugin_","panel_","getPanel_","addControls","ADDED_TO_MAP","fire","addPanels","string","parseToHtml","templateVars","htmlText","Handlebars","compile","templateFn","stringToHtml","ACTIVATED","render","panel","getPanels","ui","Panel","getPanelOptions_","enableTouchScroll","SHOW","ctrlActive","ctrls","activate","collapsible","collapsedButtonClass","collapsedClass","TR","removeControls","plugin","WMCLayersControl","wmc_","getWMCSelected","wmc","lstWMC","getWMC","wmcLayer","clickWmcLayer","wmcLayers","isWMC","M$control$ActiveLayersControl","M$plugin$BaseLayersControl","M$plugin$ManageLayers","M$control$ManageLayersControl","M$control$ThematicLayersControl","M$control$WMCLayersControl","M$impl$control$ActiveLayersControl","M$impl$control$BaseLayersControl","M$impl$control$ManageLayersControl"],"mappings":"aACE,IAAIA,EAAmB,GAGvB,SAASC,EAAoBC,GAG5B,GAAGF,EAAiBE,GACnB,OAAOF,EAAiBE,GAAUC,QAGnC,IAAIC,EAASJ,EAAiBE,GAAY,CACzCG,EAAGH,EACHI,GAAG,EACHH,QAAS,IAUV,OANAI,EAAQL,GAAUM,KAAKJ,EAAOD,QAASC,EAAQA,EAAOD,QAASF,GAG/DG,EAAOE,GAAI,EAGJF,EAAOD,QAKfF,EAAoBQ,EAAIF,EAGxBN,EAAoBS,EAAIV,EAGxBC,EAAoBU,EAAI,SAASR,EAASS,EAAMC,GAC3CZ,EAAoBa,EAAEX,EAASS,IAClCG,OAAOC,eAAeb,EAASS,EAAM,CAAEK,YAAY,EAAMC,IAAKL,KAKhEZ,EAAoBkB,EAAI,SAAShB,GACX,oBAAXiB,QAA0BA,OAAOC,aAC1CN,OAAOC,eAAeb,EAASiB,OAAOC,YAAa,CAAEC,MAAO,WAE7DP,OAAOC,eAAeb,EAAS,aAAc,CAAEmB,OAAO,KAQvDrB,EAAoBsB,EAAI,SAASD,EAAOE,GAEvC,GADU,EAAPA,IAAUF,EAAQrB,EAAoBqB,IAC/B,EAAPE,EAAU,OAAOF,EACpB,GAAW,EAAPE,GAA8B,iBAAVF,GAAsBA,GAASA,EAAMG,WAAY,OAAOH,EAChF,IAAII,EAAKX,OAAOY,OAAO,MAGvB,GAFA1B,EAAoBkB,EAAEO,GACtBX,OAAOC,eAAeU,EAAI,UAAW,CAAET,YAAY,EAAMK,MAAOA,IACtD,EAAPE,GAA4B,iBAATF,EAAmB,IAAI,IAAIM,KAAON,EAAOrB,EAAoBU,EAAEe,EAAIE,EAAK,SAASA,GAAO,OAAON,EAAMM,IAAQC,KAAK,KAAMD,IAC9I,OAAOF,GAIRzB,EAAoB6B,EAAI,SAAS1B,GAChC,IAAIS,EAAST,GAAUA,EAAOqB,WAC7B,WAAwB,OAAOrB,EAAgB,SAC/C,WAA8B,OAAOA,GAEtC,OADAH,EAAoBU,EAAEE,EAAQ,IAAKA,GAC5BA,GAIRZ,EAAoBa,EAAI,SAASiB,EAAQC,GAAY,OAAOjB,OAAOkB,UAAUC,eAAe1B,KAAKuB,EAAQC,IAGzG/B,EAAoBkC,EAAI,GAIjBlC,EAAoBA,EAAoBmC,EAAI,G,gBClFrDhC,EAAOD,QAAU,4gB;mECChB,SAAUoB,GAAK,kBAAgE,0BAANc,EAAwH,WAA4B,SAASd,EAAEe,EAAGR,GAAK,IAAKQ,IAAMA,EAAEC,UAAY,IAAMD,EAAEC,SAAU,KAAM,+CAAiD,GAAGC,SAAShC,KAAK8B,GAAIG,KAAKC,GAAKJ,EAAGG,KAAKE,QAAUb,EAAIc,EAAE,GAAId,GAAIQ,EAAEO,GAAKJ,KAAM,IAAI3B,EAAI,CAAEgC,MAAOC,KAAKC,SAAUC,MAAM,EAAIC,UAAU,EAAIC,MAAO,KAAMC,OAAQ,KAAMC,QAAQ,EAAIC,kBAAmB,GAAIC,YAAa,GAAIC,UAAW,SAASC,KAAKnB,EAAEoB,UAAY,KAAO,KAAMC,WAAY,iBAAkBC,YAAa,kBAAmBC,UAAW,gBAAiBC,OAAQ,SAAUC,OAAQ,KAAMC,iBAAiB,EAAIC,UAAW,EAAGC,QAAS,SAAU3C,EAAGe,GAAKf,EAAE2C,QAAQ,OAAQ5B,EAAE6B,cAAiBC,YAAY,EAAIC,gBAAgB,EAAIC,WAAY,UAAWC,MAAO,EAAGC,eAAe,EAAIC,cAAe,oBAAqBC,gBAAgB,EAAIC,kBAAmB,EAAGC,eAAgB,CAAEC,EAAG,EAAGC,EAAG,GAAKC,gBAAgB,IAAOxD,EAAEwD,gBAAkB,IAAK,IAAI1E,KAAKS,IAAKT,KAAKyB,KAAOA,EAAEzB,GAAKS,EAAET,IAAY,IAAK,IAAI2E,KAAhBC,GAAGnD,GAAkBW,KAAM,MAAQuC,EAAEE,OAAO,IAAM,mBAAqBzC,KAAKuC,KAAOvC,KAAKuC,GAAKvC,KAAKuC,GAAGnD,KAAKY,OAAQA,KAAK0C,iBAAmBrD,EAAE0C,eAAiBY,EAAIjE,EAAEmB,EAAG,YAAaG,KAAK4C,aAAclE,EAAEmB,EAAG,aAAcG,KAAK4C,aAAcvD,EAAEiD,gBAAkB5D,EAAEmB,EAAG,cAAeG,KAAK4C,aAAc5C,KAAK0C,kBAAoBhE,EAAEmB,EAAG,WAAYG,MAAOtB,EAAEmB,EAAG,YAAaG,OAAQ6C,GAAGC,KAAK9C,KAAK+C,aAAc1D,EAAEqB,OAASV,KAAKQ,KAAKnB,EAAEqB,MAAMjC,IAAIuB,OAAU,SAASH,EAAEf,EAAGe,GAAK,UAAYf,EAAEkE,eAAiBnD,GAAI,GAAKuC,GAAKA,EAAEa,QAAUpD,IAAMF,EAAEyC,EAAG,UAAWvC,EAAI,OAAS,IAAKA,GAAKuC,EAAEa,QAAUnE,EAAEoB,QAAQG,MAAM6C,aAAeC,EAAEC,aAAahB,EAAGiB,GAAIvE,EAAEwE,SAASC,EAAGnB,IAAMe,EAAEC,aAAahB,EAAGmB,IAAKnB,EAAEa,MAAQpD,GAAM,SAASR,EAAEP,EAAGe,EAAGR,GAAK,GAAIP,EAAG,CAAEO,EAAIA,GAAKmE,EAAG,GAAK,GAAI,OAAS3D,GAAKf,EAAE2E,aAAepE,GAAKrB,EAAEc,EAAGe,GAAI,OAAOf,QAAYA,EAAIT,EAAES,IAAO,OAAO,KAAQ,SAAST,EAAES,GAAK,IAAIe,EAAIf,EAAE4E,KAAM,OAAO7D,GAAKA,EAAEC,SAAWD,EAAIf,EAAE2E,WAA4G,SAAS/E,EAAEI,EAAGe,EAAGR,GAAKP,EAAE6E,iBAAiB9D,EAAGR,EAAGuE,GAAO,SAASrB,EAAEzD,EAAGe,EAAGR,GAAKP,EAAE+E,oBAAoBhE,EAAGR,EAAGuE,GAAO,SAAS/F,EAAEiB,EAAGe,EAAGR,GAAK,GAAIP,EAAG,GAAIA,EAAEgF,UAAWhF,EAAEgF,UAAUzE,EAAI,MAAQ,UAAUQ,OAAS,CAAE,IAAIxB,GAAK,IAAMS,EAAEiF,UAAY,KAAKC,QAAQC,EAAG,KAAKD,QAAQ,IAAMnE,EAAI,IAAK,KAAMf,EAAEiF,WAAa1F,GAAKgB,EAAI,IAAMQ,EAAI,KAAKmE,QAAQC,EAAG,MAAU,SAAStE,EAAEb,EAAGe,EAAGR,GAAK,IAAIhB,EAAIS,GAAKA,EAAEoF,MAAO,GAAI7F,EAAG,CAAE,QAAI,IAAWgB,EAAG,OAAOmE,EAAEW,aAAeX,EAAEW,YAAYC,iBAAmB/E,EAAImE,EAAEW,YAAYC,iBAAiBtF,EAAG,IAAMA,EAAEuF,eAAiBhF,EAAIP,EAAEuF,mBAAe,IAAWxE,EAAIR,EAAIA,EAAEQ,GAAIA,KAAKxB,IAAMwB,EAAI,WAAaA,GAAIxB,EAAEwB,GAAKR,GAAK,iBAAmBA,EAAI,GAAK,OAAW,SAASpB,EAAEa,EAAGe,EAAGR,GAAK,GAAIP,EAAG,CAAE,IAAIT,EAAIS,EAAEwF,qBAAqBzE,GAAIjC,EAAI,EAAGc,EAAIL,EAAEkG,OAAQ,GAAIlF,EAAG,KAAOzB,EAAIc,EAAGd,IAAIyB,EAAEhB,EAAET,GAAIA,GAAI,OAAOS,EAAK,MAAO,GAAM,SAASH,EAAEY,EAAGe,EAAGR,EAAGhB,EAAGT,EAAGc,EAAG6D,EAAG1E,GAAKiB,EAAIA,GAAKe,EAAEO,GAAI,IAAIT,EAAI6D,EAAEgB,YAAY,SAAUvG,EAAIa,EAAEoB,QAAShC,EAAI,KAAOmB,EAAEoD,OAAO,GAAGgC,cAAgBpF,EAAEqF,OAAO,GAAI/E,EAAEgF,UAAUtF,GAAG,GAAI,GAAKM,EAAEiF,GAAKhH,GAAKiC,EAAGF,EAAEkF,KAAOnG,GAAKmB,EAAGF,EAAEmF,KAAOzG,GAAKwB,EAAGF,EAAEoF,MAAQ3C,EAAGzC,EAAEqF,SAAWzC,EAAG5C,EAAEsF,SAAWpH,EAAGgC,EAAEqF,cAAcvF,GAAI1B,EAAEC,IAAMD,EAAEC,GAAGH,KAAKe,EAAGa,GAAM,SAASwF,EAAErG,EAAGe,EAAGR,EAAGhB,EAAGT,EAAGc,EAAG6D,EAAG1E,GAAK,IAAI8B,EAAG1B,EAAGC,EAAIY,EAAEsB,GAAI+E,EAAIjH,EAAEgC,QAAQkF,OAAQ,OAAQzF,EAAI6D,EAAEgB,YAAY,UAAUG,UAAU,QAAQ,GAAI,GAAKhF,EAAEiF,GAAK/E,EAAGF,EAAEkF,KAAO/F,EAAGa,EAAE0F,QAAUhG,EAAGM,EAAE2F,YAAcjH,EAAGsB,EAAE4F,QAAU3H,GAAKiC,EAAGF,EAAE6F,YAAc9G,GAAKmB,EAAE4F,wBAAyB9F,EAAE+F,gBAAkB7H,EAAGiB,EAAEoG,cAAcvF,GAAIwF,IAAMlH,EAAIkH,EAAEpH,KAAKG,EAAGyB,EAAG4C,IAAKtE,EAAK,SAAS0H,EAAE7G,GAAKA,EAAEiC,WAAY,EAAM,SAASrB,IAAMkG,IAAK,EAAgK,SAASC,EAAE/G,GAAK,IAAK,IAAIe,EAAIf,EAAEgH,QAAUhH,EAAEiF,UAAYjF,EAAEiH,IAAMjH,EAAEkH,KAAOlH,EAAE4C,YAAarC,EAAIQ,EAAE0E,OAAQlG,EAAI,EAAGgB,KAAKhB,GAAKwB,EAAEoG,WAAW5G,GAAI,OAAOhB,EAAE0B,SAAS,IAAO,SAASmG,EAAEpH,EAAGe,GAAK,IAAIR,EAAI,EAAG,IAAKP,IAAMA,EAAE2E,WAAY,OAAQ,EAAG,KAAO3E,IAAMA,EAAIA,EAAEqH,yBAAyB,aAAerH,EAAEmC,SAASwD,eAAiB,OAAS5E,IAAM7B,EAAEc,EAAGe,IAAMR,IAAK,OAAOA,EAAK,SAASrB,EAAEc,EAAGe,GAAK,GAAIf,EAAG,CAAE,IAAIO,GAAKQ,EAAIA,EAAEuG,MAAM,MAAMC,QAAQ5B,cAAepG,EAAI,IAAIiI,OAAO,OAASzG,EAAE0G,KAAK,KAAO,WAAY,KAAM,QAAS,KAAOlH,GAAKP,EAAEmC,SAASwD,eAAiBpF,GAAKQ,EAAE0E,UAAY,IAAMzF,EAAEiF,UAAY,KAAKyC,MAAMnI,IAAM,IAAIkG,QAAU1E,EAAE0E,QAAW,OAAO,EAAM,SAASkC,EAAE3H,EAAGe,GAAK,IAAIR,EAAGhB,EAAG,OAAO,gBAAc,IAAWgB,IAAMA,EAAIqH,UAAWrI,EAAI2B,KAAM2G,GAAE,WAAc,IAAMtH,EAAEkF,OAASzF,EAAEf,KAAKM,EAAGgB,EAAE,IAAMP,EAAE8H,MAAMvI,EAAGgB,GAAIA,OAAI,IAAWQ,KAAU,SAASM,EAAErB,EAAGe,GAAK,GAAIf,GAAKe,EAAG,IAAK,IAAIR,KAAKQ,EAAGA,EAAEJ,eAAeJ,KAAOP,EAAEO,GAAKQ,EAAER,IAAK,OAAOP,EAAK,SAAS+H,EAAE/H,GAAK,OAAOgI,GAAKA,EAAEC,IAAMD,EAAEC,IAAIjI,GAAGkI,WAAU,GAAMC,EAAIA,EAAEnI,GAAGiG,OAAM,GAAI,GAAKjG,EAAEkI,WAAU,GAAqJ,SAASE,EAAEpI,GAAK,OAAO6H,EAAE7H,EAAG,GAAM,SAASqI,EAAErI,GAAK,OAAOsI,aAAatI,GAAM,GAAI,oBAAsBuI,SAAWA,OAAOC,SAAU,OAAO,WAAc,MAAM,IAAIC,MAAM,kDAAqD,IAAIhE,EAAGiE,EAAGC,EAAGrF,EAAGe,EAAGE,EAAGqE,EAAGC,EAAGC,EAAGC,EAAGC,EAAGC,EAAGC,EAAGC,EAAGC,EAAGC,EAAGC,EAAGC,EAAGC,EAAGC,EAAGC,EAAI,GAAIvE,EAAI,OAAQwE,EAAI,oBAAqBrI,EAAI,YAAc,IAAIsI,MAAMC,UAAWC,EAAIvB,OAAQ7D,EAAIoF,EAAEtB,SAAUuB,EAAID,EAAEE,SAAUnC,EAAIiC,EAAEG,WAAY9B,EAAI2B,EAAEI,QAAUJ,EAAEK,MAAOnC,EAAI8B,EAAEM,QAAStF,GAAK,EAAajB,EAAK,cAAea,EAAE2F,cAAc,OAAQC,GAAK,SAAUtK,GAAK,OAAQuK,UAAUC,UAAU9C,MAAM,qCAAsC1H,EAAI0E,EAAE2F,cAAc,MAAQjF,MAAMqF,QAAU,sBAAuB,SAAWzK,EAAEoF,MAAMsF,eAA7K,GAAkM5D,IAAK,EAAI6D,GAAKnJ,KAAKoJ,IAAKC,GAAKrJ,KAAKsJ,IAAKC,GAAK,GAAIhH,GAAK,GAAIiH,GAAKrD,GAAE,SAAU3H,EAAGe,EAAGR,GAAK,GAAIA,GAAKQ,EAAEe,OAAQ,CAAE,IAAIvC,EAAGT,EAAGc,EAAG6D,EAAG1E,EAAG8B,EAAG1B,EAAIoB,EAAEe,GAAIlC,EAAI2B,EAAEgB,kBAAmBsE,EAAItF,EAAEiB,YAAa6E,EAAI7G,EAAEiL,QAASrK,EAAIZ,EAAEkL,QAASC,EAAI5C,OAAO6C,WAAYrE,EAAIwB,OAAO8C,YAAa,GAAIvC,IAAMvI,IAAMsI,EAAI9H,EAAEe,OAAQgH,EAAIvI,EAAGwI,EAAIhI,EAAEuK,UAAU,IAAOzC,GAAI,CAAEA,EAAItI,EAAG,GAAK,GAAIsI,EAAE0C,YAAc1C,EAAE2C,aAAe3C,EAAE4C,aAAe5C,EAAE6C,aAAc,YAAgB7C,EAAIA,EAAElE,YAAekE,IAAMtJ,EAAIsJ,EAAG/J,EAAI+J,EAAElC,wBAAyB/G,GAAK+K,GAAG7L,EAAE6M,MAAQ9E,IAAMzH,IAAMuL,GAAG7L,EAAE8M,KAAO/E,IAAMzH,GAAIqE,GAAKkH,GAAG7L,EAAE+M,OAASjL,IAAMxB,IAAMuL,GAAG7L,EAAEgN,IAAMlL,IAAMxB,IAAKQ,GAAK6D,IAAMA,GAAKsD,EAAInG,GAAKxB,IAAMwB,GAAKxB,KAAMQ,GAAKuL,EAAItE,GAAKzH,IAAMyH,GAAKzH,KAAOqE,KAAOlE,EAAIuK,IAAKJ,EAAEqC,KAAOnM,GAAK8J,EAAEsC,KAAOvI,GAAKiG,EAAEvI,KAAO5B,IAAMmK,EAAEvI,GAAK5B,EAAGmK,EAAEqC,GAAKnM,EAAG8J,EAAEsC,GAAKvI,EAAGwI,cAAcvC,EAAEwC,KAAM3M,IAAMmK,EAAEwC,IAAMC,aAAY,WAAc,GAAItL,EAAI4C,EAAIA,EAAI4C,EAAI,EAAGtH,EAAIa,EAAIA,EAAIyG,EAAI,EAAG,mBAAqB0C,EAAG,OAAOA,EAAE9J,KAAKE,EAAGJ,EAAG8B,EAAGb,GAAIT,IAAMuK,EAAIA,EAAEsC,SAAStC,EAAEuC,YAActN,EAAG+K,EAAEwC,YAAczL,IAAMtB,EAAEgN,WAAa1L,EAAGtB,EAAEiN,YAAczN,KAAO,SAAY,IAAK2E,GAAK,SAAU1D,GAAK,SAASe,EAAEf,EAAGe,GAAK,YAAO,IAAWf,IAAK,IAAOA,IAAMA,EAAIO,EAAElB,MAAO,mBAAqBW,EAAIA,EAAI,SAAUO,EAAGhB,GAAK,IAAIT,EAAIS,EAAE6B,QAAQG,MAAMlC,KAAM,OAAO0B,EAAIf,EAAIA,IAAMA,EAAEyH,KAAOzH,EAAEyM,QAAQ3N,IAAM,EAAIA,GAAKkB,IAAS,IAAIO,EAAI,GAAIhB,EAAIS,EAAEuB,MAAOhC,GAAK,UAAY,EAAOA,KAAMA,EAAI,CAAEF,KAAME,IAAMgB,EAAElB,KAAOE,EAAEF,KAAMkB,EAAEmM,UAAY3L,EAAExB,EAAEoN,MAAM,GAAKpM,EAAEqM,SAAW7L,EAAExB,EAAEsN,KAAMtM,EAAE6D,YAAc7E,EAAE6E,YAAapE,EAAEuB,MAAQhB,GAAM,IAAMgI,OAAO1D,iBAAiB,OAAQ,KAAMrF,OAAOC,eAAe,GAAI,UAAW,CAAEE,IAAK,WAAcmF,EAAK,CAAEgI,SAAS,EAAIC,SAAc,OAAe,MAAO/M,IAAO,OAAOA,EAAEU,UAAY,CAAEsM,YAAahN,EAAG8D,YAAa,SAAU9D,GAAK,IAAIe,EAAGxB,EAAI2B,KAAMpC,EAAIoC,KAAKC,GAAIvB,EAAIsB,KAAKE,QAASqC,EAAI7D,EAAE6C,gBAAiB1D,EAAIiB,EAAEiN,KAAMpM,EAAIb,EAAEkN,SAAWlN,EAAEkN,QAAQ,GAAI/N,GAAK0B,GAAKb,GAAGmN,OAAQ9G,EAAIrG,EAAEmN,OAAOC,YAAcpN,EAAEqN,MAAQrN,EAAEqN,KAAK,IAAMlO,EAAG0H,EAAIjH,EAAE4C,OAAQ,GAApsF,SAAWxC,GAAK+K,GAAGtF,OAAS,EAAG,IAAK,IAAI1E,EAAIf,EAAEwF,qBAAqB,SAAUjF,EAAIQ,EAAE0E,OAAQlF,KAAM,CAAE,IAAIhB,EAAIwB,EAAER,GAAIhB,EAAE+N,SAAWvC,GAAG/G,KAAKzE,IAAkkFgE,CAAEzE,IAAK2F,KAAO,wBAAwBvC,KAAKnD,IAAM,IAAMiB,EAAEuN,QAAU3N,EAAE+B,YAAc0E,EAAEmH,oBAAsBrO,EAAIoB,EAAEpB,EAAGS,EAAEqC,UAAWnD,KAAO8J,IAAMzJ,EAAG,CAAE,GAAI4B,EAAIqG,EAAEjI,EAAGS,EAAEqC,WAAY,mBAAqB4E,GAAK,GAAIA,EAAE5H,KAAKiC,KAAMlB,EAAGb,EAAG+B,MAAO,OAAO9B,EAAEG,EAAG8G,EAAG,SAAUlH,EAAGL,EAAGA,EAAGiC,QAAU0C,GAAKzD,EAAEyN,uBAA0B,GAAI5G,IAAMA,EAAIA,EAAES,MAAM,KAAKoG,MAAK,SAAU1N,GAAK,GAAIA,EAAIO,EAAE8F,EAAGrG,EAAE2N,OAAQ7O,GAAI,OAAOM,EAAEG,EAAGS,EAAG,SAAUb,EAAGL,EAAGA,EAAGiC,IAAI,MAAS,YAAa0C,GAAKzD,EAAEyN,kBAAmB7N,EAAEiC,SAAWtB,EAAE8F,EAAGzG,EAAEiC,OAAQ/C,IAAMoC,KAAK0M,kBAAkB5N,EAAGa,EAAG1B,EAAG4B,KAAS6M,kBAAmB,SAAU5N,EAAGe,EAAGR,EAAGhB,GAAK,IAAIT,EAAG2E,EAAIvC,KAAML,EAAI4C,EAAEtC,GAAIkF,EAAI5C,EAAErC,QAASR,EAAIC,EAAEgN,cAAetN,IAAMkE,GAAKlE,EAAEoE,aAAe9D,IAAM0I,EAAIvJ,EAAGqE,EAAIxD,EAAG6H,GAAKjE,EAAIlE,GAAGoE,WAAYJ,EAAIE,EAAEqJ,YAAalF,EAAIrI,EAAG8I,EAAIhD,EAAE9E,MAAO4H,EAAI5J,EAAG2B,KAAK6M,QAAUhN,GAAKf,GAAGiL,QAAS/J,KAAK8M,QAAUjN,GAAKf,GAAGkL,QAASzG,EAAEW,MAAM,eAAiB,MAAOtG,EAAI,WAAc2E,EAAEwK,sBAAuBxJ,EAAExC,UAAYwB,EAAEG,gBAAiB7E,EAAE0F,EAAG4B,EAAEhE,aAAa,GAAKoB,EAAEyK,kBAAkBlO,EAAGe,GAAI3B,EAAEqE,EAAGY,EAAG,SAAUI,EAAGJ,EAAGA,EAAG8E,IAAO9C,EAAE9D,OAAO+E,MAAM,KAAK6G,SAAQ,SAAUnO,GAAKb,EAAEsF,EAAGzE,EAAE2N,OAAQ9G,MAAQjH,EAAEgB,EAAG,UAAW6C,EAAE2K,SAAUxO,EAAEgB,EAAG,WAAY6C,EAAE2K,SAAUxO,EAAEgB,EAAG,cAAe6C,EAAE2K,SAAUxO,EAAEgB,EAAG,cAAe6C,GAAI4C,EAAE7C,gBAAkB5D,EAAEgB,EAAG,gBAAiB6C,EAAE2K,SAAU/H,EAAErD,OAASpD,EAAEgB,EAAG,UAAW6C,EAAEwK,qBAAsBrO,EAAEgB,EAAG,WAAY6C,EAAEwK,qBAAsBrO,EAAEgB,EAAG,cAAe6C,EAAEwK,qBAAsBrO,EAAEgB,EAAG,YAAa6C,EAAEwK,qBAAsBrO,EAAEgB,EAAG,YAAa6C,EAAEwK,qBAAsB5H,EAAE7C,gBAAkB5D,EAAEgB,EAAG,cAAe6C,EAAEwK,qBAAsBxK,EAAE4K,gBAAkBxG,EAAE/I,EAAGuH,EAAErD,QAAUlE,MAASmP,oBAAqB,WAAc,IAAIjO,EAAIkB,KAAKC,GAAG0M,cAAevF,aAAapH,KAAKmN,iBAAkB5K,EAAEzD,EAAG,UAAWkB,KAAK+M,qBAAsBxK,EAAEzD,EAAG,WAAYkB,KAAK+M,qBAAsBxK,EAAEzD,EAAG,cAAekB,KAAK+M,qBAAsBxK,EAAEzD,EAAG,YAAakB,KAAK+M,qBAAsBxK,EAAEzD,EAAG,YAAakB,KAAK+M,qBAAsBxK,EAAEzD,EAAG,cAAekB,KAAK+M,sBAAyBC,kBAAmB,SAAUlO,EAAGe,IAAMA,EAAIA,IAAM,SAAWf,EAAEsO,YAActO,EAAI,QAAUuJ,EAAI,CAAE4D,OAAQ1I,EAAGwG,QAASlK,EAAEkK,QAASC,QAASnK,EAAEmK,SAAWhK,KAAKqN,aAAahF,EAAG,UAAYrI,KAAK0C,iBAAmBhE,EAAE6E,EAAG,UAAWvD,MAAOtB,EAAEyE,EAAG,YAAanD,KAAKqN,eAAiBrN,KAAKqN,aAAahF,GAAG,GAAK,IAAM7E,EAAE8J,UAAYpG,GAAE,WAAc1D,EAAE8J,UAAUC,WAAclG,OAAOmG,eAAeC,kBAAqB,MAAO3O,MAAU4O,aAAc,WAAc,GAAIvK,GAAKI,EAAG,CAAE,IAAI1D,EAAIG,KAAKE,QAASrC,EAAE0F,EAAG1D,EAAEqB,YAAY,GAAKrD,EAAE0F,EAAG1D,EAAEuB,WAAW,GAAKtC,EAAE6O,OAAS3N,KAAM9B,EAAE8B,KAAMmD,EAAG,QAASI,EAAGJ,EAAGA,EAAG8E,QAAWjI,KAAK4N,YAAeC,iBAAkB,WAAc,GAAIvF,EAAG,CAAE,GAAItI,KAAK6M,SAAWvE,EAAEyB,SAAW/J,KAAK8M,SAAWxE,EAAE0B,QAAS,OAAQhK,KAAK6M,OAASvE,EAAEyB,QAAS/J,KAAK8M,OAASxE,EAAE0B,QAASZ,IAAMzJ,EAAE8H,EAAG,UAAW,QAAS,IAAI3I,EAAI0E,EAAEsK,iBAAiBxF,EAAEyB,QAASzB,EAAE0B,SAAUnK,EAAIf,EAAGO,EAAIwD,GAAG0B,OAAQ,GAAIzF,GAAKA,EAAEoN,aAAerM,EAAIf,EAAIA,EAAEoN,WAAW4B,iBAAiBxF,EAAEyB,QAASzB,EAAE0B,UAAWnK,EAAG,EAAG,CAAE,GAAIA,EAAEO,GAAI,CAAE,KAAOf,KAAKwD,GAAGxD,GAAG,CAAE0K,QAASzB,EAAEyB,QAASC,QAAS1B,EAAE0B,QAASiC,OAAQnN,EAAGiP,OAAQlO,IAAM,MAASf,EAAIe,QAAYA,EAAIA,EAAE4D,YAAa2F,IAAMzJ,EAAE8H,EAAG,UAAW,MAAUuG,aAAc,SAAUnO,GAAK,GAAIwI,EAAG,CAAE,IAAIhJ,EAAIW,KAAKE,QAAS7B,EAAIgB,EAAE6C,kBAAmBtE,EAAIyB,EAAE8C,eAAgBzD,EAAImB,EAAEmM,QAAUnM,EAAEmM,QAAQ,GAAKnM,EAAG0C,EAAI7D,EAAEqL,QAAU1B,EAAE0B,QAAUnM,EAAEwE,EAAGvE,EAAIa,EAAEsL,QAAU3B,EAAE2B,QAAUpM,EAAEyE,EAAGpE,EAAI4B,EAAEmM,QAAU,eAAiBzJ,EAAI,MAAQ1E,EAAI,QAAU,aAAe0E,EAAI,MAAQ1E,EAAI,MAAO,IAAKiB,EAAE6O,OAAQ,CAAE,GAAItP,GAAKsL,GAAGF,GAAG/K,EAAEqL,QAAU/J,KAAK6M,QAASpD,GAAG/K,EAAEsL,QAAUhK,KAAK8M,SAAWzO,EAAG,OAAQ2B,KAAK0N,eAAkB1N,KAAKiO,eAAgB1F,GAAI,EAAID,EAAI5J,EAAGiB,EAAE8H,EAAG,kBAAmBxJ,GAAI0B,EAAE8H,EAAG,eAAgBxJ,GAAI0B,EAAE8H,EAAG,cAAexJ,GAAI0B,EAAE8H,EAAG,YAAaxJ,GAAI4B,EAAE0M,mBAAuB0B,aAAc,WAAc,IAAKxG,EAAG,CAAE,IAAI3I,EAAGe,EAAI0D,EAAEkC,wBAAyBpG,EAAIM,EAAE4D,GAAIlF,EAAI2B,KAAKE,QAASrC,EAAE4J,EAAIlE,EAAEyD,WAAU,GAAK3I,EAAE6C,YAAY,GAAKrD,EAAE4J,EAAGpJ,EAAE2D,eAAe,GAAKnE,EAAE4J,EAAGpJ,EAAE+C,WAAW,GAAKzB,EAAE8H,EAAG,MAAO5H,EAAE+K,IAAM/B,EAAExJ,EAAE6O,UAAW,KAAMvO,EAAE8H,EAAG,OAAQ5H,EAAE6K,KAAO7B,EAAExJ,EAAE8O,WAAY,KAAMxO,EAAE8H,EAAG,QAAS5H,EAAEuO,OAAQzO,EAAE8H,EAAG,SAAU5H,EAAEwO,QAAS1O,EAAE8H,EAAG,UAAW,OAAQ9H,EAAE8H,EAAG,WAAY,SAAU9H,EAAE8H,EAAG,SAAU,UAAW9H,EAAE8H,EAAG,gBAAiB,QAASpJ,EAAE4D,gBAAkBuB,EAAE8K,KAAKC,YAAY9G,IAAMtE,EAAEoL,YAAY9G,GAAI3I,EAAI2I,EAAEhC,wBAAyB9F,EAAE8H,EAAG,QAAS,EAAI5H,EAAEuO,MAAQtP,EAAEsP,OAAQzO,EAAE8H,EAAG,SAAU,EAAI5H,EAAEwO,OAASvP,EAAEuP,UAAchB,aAAc,SAAUvO,EAAGe,GAAK,IAAIR,EAAIW,KAAM3B,EAAIS,EAAE0P,aAAc5Q,EAAIyB,EAAEa,QAASb,EAAEoP,eAAgBtG,EAAEqD,UAAUnM,EAAGA,EAAGkE,EAAGzE,MAAQsD,EAAIyE,EAAEtD,IAAIxC,WAAY,EAAIqB,EAAE8B,MAAM,eAAiB,GAAIvE,EAAEyC,EAAG,UAAW,QAASvE,EAAEuE,EAAG/C,EAAEa,QAAQiB,aAAa,GAAK9B,EAAEqP,SAAWxH,GAAE,WAAc/D,EAAEC,aAAahB,EAAGmB,GAAIrF,EAAEmB,EAAG8D,EAAG,QAASI,OAAS1F,EAAE0F,EAAG3F,EAAEwD,WAAW,GAAKvB,GAAK,UAAYA,GAAKnB,EAAE8E,EAAG,YAAanE,EAAE2O,cAAetP,EAAE8E,EAAG,WAAYnE,EAAE6N,SAAUxO,EAAE8E,EAAG,cAAenE,EAAE6N,SAAUtP,EAAE0E,iBAAmB5D,EAAE8E,EAAG,cAAenE,EAAE2O,cAAetP,EAAE8E,EAAG,YAAanE,EAAE6N,YAAcxO,EAAE8E,EAAG,YAAanE,EAAE2O,cAAetP,EAAE8E,EAAG,UAAWnE,EAAE6N,UAAW7N,EAAEsP,QAAU1D,YAAY5L,EAAEwO,iBAAkB,MAAQxP,IAAMA,EAAEuQ,cAAgB,OAAQhR,EAAE6D,SAAW7D,EAAE6D,QAAQ1D,KAAKsB,EAAGhB,EAAGkF,IAAK7E,EAAE8E,EAAG,OAAQnE,GAAIA,EAAEwP,aAAe3H,EAAE7H,EAAEqO,gBAAmB3K,YAAa,SAAU1E,GAAK,IAAIT,EAAGc,EAAG6D,EAAG1E,EAAGI,EAAI+B,KAAKC,GAAI/B,EAAI8B,KAAKE,QAASyF,EAAIzH,EAAEmC,MAAOwF,EAAI/G,EAAE6O,OAAQzH,EAAIiC,IAAMxC,EAAG3H,GAAI,EAAIyI,EAAIvI,EAAEsC,KAAM,QAAI,IAAWnC,EAAEkO,iBAAmBlO,EAAEkO,kBAAmBrO,EAAE0D,gBAAkBvD,EAAEyQ,oBAAqBvL,EAAEwL,WAAaxG,GAAI,EAAI1C,IAAM3H,EAAEuC,WAAayF,EAAIO,IAAM5I,GAAKsF,EAAE6L,SAASzL,IAAM6E,IAAMpI,OAAS6F,EAAE7C,aAAemF,EAAEqD,UAAUxL,KAAM6F,EAAGtC,EAAGlF,KAAOsH,EAAE+F,SAAS1L,KAAM6F,EAAGtC,EAAGlF,WAAQ,IAAWA,EAAE0P,QAAU1P,EAAE0P,SAAW/N,KAAKC,KAAM,CAAE,GAAI6J,GAAGzL,EAAGH,EAAG8B,KAAKC,IAAK2F,GAAI,OAAQ,GAAIhI,EAAIyB,EAAEhB,EAAE4N,OAAQ/N,EAAE6C,UAAW9C,GAAIS,EAAI6E,EAAEkC,wBAAyB2C,IAAMpI,OAASoI,EAAIpI,KAAMhC,GAAI,GAAKH,EAAG,OAAOgC,EAAEgG,GAAG,GAAK2B,EAAIrE,OAASf,GAAKiB,EAAIF,EAAEC,aAAaG,EAAGnB,GAAKiB,GAAKoD,GAAKtD,EAAEoL,YAAYhL,IAAK,GAAI,IAAMtF,EAAEgR,SAAS1K,QAAUtG,EAAEgR,SAAS,KAAOxH,GAAKxJ,IAAMI,EAAE4N,QAAljT,SAAWnN,EAAGe,GAAK,IAAIR,EAAIP,EAAEoQ,iBAAiBzJ,wBAAyB,OAAO5F,EAAEmK,SAAW3K,EAAEuL,IAAMvL,EAAEgP,QAAU,GAAKxO,EAAEkK,SAAW1K,EAAEqL,KAAOrL,EAAE+O,OAAS,EAAu6SnE,CAAEhM,EAAGI,GAAI,CAAE,GAAI,IAAMJ,EAAEgR,SAAS1K,QAAUtG,EAAEgR,SAAS,KAAOxH,GAAKxJ,IAAMI,EAAE4N,SAAWrO,EAAIK,EAAEiR,kBAAmBtR,EAAG,CAAE,GAAIA,EAAEmR,SAAU,OAAQxM,EAAI3E,EAAE6H,wBAA2B5F,EAAEgG,EAAGK,IAAI,IAAOf,EAAEhC,EAAGlF,EAAGsF,EAAG7E,EAAGd,EAAG2E,EAAGlE,KAAOkF,EAAEyL,SAAS/Q,KAAOA,EAAEsQ,YAAYhL,GAAIiE,EAAIvJ,GAAI+B,KAAKsD,SAAS5E,EAAG6E,GAAI3F,GAAKoC,KAAKsD,SAASf,EAAG3E,SAAY,GAAIA,IAAMA,EAAEmR,UAAYnR,IAAM2F,QAAK,IAAW3F,EAAE6F,WAAWrD,GAAI,CAAE0H,IAAMlK,IAAMkK,EAAIlK,EAAGmK,EAAIpI,EAAE/B,GAAIoK,EAAIrI,EAAE/B,EAAE6F,aAAc,IAAItD,GAAKoC,EAAI3E,EAAE6H,yBAAyBgF,MAAQlI,EAAEmI,KAAM7D,EAAItE,EAAEoI,OAASpI,EAAEqI,IAAKvI,EAAIoG,EAAEzH,KAAK+G,EAAEoH,SAAWpH,EAAEqH,UAAY,QAAUpH,EAAEoH,SAAW,IAAMpH,EAAE,kBAAkBuD,QAAQ,OAAQrE,EAAItJ,EAAEyM,YAAc9G,EAAE8G,YAAalD,EAAIvJ,EAAE2M,aAAehH,EAAEgH,aAAc7C,GAAKrF,GAAKhE,EAAE0L,QAAUxH,EAAEmI,MAAQvK,GAAK9B,EAAE2L,QAAUzH,EAAEqI,KAAO/D,GAAK,GAAIc,EAAI/J,EAAEyR,mBAAoBzH,GAAI,EAAI,GAAIvF,EAAG,CAAE,IAAIwF,EAAItE,EAAE+L,UAAWrH,EAAIrK,EAAE0R,UAAW1H,EAAIC,IAAMI,EAAIrK,EAAEuI,yBAA2B5C,IAAM2D,GAAKQ,GAAKR,EAAItJ,EAAEuI,yBAA2B5C,GAAKA,EAAE4C,yBAA2BvI,GAAKS,EAAE2L,QAAUzH,EAAEqI,KAAO/D,EAAI,GAAKoB,EAAIJ,OAAU7J,IAAM4J,EAAID,IAAMpE,IAAM4D,GAAKO,GAAKP,GAAI,IAAIe,EAAI/C,EAAEhC,EAAGlF,EAAGsF,EAAG7E,EAAGd,EAAG2E,EAAGlE,EAAGuJ,IAAI,IAAOM,IAAM,IAAMA,IAAM,IAAMA,IAAMN,EAAI,IAAMM,GAAItC,IAAK,EAAIe,EAAEjH,EAAG,IAAKG,EAAEgG,EAAGK,GAAI3C,EAAEyL,SAAS/Q,KAAO2J,IAAMD,EAAI1J,EAAEsQ,YAAYhL,GAAK3F,EAAE6F,WAAWL,aAAaG,EAAGqE,EAAID,EAAI/J,IAAK4J,EAAIjE,EAAEE,WAAYzD,KAAKsD,SAAS5E,EAAG6E,GAAIvD,KAAKsD,SAASf,EAAG3E,OAAY0F,SAAU,SAAUxE,EAAGe,GAAK,IAAIR,EAAIW,KAAKE,QAAQsB,UAAW,GAAInC,EAAG,CAAE,IAAIhB,EAAIwB,EAAE4F,wBAAyB,IAAM3G,EAAEgB,WAAahB,EAAIA,EAAE2G,yBAA0B9F,EAAEE,EAAG,aAAc,QAASF,EAAEE,EAAG,YAAa,gBAAkBf,EAAE4L,KAAOrM,EAAEqM,MAAQ,OAAS5L,EAAE8L,IAAMvM,EAAEuM,KAAO,SAAU/K,EAAEwK,YAAa1K,EAAEE,EAAG,aAAc,OAASR,EAAI,MAAOM,EAAEE,EAAG,YAAa,sBAAuBuH,aAAavH,EAAEkP,UAAWlP,EAAEkP,SAAWpI,GAAE,WAAchH,EAAEE,EAAG,aAAc,IAAKF,EAAEE,EAAG,YAAa,IAAKA,EAAEkP,UAAW,IAAO1P,KAASoP,aAAc,WAAc,IAAI3P,EAAIkB,KAAKC,GAAG0M,cAAepK,EAAEiB,EAAG,YAAaxD,KAAKgO,cAAezL,EAAEiB,EAAG,cAAexD,KAAKgO,cAAezL,EAAEzD,EAAG,UAAWkB,KAAKkN,SAAU3K,EAAEzD,EAAG,WAAYkB,KAAKkN,SAAU3K,EAAEzD,EAAG,YAAakB,KAAKkN,SAAU3K,EAAEzD,EAAG,cAAekB,KAAKkN,SAAU3K,EAAEzD,EAAG,gBAAiBkB,KAAKkN,SAAU3K,EAAEzD,EAAG,cAAekB,OAAUkN,QAAS,SAAUrN,GAAK,IAAIR,EAAIW,KAAKC,GAAI5B,EAAI2B,KAAKE,QAAS6K,cAAc/K,KAAK2O,SAAU5D,cAAcvC,EAAEwC,KAAM5D,aAAapH,KAAKmN,iBAAkBhG,EAAEnH,KAAK0O,UAAWvH,EAAEnH,KAAK6O,cAAetM,EAAEiB,EAAG,YAAaxD,MAAOuC,EAAEiB,EAAG,YAAaxD,KAAKgO,cAAehO,KAAK0C,kBAAoBH,EAAEiB,EAAG,OAAQxD,MAAOuC,EAAElD,EAAG,YAAaW,KAAKqN,eAAgBrN,KAAKyO,eAAgB5O,IAAM0I,IAAM1I,EAAE0M,kBAAmBlO,EAAEsD,YAAc9B,EAAEiP,mBAAoBrH,GAAKA,EAAEhE,YAAcgE,EAAEhE,WAAW8L,YAAY9H,GAAItE,IAAMqE,GAAK,UAAY1I,EAAE6O,OAAO3K,cAAgBZ,GAAKA,EAAEqB,YAAcrB,EAAEqB,WAAW8L,YAAYnN,GAAImB,IAAMvD,KAAK0C,iBAAmBH,EAAEgB,EAAG,UAAWvD,MAAO2F,EAAEpC,GAAIA,EAAEW,MAAM,eAAiB,GAAIrG,EAAE0F,EAAGvD,KAAKE,QAAQgB,YAAY,GAAKrD,EAAE0F,EAAGvD,KAAKE,QAAQiB,aAAa,GAAKjD,EAAE8B,KAAMmD,EAAG,WAAYI,EAAGiE,EAAGrE,EAAG8E,GAAI9E,IAAMqE,GAAKU,EAAIhC,EAAE3C,EAAGlF,EAAE0C,aAAe,IAAM7C,EAAE,KAAMsJ,EAAG,MAAOjE,EAAGiE,EAAGrE,EAAG8E,EAAGC,GAAIhK,EAAE8B,KAAMmD,EAAG,SAAUI,EAAGiE,EAAGrE,EAAG8E,EAAGC,GAAIhK,EAAE,KAAMsJ,EAAG,OAAQjE,EAAGiE,EAAGrE,EAAG8E,EAAGC,GAAIhK,EAAE8B,KAAMmD,EAAG,OAAQI,EAAGiE,EAAGrE,EAAG8E,EAAGC,IAAM3E,EAAEqJ,cAAgBvJ,IAAM6E,EAAIhC,EAAE3C,EAAGlF,EAAE0C,aAAe,IAAM7C,EAAE8B,KAAMmD,EAAG,SAAUI,EAAGiE,EAAGrE,EAAG8E,EAAGC,GAAIhK,EAAE8B,KAAMmD,EAAG,OAAQI,EAAGiE,EAAGrE,EAAG8E,EAAGC,IAAKpJ,EAAE6O,SAAW,MAAQzF,IAAM,IAAMA,IAAMA,EAAID,GAAI/J,EAAE8B,KAAMmD,EAAG,MAAOI,EAAGiE,EAAGrE,EAAG8E,EAAGC,GAAIlI,KAAKwP,UAAWxP,KAAK4N,YAAeA,SAAU,WAAczK,EAAII,EAAIiE,EAAIC,EAAIpE,EAAIjB,EAAIsF,EAAIC,EAAIC,EAAIS,EAAIC,EAAIC,EAAIL,EAAIJ,EAAIC,EAAIK,EAAID,EAAIrJ,EAAE6O,OAAS,KAAM9D,GAAGoD,SAAQ,SAAUnO,GAAKA,EAAEsN,SAAU,KAAQvC,GAAGtF,OAAS,GAAMkL,YAAa,SAAU3Q,GAAK,OAAQA,EAAEiN,MAAQ,IAAK,OAAQ,IAAK,UAAW/L,KAAKkN,QAAQpO,GAAI,MAAO,IAAK,WAAY,IAAK,YAAayE,IAAMvD,KAAK+C,YAAYjE,GAAnvd,SAAWA,GAAKA,EAAE0P,eAAiB1P,EAAE0P,aAAakB,WAAa,QAAS5Q,EAAEyN,iBAA6qd3O,CAAEkB,IAAK,MAAO,IAAK,YAAakB,KAAKkN,QAAQpO,GAAI,MAAO,IAAK,cAAeA,EAAEyN,mBAAuBoD,QAAS,WAAc,IAAK,IAAI7Q,EAAGe,EAAI,GAAIxB,EAAI2B,KAAKC,GAAGgP,SAAUrR,EAAI,EAAGc,EAAIL,EAAEkG,OAAQhC,EAAIvC,KAAKE,QAAStC,EAAIc,EAAGd,IAAIyB,EAAEP,EAAIT,EAAET,GAAI2E,EAAExB,UAAWf,KAAKC,KAAOJ,EAAEiD,KAAKhE,EAAE8Q,aAAarN,EAAEV,aAAegE,EAAE/G,IAAK,OAAOe,GAAMW,KAAM,SAAU1B,GAAK,IAAIe,EAAI,GAAIxB,EAAI2B,KAAKC,GAAID,KAAK2P,UAAU1C,SAAQ,SAAUnO,EAAGlB,GAAK,IAAIc,EAAIL,EAAE4Q,SAASrR,GAAIyB,EAAEX,EAAGsB,KAAKE,QAAQa,UAAW1C,KAAOwB,EAAEf,GAAKJ,KAAOsB,MAAOlB,EAAEmO,SAAQ,SAAUnO,GAAKe,EAAEf,KAAOT,EAAEkR,YAAY1P,EAAEf,IAAKT,EAAEkQ,YAAY1O,EAAEf,SAAa0Q,KAAM,WAAc,IAAI1Q,EAAIkB,KAAKE,QAAQQ,MAAO5B,GAAKA,EAAE+Q,IAAI7P,OAAU8P,QAAS,SAAUhR,EAAGe,GAAK,OAAOR,EAAEP,EAAGe,GAAKG,KAAKE,QAAQa,UAAWf,KAAKC,KAAQ8P,OAAQ,SAAUjR,EAAGe,GAAK,IAAIR,EAAIW,KAAKE,QAAS,QAAI,IAAWL,EAAG,OAAOR,EAAEP,GAAIO,EAAEP,GAAKe,EAAG,UAAYf,GAAK0D,GAAGnD,IAAO2Q,QAAS,WAAc,IAAIlR,EAAIkB,KAAKC,GAAInB,EAAEsB,GAAK,KAAMmC,EAAEzD,EAAG,YAAakB,KAAK4C,aAAcL,EAAEzD,EAAG,aAAckB,KAAK4C,aAAcL,EAAEzD,EAAG,cAAekB,KAAK4C,aAAc5C,KAAK0C,kBAAoBH,EAAEzD,EAAG,WAAYkB,MAAOuC,EAAEzD,EAAG,YAAakB,OAAQiQ,MAAMzQ,UAAUyN,QAAQlP,KAAKe,EAAEoR,iBAAiB,gBAAgB,SAAUpR,GAAKA,EAAEqR,gBAAgB,gBAAkBtN,GAAGuN,OAAOvN,GAAG0I,QAAQvL,KAAK+C,aAAc,GAAI/C,KAAKkN,UAAWlN,KAAKC,GAAKnB,EAAI,OAAWJ,EAAE8E,EAAG,aAAa,SAAU3D,GAAKf,EAAE6O,QAAU9N,EAAE0M,oBAAsBzN,EAAEuR,MAAQ,CAAEC,GAAI5R,EAAG6R,IAAKhO,EAAGiO,IAAK7Q,EAAG8Q,KAAMxS,EAAGyS,GAAI,SAAU5R,EAAGe,GAAK,QAASR,EAAEP,EAAGe,EAAGf,IAAO6R,OAAQxQ,EAAGyQ,SAAUnK,EAAGqJ,QAASzQ,EAAGwR,YAAahT,EAAGkH,MAAO8B,EAAGiK,MAAO5K,EAAG6K,SAAU7J,EAAG8J,eAAgB7J,GAAKrI,EAAEI,OAAS,SAAUW,EAAGR,GAAK,OAAO,IAAIP,EAAEe,EAAGR,IAAOP,EAAEmS,QAAU,QAASnS,IAA/skB,kCAA/E,I,cCDDnB,EAAOD,QAAU,siJ,cCAjBC,EAAOD,QAAU,g7B,inBCAjBC,EAAOD,QAAU,2gD,cCAjBC,EAAOD,QAAU,+jB,cCAjBC,EAAOD,QAAU,o7C,wrDCGIwT,E,qSAA4BhJ,EAAEiJ,KAAKC,S,iBAStD,WAAYC,GAAQ,a,4FAAA,UAClB,gBAEKC,QAAUD,GAAU,GAEzB,EAAKE,WAAa,KALA,E,kCAgBpB,SAAMC,EAAKC,GAETzR,KAAKuR,WAAaC,EAClBxR,KAAKyR,QAAUA,EAGf,yCAAYD,EAAKC,K,sBASnB,c,wBAQA,c,qBAEA,WACEzR,KAAK0R,aACL1R,KAAKyR,QAAQE,SAEb3R,KAAKuR,WAAWK,aAAaC,cAAc7R,MAC3CA,KAAKuR,WAAa,KAClBvR,KAAKyR,QAAU,U,quDCpDEP,E,qSAA4BhJ,EAAEkJ,S,iBA8CjD,WAAaD,EAAME,EAAQnR,GAAS,a,4FAAA,SAE9BgI,EAAEmI,MAAMyB,YAAYC,IACtB7J,EAAE8J,UAAU,yEAGd,cAAMb,EAAMjR,EAAQ+R,cAOfX,QAAUD,GAAU,GAiBzB,EAAKa,SAAW,EAAKC,mBAAmBjS,GA9BN,E,8BApCpC,WACE,MAAO,iB,uBAiBT,WACE,MAAO,CACL+R,YAAaf,EAAoBkB,KACjCC,SAAUA,IACVC,UAAW,uBACXC,QAAS,oB,2BAqDb,SAAWf,GAAK,WACd,OAAO,IAAIgB,SAAQ,SAACC,EAASC,GAC3B,IAAIC,EAAOzK,EAAEmK,SAASO,YAAY,EAAKV,SAASG,SAAU,CAExDQ,KAAM,EAAKX,WAEPY,EAAU,KAEd,GAAK5K,EAAEmI,MAAM0C,cAAc,EAAKb,SAASc,SAevCF,EAAUH,EACV,EAAKM,WAAWC,mBAAmB3E,YAAYoE,OAhBE,CACjD,IAAIK,EAAU,EAAKd,SAASc,SAGb,IADD9K,EAAEmI,MAAM0C,cAAc,EAAKE,WAAWE,SAASC,cAAcJ,EAAQK,YAEjF,EAAKJ,WAAWC,mBAAmB3E,YAAYyE,EAAQ/G,QAGzD,IAAII,EAASsG,EAAKS,cAAc,EAAKE,6BACjCC,EAAYZ,EAAKS,cAAc,EAAKI,gCACxCR,EAAQ/G,OAAOmH,cAAcJ,EAAQS,aAAalF,YAAYlC,GAC9D2G,EAAQ/G,OAAOmH,cAAcJ,EAAQU,mBAAmBnF,YAAYgF,GACpET,EAAUE,EAAQ/G,OAOpB,EAAK0H,UAAUb,GACfL,EAAQK,Q,sBAed,WAEE9S,KAAK4T,uBAAuB9P,UAAU+P,OAAO,SAC7C7T,KAAK8T,oBAAoBhQ,UAAU+P,OAAO,UAE1C7T,KAAK+T,+BAA+BC,UAAYhU,KAAKkS,SAASK,QAC9D,+C,wBAGF,WAEEvS,KAAK4T,uBAAuB9P,UAAU+P,OAAO,SAC7C7T,KAAK8T,oBAAoBhQ,UAAU+P,OAAO,UAC1C,iD,gCAGF,SAAmB3T,GACjBA,EAAUA,GAAW,GAErB,IAAI+T,EAAO/L,EAAEmI,MAAMM,OAAO,GAAIO,EAAoBgD,aAAa,GAM/D,OALAD,EAAO/L,EAAEmI,MAAMM,OAAOsD,EAAM/T,GAAS,IAEhCiU,SAAajM,EAAEmI,MAAM0C,cAAckB,EAAKE,UAAaF,EAAKhC,YAAcgC,EAAKE,SAClFF,EAAKE,SAAYF,EAAKE,SAAUC,cAEzBH,I,+BAGT,WACE,OAAOjU,KAAKkU,c,uBAGd,SAAUvB,M,oBAEV,c,iCAYA,SAAoBA,GAClB,OAAOA,EAAKS,cAAcpT,KAAKqU,wB,oBAajC,SAAOC,GACL,IAAIC,GAAS,EAIb,OAHID,aAAepD,IACjBqD,EAAUvU,KAAK7B,OAASmW,EAAInW,MAEvBoW,I,uCAKT,WACE,MAAO,mBAAqBvU,KAAKkS,SAASiC,W,0CAG5C,WACE,MAAO,sBAAwBnU,KAAKkS,SAASiC,W,gCAG/C,WACE,MAAO,aAAenU,KAAKkS,SAASiC,W,mCAGtC,WACE,MAAO,SAAWnU,KAAKkS,SAASiC,W,kCAGlC,WACE,OAAOnU,KAAKiT,WAAWE,SAASC,cAAcpT,KAAKwT,kC,kCAGrD,WACE,OAAOxT,KAAKiT,WAAWE,SAASC,cAAcpT,KAAKwU,2B,+BAGrD,WACE,OAAOxU,KAAKiT,WAAWE,SAASC,cAAcpT,KAAKqU,wB,0CAGrD,WACE,OAAOrU,KAAKiT,WAAWE,SAASC,cAAc,iC,2CAIhD,SAA8BtO,GAC5B,OAAO9E,KAAKyU,uBAAuB3P,EAAO9E,KAAK7B,KAAMiW,iB,2CAGvD,SAA8BtP,EAAM5E,GAClCF,KAAK0U,uBAAuB5P,EAAM5E,EAAUF,KAAK7B,KAAMiW,iB,oCAEzD,SAAuBtP,EAAM3G,GAC3B,IAAI+B,EAAU4E,EAAK5E,QAAQyU,aAG3B,OAFKzM,EAAEmI,MAAM0C,cAAc5U,IAAU+J,EAAEmI,MAAM0C,cAAc7S,KACzDA,EAAUA,EAAQ/B,IACb+B,I,oCAET,SAAuB4E,EAAM5E,EAAS/B,GAChC+J,EAAEmI,MAAM0C,cAAcjO,EAAK5E,QAAQyU,gBACrC7P,EAAK5E,QAAQyU,aAAe,IAEzBzM,EAAEmI,MAAM0C,cAAc5U,GAGzB2G,EAAK5E,QAAQyU,aAAezU,EAF5B4E,EAAK5E,QAAQyU,aAAaxW,GAAQ+B,I,sCAItC,SAAyB0U,GACvBA,EAAM1U,QAAQyU,aAAe,K,sCAG/B,SAAyB1I,EAAQoH,EAAUlV,GACzC,OAAO8N,EAAOmH,cAAcC,EAAWwB,IAAIC,OAAO3W,M,6BAGpD,WACE6B,KAAKiT,WAAWE,SAASC,cAAc,qBAAqBtP,UAAU6N,OAAO,SAC7E3R,KAAKiT,WAAWE,SAASC,cAAc,sCAAsClP,MAAM6Q,UAAY,S,+BAEjG,WACE/U,KAAKiT,WAAWE,SAASC,cAAc,qBAAqBtP,UAAUkR,IAAI,SAC1EhV,KAAKiT,WAAWE,SAASC,cAAc,sCAAsClP,MAAM6Q,UAAY,Y,uBAIjG,SAAUE,GACRjV,KAAKkV,KAAKC,UAAUF,K,0BAGtB,SAAaA,GAMXjV,KAAKkV,KAAKE,UAAUC,iBAAiBJ,K,yBAIvC,SAAYL,GACV,IAAIU,GAAS,EAIb,OAFY,MADDtV,KAAKuV,cAAcX,EAAMY,MAElCF,GAAS,GACJA,I,6BAGT,SAAgBG,GACd,OAAOzV,KAAK0V,mBAAmB1V,KAAKkV,KAAKS,YAAa,OAAQF,K,2BAGhE,SAAcG,GACZ,OAAO5V,KAAK0V,mBAAmB1V,KAAKkV,KAAKS,YAAa,KAAMC,K,gCAG9D,SAAmBC,EAAUC,EAAcC,GACzC,IAAIjR,EAAO,KASX,OARI+Q,GAAYC,GACdD,EAASrJ,MAAK,SAAC5G,GACb,GAAIA,EAAGkQ,KAAkBC,EAEvB,OADAjR,EAAOc,GACA,KAINd,O,+4CC5TUkR,E,qSAA4B9N,EAAEiJ,KAAKC,S,iBAStD,WAAaC,GAAQ,a,4FAAA,UACnB,gBACKC,QAAUD,GAAU,GACzB,EAAKE,WAAa,KAClB,EAAK0E,mBAAqB,EAJP,E,kCAerB,SAAMzE,EAAKC,GACTzR,KAAKuR,WAAaC,EAClBxR,KAAKyR,QAAUA,EAEf,IAAIyE,EAAQ1E,EAAII,aAChBuE,GAAGC,QAAQhF,QAAQrT,KAAKiC,KAAM,CAC5B,QAAWyR,EACX,OAAU,OAEZyE,EAAMG,WAAWrW,Q,sBASnB,WAEEA,KAAKsW,mB,wBASP,WAEEtW,KAAKuW,qB,qBAYP,WACEvW,KAAK0R,aACL1R,KAAKyR,QAAQE,SACb3R,KAAKuR,WAAWK,aAAaC,cAAc7R,MAC3CA,KAAKuR,WAAa,KAClBvR,KAAKyR,QAAU,O,4BAWjB,WAAiB,WACf,IAAKvJ,EAAEmI,MAAM0C,cAAc/S,KAAKuR,YAAa,CAC3C,IAAI2E,EAAQlW,KAAKuR,WAAWK,aAE5B5R,KAAKwW,oBAAoBN,EAAMO,WAC/BzW,KAAK0W,sBAAsBR,EAAMP,aAEjCO,EAAM5F,GAAG,eAAe,SAACqG,GAAD,OAAS,EAAKC,cAAcD,S,8BAWxD,WAAmB,WACjB,IAAKzO,EAAEmI,MAAM0C,cAAc/S,KAAKuR,YAAa,CAC3C,IAAI2E,EAAQlW,KAAKuR,WAAWK,aAE5B5R,KAAK6W,sBAAsBX,EAAMO,WACjCzW,KAAK8W,wBAAwBZ,EAAMP,aACnCO,EAAMa,GAAG,eAAe,SAACJ,GAAD,OAAS,EAAKC,cAAcD,S,iCAOxD,SAAoBK,GAAM,WACxBA,EAAK1G,GAAG,qBAAqB,kBAAM,EAAK2G,mB,mCAM1C,SAAsBhC,GAAQ,WAC5BA,EAAOhI,SAAS,SAACiK,GAAD,OAAQ,EAAKC,qBAAqBD,MAClDjC,EAAO3E,GAAG,UAAU,kBAAM,EAAK2G,iBAC/BhC,EAAO3E,GAAG,OAAO,SAACqG,GAAD,OAAS,EAAKS,YAAYT,Q,kCAO7C,SAAqB/B,GAAO,WAC1BA,EAAMtE,GAAG,kBAAkB,kBAAM,EAAK2G,iBACtCrC,EAAMtE,GAAG,iBAAiB,kBAAM,EAAK2G,mB,mCAMvC,SAAsBD,GAAM,WAC1BA,EAAKD,GAAG,qBAAqB,kBAAM,EAAKE,mB,qCAM1C,SAAwBhC,GAAQ,WAC9BA,EAAOhI,SAAS,SAACiK,GAAD,OAAQ,EAAKC,qBAAqBD,MAClDjC,EAAO8B,GAAG,UAAU,kBAAM,EAAKE,iBAC/BhC,EAAO8B,GAAG,OAAO,SAACJ,GAAD,OAAS,EAAKS,YAAYT,Q,oCAM7C,SAAuB/B,GAAO,WAC5BA,EAAMmC,GAAG,kBAAkB,kBAAM,EAAKE,iBACtCrC,EAAMmC,GAAG,iBAAiB,kBAAM,EAAKE,mB,2BAMvC,SAAcN,GAEZ3W,KAAK6W,sBAAsBF,EAAIU,UAE/B,IAAInB,EAAQlW,KAAKuR,WAAWK,aAC5B5R,KAAKwW,oBAAoBN,EAAMO,a,yBAOjC,SAAYE,GACV,IAAIO,EAAKP,EAAIlF,QACbzR,KAAKmX,qBAAqBD,GAC1BA,EAAGI,UAAUtX,KAAKiW,mBAAqB,GACvCjW,KAAKiX,gB,yBAIP,SAAYN,GAEV3W,KAAKuX,aAAaN,gB,uBAGpB,SAAUzB,EAAIxQ,EAAUC,GAGtB,IAAIuS,EAAYxX,KAAKyX,oBAAmB,GAQpCC,EAASzS,EAAWD,EAExB,GAAI0S,EAAS,EAAG,CAEd,IAAK,IAAI9Z,EAAI8Z,EAAQ9Z,EAAI,EAAGA,IAC1B4Z,EAAUvS,EAAW,EAAIrH,GAAG0Z,UAAWE,EAAUvS,EAAW,EAAIrH,GAAG+Z,YAAc,GAGnFH,EAAUxS,GAAUsS,UAAWE,EAAUxS,GAAU2S,YAAcD,OAC5D,CACLA,IAAY,EAEZ,IAAK,IAAI9Z,EAAI,EAAGA,GAAK8Z,EAAQ9Z,IAC3B4Z,EAAUvS,EAAW,EAAIrH,GAAG0Z,UAAWE,EAAUvS,EAAW,EAAIrH,GAAG+Z,YAAc,GAGnFH,EAAUxS,GAAUsS,UAAWE,EAAUxS,GAAU2S,YAAcD,M,8BAIrE,SAAiB9C,EAAOgD,GACtBhD,EAAM0C,UAAUM,K,gCAWlB,SAAmBC,GAAS,WACpBC,EAAe9X,KAAKuR,WAAWoE,YAAYrU,QAAO,SAACsT,GACvD,IAAMmD,GAAiC,IAApBnD,EAAMmD,UACnBC,EAA8B,aAAfpD,EAAMzW,KAGrB8Z,GAAuC,IAAtBrD,EAAMsD,YACvBC,GAA2D,IAAjCvD,EAAMuD,uBAChCC,EAAYxD,EAAM7I,OAAS7D,EAAE0M,MAAM7I,KAAKsM,IACxCC,IAAkB1D,EAAM7I,OAAS7D,EAAE0M,MAAM7I,KAAKwM,KAAQrQ,EAAEmI,MAAM0C,cAAc6B,EAAMzW,OAcxF,OAbI4Z,EACF,EAAKS,iBAAiB5D,EAAO,GAEtBwD,IAAaJ,KAEE,IAAlBC,EACF,EAAKO,iBAAiB5D,EAAO,IAGK,IAA3BuD,GACP,EAAKK,iBAAiB5D,EAAO,KAGxBmD,IAAcC,GAAeC,GAAiBG,GAAYE,GAAgBH,KAClF3X,MAAK,SAAC+B,EAAGpC,GACV,IAAMsY,EAAUlW,EAAEoV,YACZe,EAAUvY,EAAEwX,YAClB,GAAIgB,MAAMF,IAAYE,MAAMD,GAC1B,OAAO,EAET,GAAIC,MAAMF,GACR,OAAQ,EAEV,GAAIE,MAAMD,GACR,OAAO,EAET,IAAME,EAAMH,EAAUC,EACtB,OAAOb,EAAUe,GAAOA,KACvBpH,KAAI,SAACoD,EAAOiE,EAAUC,GAMvB,OALIjB,EACFjD,EAAM0C,UAAUuB,EAAW,GAE3BjE,EAAM0C,UAAUwB,EAAIvU,OAAS,EAAIsU,GAE5BjE,KAGT,OADA5U,KAAKiW,mBAAqB6B,EAAavT,OAChCuT,I,2BAUT,SAAclD,EAAOmE,GAEnBnE,EAAMQ,UAAU4D,iBAAiBD,K,6BASnC,SAAgBnE,GACd,OAAOA,EAAMQ,UAAU6D,mB,4BASzB,SAAerE,GACb,OAAOA,EAAMQ,UAAU8D,mB,mCAQzB,SAAsBtE,GACpB,OAAOA,EAAMQ,UAAU+D,oB,k7CC1TNnD,E,yTAkCjB,WAAY3E,EAAQnR,GAAS,O,4FAAA,SAErBgI,EAAEmI,MAAMyB,YAAYsH,IACpBlR,EAAE8J,UAAU,wEAGhB,IAAIiC,EAAO,CACPhC,YAAa+D,EAAoB5D,KACjCE,UAAW,uBACXC,QAAS,iBAGbrS,EAAUgI,EAAEmI,MAAMM,OAAOsD,EAAM/T,GAAS,GAExC,IAAIiR,EAAO,IAAIiI,EAAwB/H,GAdd,OAgBzB,cAAMF,EAAME,EAAQnR,IAOfoR,QAAUD,GAAU,GAGzBF,EAAKoG,aAAL,KAGA,EAAK8B,SAAW,EAGhB,EAAKC,iBAAmB,SAAA3C,GAAG,OAAI,EAAK4C,WAAW5C,IAhCtB,E,8BAxB7B,WACI,MAAO,iB,oBAUX,WACI,OAAOtE,Q,0BA8CX,SAAUM,GAAM,WACEA,EAAKS,cAAcpT,KAAKwU,yBAE9B7Q,iBAAiB,SAAS,SAACgT,GAAD,OAAS,EAAK6C,iBAAiB7C,Q,8BAGrE,SAAiBA,GAEb,GADAA,EAAOA,GAAOtP,OAAOoS,OAChBvR,EAAEmI,MAAM0C,cAAc4D,EAAI1K,QAAS,CACpC,IAAIyN,EAAa/C,EAAI1K,OACjBuJ,EAAKkE,EAAW9J,aAAa,WAEjC,IAAK1H,EAAEmI,MAAM0C,cAAcyC,GAAK,CAC5B,IAAIZ,EAAQ5U,KAAKuV,cAAcC,GAC3BkE,EAAW5V,UAAUkL,SAAS,wCAC9B4F,EAAM+E,WAAWC,WAAWF,EAAW7a,QACvC6a,EAAWrK,mBAAmBwK,UAA+B,IAAnBH,EAAW7a,MAAc,S,wBAMnF,SAAW8X,GAEP,GADAA,EAAOA,GAAOtP,OAAOoS,OAChBvR,EAAEmI,MAAM0C,cAAc4D,EAAI1K,QAAS,CACpC,IAAIyN,EAAa/C,EAAI1K,OACjBuJ,EAAKkE,EAAW9J,aAAa,WAEjC,IAAK1H,EAAEmI,MAAM0C,cAAcyC,GAAK,CAE5B,IAAIZ,EAAQ5U,KAAKuV,cAAcC,GAE3BsE,EAAgB9Z,KAAK+Z,uBACrBC,EAAiBha,KAAKia,yBAAyBH,EAAe,oBAAqBtE,GAGvF,GAAIkE,EAAW5V,UAAUkL,SAAS,kCAEdhP,KAAKka,8BAA8BtF,GACzCuF,WAAcH,EAAelW,UAAUkL,SAAS,SAE1DgL,EAAelW,UAAU+P,OAAO,SAChC6F,EAAW5V,UAAU+P,OAAO,+BAC5B6F,EAAW5V,UAAU+P,OAAO,qCAG3B,GAAI6F,EAAW5V,UAAUkL,SAAS,gCAAiC,CAEpE,IAAIoL,EAAYpa,KAAKia,yBAAyBH,EAAe,mBAAoBtE,GAC7E6E,EAAQ/S,SAAS6B,cAAc,SACnCkR,EAAMtO,KAAO,OACbsO,EAAMxb,MAAQub,EAAUpG,UACxBoG,EAAUpG,UAAY,GACtBoG,EAAU7L,YAAY8L,GACtBA,EAAM1W,iBAAiB,SAAS,WAAc3D,KAAKsa,YACnDD,EAAME,QASNF,EAAM1W,iBAAiB,QAAQ,SAACgT,GAAD,OARb,SAAd6D,EAAe7D,GAEfyD,EAAUP,UAAYQ,EAAMxb,MAC5B+V,EAAM6F,OAASJ,EAAMxb,MACrBwb,EAAMxW,oBAAoB,QAAQ,SAAC8S,GAAD,OAAS6D,OAC3CH,EAAQ,KAG4BG,WAGvC,GAAId,EAAW5V,UAAUkL,SAAS,mCACnC,IAA2B,IAAtB4F,EAAMsD,cAA0BtD,EAAM8F,YAAa,CACpD,IAAIC,EAAUjB,EAAWkB,cAAcA,cAAcxH,cAAc,qBAC9DlL,EAAEmI,MAAM0C,cAAc4H,IACvB/F,EAAM+E,WAAWgB,EAAQ9b,OAE7B+V,EAAMiG,YAAYjG,EAAM8F,mBAK3B,GAAIhB,EAAW5V,UAAUkL,SAAS,kCAG9B4F,EAAM7I,OAAS7D,EAAE0M,MAAM7I,KAAKwM,KAAS3D,EAAM7I,OAAS7D,EAAE0M,MAAM7I,KAAK+O,KAClE9a,KAAKoV,UAAU2F,gBAAgBnG,GAAOoG,MAAK,SAACC,GACxC5T,OAAO6T,KAAKD,EAAc,kBAMjC,GAAIvB,EAAW5V,UAAUkL,SAAS,8BAEnC4F,EAAMQ,UAAU+F,mBAAmBH,MAAK,SAACI,GACrC,IAAIC,EAAS,gBAAkBzG,EAAM6F,OACjCvS,EAAEmI,MAAM0C,cAAcqI,KACtBA,EAAc,yCAElBlT,EAAEoT,OAAOC,KAAKH,EAAaC,WAI9B,GAAI3B,EAAW5V,UAAUkL,SAAS,oCAAqC,CACxE,IAAIwM,EAAkBxb,KAAKia,yBAAyBH,EAAe,mBAAoBtE,GAEvExV,KAAKka,8BAA8BtF,GACzC6G,WAAcD,EAAgB1X,UAAUkL,SAAS,SAE3DwM,EAAgB1X,UAAU+P,OAAO,cAGhC,GAAI6F,EAAW5V,UAAUkL,SAAS,qCAAsC,CACzE,IAAI6J,EAAWa,EAAW7a,MAEtBga,GADmB7Y,KAAKoV,UAAUsG,sBAAsB9G,KAExD5U,KAAKoV,UAAUuG,cAAc/G,EAAOiE,GACpC7Y,KAAKiX,oBAKJyC,EAAW5V,UAAUkL,SAAS,kCAEnChP,KAAK4b,yBAAyBhH,GAC9B5U,KAAK6b,aAAajH,Q,uBAMlC,SAAU8E,EAAY1U,EAAUC,GAE5B,IAAIuQ,EAAQtN,EAAEmI,MAAM0C,cAAc2G,GAAoD,GAArCA,EAAW9J,aAAa,WACpE1H,EAAEmI,MAAM0C,cAAcyC,IACvBxV,KAAKoV,UAAU0G,UAAUtG,EAAIxQ,EAAUC,K,oBAW/C,WACIjF,KAAKiX,gB,yBAUT,WAAc,WACVjX,KAAK+b,kBACL/b,KAAKgc,wBAAwBhB,MAAK,SAACiB,GAC/B,IAAItJ,EAAOzK,EAAEmK,SAASO,YAAYoD,EAAoBkG,SAAU,CAE5D,KAAQ,CACJ,cAAiBD,KAIrB,EAAKE,eACL,EAAKA,aAAanM,UAClB,EAAKmM,aAAe,MAGxB,IAAIC,EAAU,EAAKrC,uBAAuB7J,iBAAiB,sBAQ3D,GAPAD,MAAMpL,KAAKuX,GAASnP,SAAQ,SAAAoP,GACxBA,EAAOxY,oBAAoB,QAAS,EAAKyV,qBAG7C,EAAKgD,wBAAwB3J,GAC7B,EAAKoH,uBAAuBF,UAAYlH,EAAKkH,WAExC,EAAKsC,aAAc,CACpB,IAAII,EAAe,EAAKxC,uBAAuB3G,cAAc,0BAC7D,EAAK+I,aAAeK,IAAStd,OAAOqd,EAAc,CAC9C/a,UAAW,IACXb,OAAQ,+BACR8b,MAAO,SAAC9F,GAEJ,EAAKmF,UAAUnF,EAAI7R,KAAM6R,EAAI3R,SAAU2R,EAAI1R,aAKvDmX,EAAU,EAAKrC,uBAAuB7J,iBAAiB,sBACvDD,MAAMpL,KAAKuX,GAASnP,SAAQ,SAAAoP,GACxBA,EAAO1Y,iBAAiB,QAAS,EAAK2V,qBAE1C,EAAKoD,yB,mCASb,WAAwB,WAEpB1c,KAAK2c,kBAIL,IAGIC,EAHgB5c,KAAKoV,UAAUqC,oBAAmB,GAGzBjG,KAAI,SAAC0F,GAAD,OAAQ,EAAK2F,uBAAuB3F,MAErE,OAAO1E,QAAQsK,IAAIF,GAAZ,OAA4B,SAAAG,GAAG,OAAIC,QAAQC,IAAI,QAASF,Q,oCAWnE,SAAuBnI,EAAO9D,GAAO,WACjC,OAAO,IAAI0B,SAAQ,SAACC,EAASC,GAEzB,IAAIwK,EAAY,EAAKhD,8BAA8BtF,GAC/C1M,EAAEmI,MAAM0C,cAAcmK,KACtBA,EAAY,CACRpM,MAAOA,EACPqJ,WAAW,EACXsB,YAAY,GAEhB,EAAK0B,8BAA8BvI,EAAOsI,IAI9C,IAAIE,EAAaxI,EAAM6F,OACnBvS,EAAEmI,MAAM0C,cAAcqK,KACtBA,EAAaxI,EAAMzW,MACnB+J,EAAEmI,MAAM0C,cAAcqK,KACtBA,EAAa,cAAgBxI,EAAM7I,MAGvC,IAAIsR,EAAWzI,EAAM1U,QAAQmd,SAGzBC,EAAc1I,EAAM7I,OAAS7D,EAAE0M,MAAM7I,KAAKwM,KAAS3D,EAAM7I,OAAS7D,EAAE0M,MAAM7I,KAAKwR,MAAU3I,EAAM7I,OAAS7D,EAAE0M,MAAM7I,KAAK+O,IAErH0C,EAAU,KACVC,EAAa,KACbpd,EAAQuU,EAAM8I,YACL,MAATrd,IACAmd,EAAUnd,EAAMmV,GAChBiI,EAAapd,EAAMsd,OAGvB,IAAIC,EAAS,CACT,QAAWJ,EACX,WAAcC,EACd,UAAcvV,EAAEmI,MAAM0C,cAAcsK,GACpC,UAAaC,EACb,OAAU1I,EAAM1U,QAAQ2d,OACxB,WAAsC,IAAxBX,EAAU/C,UACxB,YAAwC,IAAzB+C,EAAUzB,WACzB,MAA+B,IAAtB7G,EAAMsD,YACf,SAAkC,IAAtBtD,EAAM8F,YAClB,GAAM9F,EAAMY,GACZ,KAAQZ,EAAMzW,KACd,MAASif,EACT,OAAUxI,EAAMkJ,eAChB,YAAelJ,EAAMmJ,UACrB,QAAWnJ,EAAMoJ,aACjB,WAAmC,IAArBpJ,EAAMoJ,aACpB,OAAU,GACV,YAAwC,WAAxBpJ,EAAM1U,QAAQ2d,QAA+C,YAAxBjJ,EAAM1U,QAAQ2d,OACnE,UAAqC,WAAxBjJ,EAAM1U,QAAQ2d,QAG3BjB,EAAW,IAEVhI,EAAM7I,OAAS7D,EAAE0M,MAAM7I,KAAKwM,KAAS3D,EAAM7I,OAAS7D,EAAE0M,MAAM7I,KAAK+O,KAAS5S,EAAEmI,MAAM0C,cAAcsK,KACjGT,EAAS9Z,KAAK,EAAKsS,UAAU2F,gBAAgBnG,GAAOoG,MAAK,SAACC,GACtD2C,EAAOP,SAAWpC,KADR,OAEL,SAAA8B,GAAG,OAAIC,QAAQC,IAAI,QAASF,OAInCnI,EAAM7I,OAAS7D,EAAE0M,MAAM7I,KAAKwM,KAC9BqE,EAAS9Z,KAAK,EAAKsS,UAAU8D,eAAetE,GAAOoG,MAAK,SAACiD,GACrD,IAAIlF,EAAgB,EAAK3D,UAAUsG,sBAAsB9G,GACzDgJ,EAAOK,OAASA,EAAOzM,KAAI,SAACtN,EAAO4M,GAG/B,OAFA5M,EAAMsR,GAAKZ,EAAMY,GACjBtR,EAAMga,SAAYnF,GAAiBjI,EAC5B5M,KAEX0Z,EAAOnD,OAAS7F,EAAMkJ,kBAPZ,OAQL,SAAAf,GAAG,OAAIC,QAAQC,IAAI,QAASF,OAGzCvK,QAAQsK,IAAIF,GAAU5B,MAAK,WACvBvI,EAAQmL,MADZ,OAES,SAAAb,GAAG,OAAIC,QAAQC,IAAI,QAASF,W,qCAO7C,SAAwBpK,GAAM,WACtBwL,EAAcxL,EAAKzC,iBAAiB,OACxCD,MAAMzQ,UAAUyN,QAAQlP,KAAKogB,GAAa,SAACC,GACvCA,EAAQza,iBAAiB,SAAS,SAACgT,GAC/B,IAAInB,EAAKmB,EAAI1K,OAAO2D,aAAa,WAC7BgF,EAAQ,EAAKW,cAAcC,GAC3B6I,EAAiBnW,EAAEmI,MAAMiO,eAAe,CAACpW,EAAEqW,OAAOC,UAAWtW,EAAEuW,MAAMC,eACpExW,EAAEmI,MAAM0C,cAAc6B,KACvBA,EAAM+J,aAAaN,GACnB1H,EAAI1K,OAAOlG,IAAMsY,W,oBAgBjC,SAAO/J,GACH,IAAIC,GAAS,EAIb,OAHID,aAAe0B,IACfzB,EAAUvU,KAAK7B,OAASmW,EAAInW,MAEzBoW,I,6BAIX,WAAkB,WAGDvU,KAAKkV,KAAKS,YAChB1I,SAAQ,SAAC2H,EAAO9D,GACf5I,EAAEmI,MAAMyB,YAAY8C,EAAM1U,WAC1B0U,EAAM1U,QAAU,IAGhBgI,EAAEmI,MAAM0C,cAAc6B,EAAMY,MAC5BZ,EAAMY,GAAM,EAAK6D,WAAc,IAAMzE,EAAMzW,MAG3C+J,EAAEmI,MAAM0C,cAAc6B,EAAM1U,QAAQ2d,UACpCjJ,EAAM1U,QAAQ2d,OAAS,WAGtB3V,EAAEmI,MAAM0C,cAAc6B,EAAM1U,QAAQ0e,YACrChK,EAAM+J,aAAa/J,EAAM1U,QAAQ0e,mB,iFA9aA1N,G,4zCCJ5B2N,E,qSAA0B3W,EAAEiJ,KAAKC,S,iBASpD,WAAYC,GAAQ,a,4FAAA,UAClB,gBACKC,QAAUD,GAAU,GACzB,EAAKE,WAAa,KAHA,E,kCAcpB,SAAMC,EAAKC,GACTzR,KAAKuR,WAAaC,EAClBxR,KAAKyR,QAAUA,EAEf,IAAIyE,EAAQ1E,EAAII,aAChBuE,GAAGC,QAAQhF,QAAQrT,KAAKiC,KAAM,CAC5B,QAAWyR,EACX,OAAU,OAEZyE,EAAMG,WAAWrW,Q,qBA2CnB,WACEA,KAAK0R,aACL1R,KAAKyR,QAAQE,SACb3R,KAAKuR,WAAWK,aAAaC,cAAc7R,MAC3CA,KAAKuR,WAAa,KAClBvR,KAAKyR,QAAU,U,6+EC7EEoN,G,2TA4CjB,WAAYxN,EAAQnR,GAAS,O,4FAAA,SAErBgI,EAAEmI,MAAMyB,YAAYgN,IACpB5W,EAAE8J,UAAU,sEAEhB,IAAIiC,EAAO,CACPhC,YAAa4M,EAAkBzM,KAC/BE,UAAW,6BACXC,QAAS,cAGbrS,EAAUgI,EAAEmI,MAAMM,OAAOsD,EAAM/T,GAAS,GAExC,IAAIiR,EAAO,IAAI2N,EAbU,OAezB,cAAM3N,EAAME,EAAQnR,IAOfoR,QAAUD,GAAU,GAEzB,EAAK6D,KAAO,KACZ,EAAK6J,UAAY,GACjB,EAAKC,WAAa,KAClB,EAAKC,kBAAoB,KA3BA,E,8BAlC7B,WACI,MAAO,e,oBAUX,WACI,OAAO5M,M,0BAGX,WACI,MAAO,gB,+BAEX,WACI,MAAO,2B,6BAEX,WACI,MAAO,yB,sBA0CX,SAAMb,GACF,2CAAYA,GACZxR,KAAKkV,KAAO1D,EACZxR,KAAK+e,UAAY/e,KAAKkf,oBACtBlf,KAAKif,oBAAqB/W,EAAEmI,MAAM0C,cAAc/S,KAAKsR,QAAQ2N,oBAAqBjf,KAAKsR,QAAQ2N,kBAE3F/W,EAAEmI,MAAM0C,cAAc/S,KAAKgf,aAAehf,KAAKif,oBAC/Cjf,KAAKgf,WAAaH,EAAkBM,gBAExCnf,KAAKiX,gB,oBAGT,c,yBAKA,WACI,IAAImI,EAAUpf,KAAKgc,wBAEfrJ,EAAOzK,EAAEmK,SAASO,YAAYiM,EAAkB3C,SAAU,CAE1D,KAAQkD,IAERpf,KAAK+Z,uBAAuBF,UAAYlH,EAAKkH,Y,mCAYrD,WAEI,IACIwF,EAAiB,CACjB,WAFarf,KAAK+e,UAEOvN,IAAIxR,KAAK6c,uBAAwB7c,OAQ9D,OANIA,KAAKif,oBACLI,EAAeC,cAAgB,CAC3B9J,GAAIqJ,EAAkBM,eACtBI,OAAQV,EAAkBM,gBAAkBnf,KAAKgf,aAGlDK,I,oCAWX,SAAuBG,GACnB,IAAI5K,EAAQ4K,EAAQ5K,MAEhB+I,EAAQ/I,EAAM6F,OACdvS,EAAEmI,MAAM0C,cAAc4K,KACtBA,EAAQ/I,EAAMzW,MACd+J,EAAEmI,MAAM0C,cAAc4K,KACtBA,EAAQ,aACZ,IAAIvC,EAAcxG,EAAM1U,QAAQkb,YAC5BlT,EAAEmI,MAAM0C,cAAcqI,KACtBA,EAAc,sBAAwBuC,GAC1C,IAAI8B,EAASD,EAAQE,IACjBH,EAAUvf,KAAKgf,aAAeQ,EAAQhK,GAC1C,MAAO,CACH,GAAMgK,EAAQhK,GACd,MAASmI,EACT,YAAevC,EACf,IAAOqE,EACP,OAAUF,K,uBAIlB,SAAU5M,GAAM,WACEA,EAAKS,cAAcpT,KAAKwU,yBAC9B7Q,iBAAiB,SAAS,SAACgT,GAAD,OAAS,EAAKgJ,eAAehJ,MAC/D3W,KAAKkV,KAAK5E,GAAGpI,EAAEyO,IAAIiJ,YAAY,WAC3B,EAAKZ,WAAa,KAClB,EAAKD,UAAY,EAAKG,oBACtB,EAAKjI,mB,4BAIb,SAAeN,GAEX,IAAI+C,GADJ/C,EAAOA,GAAOtP,OAAOoS,OACAxN,OACrB,IAAK/D,EAAEmI,MAAM0C,cAAc2G,IAEnBA,EAAW5V,UAAUkL,SAAS,4BAA6B,CAC3D2H,EAAI7H,kBAEJ,IAAI0G,EAAKkE,EAAW9J,aAAa,WACjC,IAAK1H,EAAEmI,MAAM0C,cAAcyC,GAAK,CAE5B,IAAIqK,EAAa7f,KAAK+Z,uBAAuB3G,cAAc,eACvD0M,EAAaD,EAAcA,EAAWjQ,aAAa,MAAQ,KAE/D,GAAI4F,GAAMsK,EAAU,CAGC9f,KAAK+Z,uBAAuB3G,cAAc,IAAMoC,GACtD1R,UAAU+P,OAAO,cAE5B,IAEI,IAAIkM,EAAY/f,KAAK0V,mBAAmB1V,KAAK+e,UAAW,KAAMvJ,GAC1DuK,GAAaA,EAAUnL,OAIvBmL,EAAUnL,MAAMQ,UAAU4K,cAAcnF,YAAW,GAEzD,MAAOoF,IAIT,IAEQH,IACAD,EAAW/b,UAAU+P,OAAO,cACZ7T,KAAK0V,mBAAmB1V,KAAK+e,UAAW,KAAMe,GACpDlL,MAAMQ,UAAU4K,cAAcnF,YAAW,IAEzD,MAAOoF,U,+BAU7B,WAAoB,WACZC,EAAWlgB,KAAKsR,QAAQ4O,SACxBC,GAAa,EAEbC,EAAiBpgB,KAAKkV,KAAKmL,gBAAgB7O,KAAI,SAACoD,GAChD,MAAO,CACH8K,IAAK,GACL9K,MAAOA,MAGf,GAAIwL,EAAe7b,OAAQ,CACvB,IAAK,IAAI3G,EAAI,EAAGA,EAAIwiB,EAAe7b,OAAQ3G,IAEnCwiB,EAAexiB,GAAGgX,MAAM8F,cAAgByF,GACxCC,EAAexiB,GAAG2hB,QAAS,EAC3BY,GAAa,GAEbC,EAAexiB,GAAG2hB,QAAS,EAPZ,Q,ioBAAA,CAWRW,GAXQ,IAWvB,2BAAyB,QAClBX,QAAS,EAZO,8BAelBY,IACDC,EAAe,GAAGxL,MAAMiG,YAAW,GACnCuF,EAAe,GAAGb,QAAS,EAC3BY,GAAa,GAEjBD,EAAW,GAAH,SAAOA,GAAP,EAAoBE,IA4DhC,OAzDIlY,EAAEmI,MAAM0C,cAAcmN,KACtBA,EAAW,IAEVhY,EAAEmI,MAAMiQ,QAAQJ,KACjBA,EAAW,CAACA,IAELA,EAAS1O,KAAI,SAAC+O,EAASzP,GAgB9B,IAAI0P,EACJ,GAfAD,EAAQ3L,MAAM0C,UAAU,GAExBiJ,EAAQ/K,GAAK,QAAU1E,GAEC,IAAnByP,EAAQhB,QAAoBrX,EAAEmI,MAAM0C,cAAc,EAAKiM,cACxD,EAAKA,WAAauB,EAAQ/K,GACrB2K,GACD,EAAKhL,UAAUoL,EAAQ3L,QAI3B1M,EAAEmI,MAAM0C,cAAcwN,EAAQb,OAC9Ba,EAAQb,IAAM,EAAKe,YAAYF,EAAQ3L,QAGvC2L,EAAQ3L,iBAAiB1M,EAAEuW,MAC3B+B,EAAYD,EAAQ3L,WAEpB,IAEI,IAAI8L,EAAYxY,EAAEwY,UAAU9L,MAAM2L,EAAQ3L,OACrC1M,EAAEmI,MAAM0C,cAAc2N,EAAU3U,MAGjC7D,EAAEoT,OAAO2E,MAAM,qDAFfO,EAAY,IAAItY,EAAE0M,MAAM8L,EAAU3U,MAAMwU,EAAQ3L,OAGtD,MAAOmI,GACL7U,EAAEoT,OAAO2E,MAAM,0BAA4BM,EAAQ3L,MAAQ,oBAqBnE,OAhBI1M,EAAEmI,MAAM0C,cAAcyN,EAAUhL,MAChCgL,EAAUhL,GAAK+K,EAAQ/K,IAM3BgL,EAAUG,aAAc,EACxBH,EAAUtI,aAAc,EACpBhQ,EAAEmI,MAAMyB,YAAY0O,EAAUtgB,WAC9BsgB,EAAUtgB,QAAU,IACxBsgB,EAAUtgB,QAAQ0gB,WAAY,EAG9BL,EAAQ3L,MAAQ4L,EAETD,O,oBAef,SAAOjM,GACH,IAAIC,GAAS,EAIb,OAHID,aAAeuK,IACftK,EAAUvU,KAAK7B,OAASmW,EAAInW,MAEzBoW,I,yBAGX,SAAYK,GACR,GAAIA,EAAM7I,OAAS7D,EAAE0M,MAAM7I,KAAKwM,IAAK,CACjC,IAAMkC,EAAS7F,EAAMkJ,eACrB,OAAIrD,GAGO7F,EAAMiM,KAAOjM,EAAMiM,IAAItV,QAAQ,MAAQ,EAAI,IAAM,KAAjDqJ,qCACUA,EAAMzW,KACnB,SAAW6B,KAAKkV,KAAK4L,eAFlBlM,2CAIO5U,KAAKkV,KAAK6L,gBAAgBC,KAAO,oBAGnD,OAAOnC,EAAkBoC,yB,mFAnVU/P,G,0LCD1BgQ,G,WAEjB,c,4FAAe,S,4DAEf,SAA8BC,GAG1B,GAAIjZ,EAAEmI,MAAM0C,cAAcoO,EAAMC,WAAY,CAExCD,EAAMC,UAAY,GAClBD,EAAMC,UAAUlZ,EAAE0M,MAAM7I,KAAKsV,SAAWnZ,EAAE0M,MAAMyM,QAAQ7hB,UAAU+U,OAClE4M,EAAMC,UAAUlZ,EAAE0M,MAAM7I,KAAKuV,KAAOpZ,EAAE0M,MAAM0M,IAAI9hB,UAAU+U,OAC1D4M,EAAMC,UAAUlZ,EAAE0M,MAAM7I,KAAKwV,QAAUrZ,EAAE0M,MAAM2M,OAAO/hB,UAAU+U,OAChE4M,EAAMC,UAAUlZ,EAAE0M,MAAM7I,KAAKyV,KAAOtZ,EAAE0M,MAAM4M,IAAIhiB,UAAU+U,OAC1D4M,EAAMC,UAAUlZ,EAAE0M,MAAM7I,KAAK+O,KAAO5S,EAAE0M,MAAMkG,IAAItb,UAAU+U,OAC1D4M,EAAMC,UAAUlZ,EAAE0M,MAAM7I,KAAKsM,KAAOnQ,EAAE0M,MAAMyD,IAAI7Y,UAAU+U,OAC1D4M,EAAMC,UAAUlZ,EAAE0M,MAAM7I,KAAKwM,KAAOrQ,EAAE0M,MAAM2D,IAAI/Y,UAAU+U,OAC1D4M,EAAMC,UAAUlZ,EAAE0M,MAAM7I,KAAKwR,MAAQrV,EAAE0M,MAAM2I,KAAK/d,UAAU+U,OAG5D,IAAI6M,EAAYD,EAAMC,UAClBK,EAAa,SAAUnN,GAOvB,OAJKpM,EAAEmI,MAAMyB,YAAY9R,KAAKwV,IAGjB4L,EAAUphB,KAAK+L,MAAMuI,GAFpBtU,KAAKwV,KAAOlB,EAAIkB,IAMlCtN,EAAE0M,MAAMyM,QAAQ7hB,UAAU+U,OAASkN,EACnCvZ,EAAE0M,MAAM0M,IAAI9hB,UAAU+U,OAASkN,EAC/BvZ,EAAE0M,MAAM2M,OAAO/hB,UAAU+U,OAASkN,EAClCvZ,EAAE0M,MAAM4M,IAAIhiB,UAAU+U,OAASkN,EAC/BvZ,EAAE0M,MAAMkG,IAAItb,UAAU+U,OAASkN,EAC/BvZ,EAAE0M,MAAMyD,IAAI7Y,UAAU+U,OAASkN,EAC/BvZ,EAAE0M,MAAM2D,IAAI/Y,UAAU+U,OAASkN,EAC/BvZ,EAAE0M,MAAM2I,KAAK/d,UAAU+U,OAASkN,K,+BAKxC,WAKIvZ,EAAEiJ,KAAKyD,MAAMkG,IAAItb,UAAUkiB,gBAAkBxZ,EAAEiJ,KAAKyD,MAAM2D,IAAI/Y,UAAUkiB,gBAGxExZ,EAAEiJ,KAAKyD,MAAM2D,IAAI/Y,UAAU2b,iBACvBjT,EAAEiJ,KAAKyD,MAAMkG,IAAItb,UAAU2b,iBAC3BjT,EAAEiJ,KAAKyD,MAAM2I,KAAK/d,UAAU2b,iBAAmB,WAC3C,OAAO,IAAI3I,QAAQ,SAAUC,EAASC,GAC7BxK,EAAEmI,MAAM0C,cAAc/S,KAAK2hB,WAI5B3hB,KAAK0hB,kBAAkB1G,KAAK,SAAUO,GAClC,IAAI+B,EAAY,KAGXpV,EAAEmI,MAAMyB,YAAYyJ,EAAKqG,sBAGpB1Z,EAAEmI,MAAMyB,YAAYyJ,EAAKsG,WAAatG,EAAKsG,SAASpD,QAC1DnB,EAAY/B,EAAKsG,SAASpD,MAAM,IAHhCnB,EAAY/B,EAAKqG,oBAAoB5hB,KAAK7B,MAI9C6B,KAAK2hB,UAAcrE,EAAaA,EAAUwE,SAAW,GACrDrP,EAAQzS,KAAK2hB,YACfviB,KAAKY,OAXP,OAWoB,SAAA+c,GAAG,OAAIrK,EAAKqK,MAdhCtK,EAAQzS,KAAK2hB,YAgBnBviB,KAAKY,QAIfkI,EAAEiJ,KAAKyD,MAAM2D,IAAI/Y,UAAUyZ,eACvB/Q,EAAEiJ,KAAKyD,MAAMkG,IAAItb,UAAUyZ,eAAiB,WAAY,WACpD,OAAO,IAAIzG,SAAQ,SAACC,EAASC,GACpBxK,EAAEmI,MAAM0C,cAAc,EAAKgP,eAI5B,EAAKL,kBAAkB1G,MAAK,SAACO,GACzB,IAAI+B,EAAY,KACZ,aAAgBpV,EAAEiJ,KAAKyD,MAAM2I,OAG7BD,EAAY/B,EAAKqG,oBAAoB,EAAKzjB,OAE9C,EAAK4jB,gBAAkBzE,KAAcA,EAAU0E,aAAe1E,EAAU0E,YAAY,GAAGC,eAIvF,IAEIC,EAAe5a,SAAS6B,cAAc,KAC1C+Y,EAAalc,KAAO,EAAK6a,KACpB,EAAKkB,eAJK,CAAC,sBAAuB,8BAA+B,2BAIlCxW,QAAQ2W,EAAaC,WAAa,EAKlEja,EAAEka,OAAO3jB,IAHe,wDAGQ,CAAE4jB,IAAK,EAAKlkB,MAAQ,CAAE,OAAS,IAAQ6c,MAAK,SAACsH,GAEzE,IAGIC,GAHS,IAAIC,WACGC,gBAAgBH,EAASI,KAAM,YAEjCpe,qBAAqB,QAGnCie,EAAKhe,SACL,EAAKwd,cAVK,0GAUyBQ,EAAK,GAAGI,WAAW,GAAGC,WAE7DnQ,EAAQ,EAAKsP,kBAXjB,OAYS,SAAAhF,GAAG,OAAIrK,EAAKqK,MAErBtK,EAAQ,EAAKsP,kBAlCrB,OAqCS,SAAAhF,GAAG,OAAIrK,EAAKqK,MAxCrBtK,EAAQ,EAAKsP,mBA8C7B7Z,EAAEiJ,KAAKyD,MAAM2D,IAAI/Y,UAAU0Z,eAAiB,WAAY,WACpD,OAAO,IAAI1G,SAAQ,SAACC,EAASC,GACpBxK,EAAEmI,MAAM0C,cAAc,EAAK8P,aAG5B,EAAKnB,kBAAkB1G,MAAK,SAACO,GACzB,IAAI+B,EAAY/B,EAAKqG,oBAAoB,EAAKzjB,MAC9C,EAAK0kB,YAAgB3a,EAAEmI,MAAM0C,cAAcuK,IAAiBpV,EAAEmI,MAAM0C,cAAcuK,EAAUwF,OAAkC,GAAxBxF,EAAUwF,MAEhH,EAAK3J,eAAiB,EACjBjR,EAAEmI,MAAM0C,cAAc,EAAK8P,YAAY,KAAQ3a,EAAEmI,MAAM0C,cAAc,EAAK8P,YAAY,GAAGE,YAC1F,EAAKpE,aAAa,EAAKkE,YAAY,GAAGE,UAAU,GAAGd,gBAEvD,EAAKY,YAAY5V,SAAQ,SAAC/I,EAAO4M,GAEzB5M,EAAM8e,MAAQ,EAAKhD,cAAciD,YAAYC,YAAYC,SACzD,EAAKhK,eAAiBrI,EACjB5I,EAAEmI,MAAM0C,cAAc7O,EAAM6e,YAC7B,EAAKpE,aAAaza,EAAM6e,UAAU,GAAGd,oBAIjDxP,EAAQ,EAAKoQ,gBAjBjB,OAkBS,SAAA9F,GAAG,OAAIrK,EAAKqK,MApBrBtK,EAAQ,EAAKoQ,iBAyBzB3a,EAAEiJ,KAAKyD,MAAM2D,IAAI/Y,UAAU4jB,iBAAmB,WAC1C,OAAKlb,EAAEmI,MAAM0C,cAAc/S,KAAK6iB,aAGrB,KAFA7iB,KAAK6iB,YAAY7iB,KAAKmZ,iBAMrCjR,EAAEiJ,KAAKyD,MAAM2D,IAAI/Y,UAAUwZ,iBAAmB,SAAUD,GACpD,IAAK7Q,EAAEmI,MAAM0C,cAAc/S,KAAK6iB,aAAc,CAC1C,IAAI3e,EAAQlE,KAAK6iB,YAAY9J,GAC7B/Y,KAAKggB,cAAciD,YAAYI,aAAa,CAAEF,OAAQjf,EAAM8e,OAC5DhjB,KAAKmZ,eAAiBJ,EAEjB7Q,EAAEmI,MAAM0C,cAAc7O,EAAM6e,YAC7B/iB,KAAK2e,aAAaza,EAAM6e,UAAU,GAAGd,kBAKjD/Z,EAAEiJ,KAAKmS,gBAAgB9jB,UAAUoiB,oBAAsB,SAAUnM,GAC7D,IACItW,EAAM,KACNokB,EAAe,KACnB,IAAKpkB,KAHKa,KAIN,IAAKkI,EAAEmI,MAAM0C,cAJP/S,KAIyBb,MAAU+I,EAAEmI,MAAMyB,YAJ3C9R,KAI2Db,GAAKqkB,YAAa,CAC/ED,EALEvjB,KAKiBb,GAAKqkB,WACxB,MAKR,IAAIjI,EAAO,KAIX,OAHKrT,EAAEmI,MAAM0C,cAAcwQ,KACvBhI,EAAOvb,KAAKyjB,8BAA8BF,EAAa9E,MAAOhJ,IAE3D8F,GAGXrT,EAAEiJ,KAAKmS,gBAAgB9jB,UAAUikB,8BAAgC,SAAU7O,EAAOa,GAC9E,IACI7X,EAAG8lB,EADHC,EAAW,KAEf,IAAKzb,EAAEmI,MAAM0C,cAAc6B,GAEvB,GAAI1M,EAAEmI,MAAMiQ,QAAQ1L,GAChB,IAAKhX,EAAI,EAAG8lB,EAAO9O,EAAMrQ,OAAS3G,EAAI8lB,GAAuB,OAAbC,EAAoB/lB,IAChE+lB,EAAW3jB,KAAKyjB,8BAA8B7O,EAAMhX,GAAI6X,QAErDvN,EAAEmI,MAAMuT,SAAShP,KAEpB1M,EAAEmI,MAAM0C,cAAc0C,IAAeb,EAAMoO,OAASvN,EACpDkO,EAAW/O,EAGL1M,EAAEmI,MAAMyB,YAAY8C,EAAM6J,SAChCkF,EAAW3jB,KAAKyjB,8BAA8B7O,EAAM6J,MAAOhJ,KAIvE,OAAOkO,GAaXzb,EAAEiJ,KAAK0S,IAAIrkB,UAAU6V,iBAAmB,SAAUJ,GAAQ,WAsBtD,OArBI/M,EAAEmI,MAAM0C,cAAckC,KACtBA,EAAS,IAER/M,EAAEmI,MAAMiQ,QAAQrL,KACjBA,EAAS,CAACA,IAGdA,EAAOhI,SAAS,SAAA6W,GAIZ,EAAKC,QAAU,EAAKA,QAAQziB,QAAQ,SAAAwD,GAAI,OAAIA,GAAQgf,KAE/CA,EAAU/X,OAAS7D,EAAE0M,MAAM7I,KAAKiY,SAAaF,EAAU/X,OAAS7D,EAAE0M,MAAM7I,KAAKsM,KAC9EyL,EAAU1O,UAAUpF,UAEnB8T,EAAU/X,MAAQ7D,EAAE0M,MAAM7I,KAAKuV,MAA+B,IAAtBwC,EAAUG,SACnD,EAAKC,iBAAiBC,YAAYL,EAAU1O,cAI7CpV,MAUXkI,EAAEiJ,KAAKyD,MAAM4M,IAAIhiB,UAAUwQ,QAAU,WACjC,IAAIkG,EAAQlW,KAAKwR,IAAII,aAChB1J,EAAEmI,MAAM0C,cAAc/S,KAAKokB,YAC5BlO,EAAMiO,YAAYnkB,KAAKokB,UACvBpkB,KAAKokB,SAAW,MAGpBpkB,KAAKwR,IAAImE,YAAY1I,SAAQ,SAAUoX,IAC/BA,aAAenc,EAAE0M,MAAM4M,KAAO6C,aAAenc,EAAE0M,MAAM2M,UACrDvhB,KAAKskB,sBAAuB,KAEjCtkB,MAEEA,KAAKskB,sBACNtkB,KAAKwR,IAAI4D,UAAUxD,aAAa2S,cAAcC,WAAWvX,SAAQ,SAAUwX,GACnEA,aAAgBtO,GAAGC,QAAQsO,aAC3B1kB,KAAKwR,IAAI4D,UAAUxD,aAAaC,cAAc4S,KAGnDzkB,MAEPA,KAAKwR,IAAM,MASftJ,EAAEiJ,KAAKsN,MAAMjf,UAAUse,aAAe,WAIlC,OAFI5V,EAAEmI,MAAM0C,cAAc/S,KAAK2kB,cAC3B3kB,KAAK2kB,WAAazc,EAAEmI,MAAMiO,eAAe,CAACpW,EAAEqW,OAAOC,UAAWtW,EAAEuW,MAAMmG,kBACnE5kB,KAAK2kB,YAGhBzc,EAAEiJ,KAAKsN,MAAMjf,UAAUmf,aAAe,SAAUkG,GAC5C7kB,KAAK2kB,WAAaE,GAStB3c,EAAEiJ,KAAK0S,IAAIiB,QAAU,GACrB5c,EAAEiJ,KAAK0S,IAAIiB,QAAQ5c,EAAE0M,MAAM7I,KAAKsM,KAAO,EACvCnQ,EAAEiJ,KAAK0S,IAAIiB,QAAQ5c,EAAE0M,MAAM7I,KAAKwM,KAAO,EACvCrQ,EAAEiJ,KAAK0S,IAAIiB,QAAQ5c,EAAE0M,MAAM7I,KAAKwR,MAAQ,EACxCrV,EAAEiJ,KAAK0S,IAAIiB,QAAQ5c,EAAE0M,MAAM7I,KAAKwV,QAAU,EAC1CrZ,EAAEiJ,KAAK0S,IAAIiB,QAAQ5c,EAAE0M,MAAM7I,KAAKyV,KAAO,EACvCtZ,EAAEiJ,KAAK0S,IAAIiB,QAAQ5c,EAAE0M,MAAM7I,KAAKuV,KAAO,EACvCpZ,EAAEiJ,KAAK0S,IAAIiB,QAAQ5c,EAAE0M,MAAM7I,KAAK+O,KAAO,M,07CCvT1BiK,G,2TAkCjB,WAAY1T,EAAQnR,GAAS,O,4FAAA,SAGzB,IAAIiR,EAAO,IAAIY,EAAwBV,GAEnC4C,EAAO,CACPhC,YAAa8S,EAAsB3S,KACnCE,UAAW,2BACXC,QAAS,mBARY,OAWzBrS,EAAUgI,EAAEmI,MAAMM,OAAOsD,EAAM/T,GAAS,IAExC,cAAMiR,EAAME,EAAQnR,IAQfoR,QAAUD,GAAU,GAEzB,EAAK2T,gBAAkB,GAGvB,EAAK9F,oBA1BoB,E,8BAxB7B,WACI,MAAO,mB,oBAUX,WACI,OAAO7M,S,uBAmDX,SAAOiC,GACH,IAAIC,GAAS,EAIb,OAHID,aAAeyQ,IACfxQ,EAAUvU,KAAK7B,OAASmW,EAAInW,MAEzBoW,I,oBAIX,WACIvU,KAAKiX,gB,yBAGT,WACI,IAAItE,EAAOzK,EAAEmK,SAASO,YAAYmS,EAAsB7I,SAAU,CAE9D,KAAQlc,KAAKgc,0BAEbhc,KAAK+Z,uBAAuBF,UAAYlH,EAAKkH,Y,uBAIrD,SAAUlH,GAAM,WACEA,EAAKS,cAAcpT,KAAKwU,yBAC9B7Q,iBAAiB,SAAS,SAACgT,GAAD,OAAS,EAAKsO,mBAAmBtO,Q,mCAMvE,WAKI,MAHmB,CACf,OAFS3W,KAAKsR,QAAQ4T,OAEL1T,IAAIxR,KAAKmlB,uBAAwBnlB,S,oCAK1D,SAAuBK,EAAOyQ,GAE1B,IAAIoM,EAAYld,KAAKka,8BAA8B7Z,GASnD,OARI6H,EAAEmI,MAAM0C,cAAcmK,KACtBA,EAAY,CACRpM,MAAOA,EACPqJ,WAAW,EACXiL,WAAW,GAEfplB,KAAKmd,8BAA8B9c,EAAO6c,IAEvC,CACH,GAAM7c,EAAMmV,GACZ,MAASnV,EAAMsd,MACf,WAAsC,IAAxBT,EAAU/C,UACxB,SAAY9Z,EAAMglB,SAAS7T,IAAIxR,KAAK6c,uBAAwB7c,MAC5D,WAAsC,IAAxBkd,EAAUkI,a,oCAGhC,SAAuBxQ,EAAO9D,GAE1B,IAAIsM,EAAaxI,EAAM6F,OAKvB,OAJIvS,EAAEmI,MAAM0C,cAAcqK,KACtBA,EAAaxI,EAAMzW,MACnB+J,EAAEmI,MAAM0C,cAAcqK,KACtBA,EAAa,gBACV,CACH,GAAMxI,EAAMY,GACZ,KAAQZ,EAAMzW,KACd,MAASif,EACT,MAAqC,IAA5Bpd,KAAKslB,YAAY1Q,M,gCAIlC,SAAmB+B,GAEf,GADAA,EAAOA,GAAOtP,OAAOoS,OAChBvR,EAAEmI,MAAM0C,cAAc4D,EAAI1K,QAAS,CACpC,IAAIyN,EAAa/C,EAAI1K,OACjBuJ,EAAKkE,EAAW9J,aAAa,WACjC,IAAK1H,EAAEmI,MAAM0C,cAAcyC,GAAK,CAC5BmB,EAAI7H,kBAEJ,IAAIgL,EAAgB9Z,KAAK+Z,uBACrBC,EAAiBha,KAAKia,yBAAyBH,EAAe,oBAAqBtE,GAGvF,GAAIkE,EAAW5V,UAAUkL,SAAS,oCAAqC,CAEnE,IAAI3O,EAAQL,KAAK0V,mBAAmB1V,KAAKsR,QAAQ4T,OAAQ,KAAM1P,GAC/CxV,KAAKka,8BAA8B7Z,GACzC8Z,WAAcH,EAAelW,UAAUkL,SAAS,SAE1D0K,EAAW5V,UAAU+P,OAAO,+BAC5B6F,EAAW5V,UAAU+P,OAAO,gCAC5BmG,EAAelW,UAAU+P,OAAO,cAG/B,GAAI6F,EAAW5V,UAAUkL,SAAS,sCAAuC,CAE1E,IAAIuW,EAAkB7L,EAAW5V,UAAUkL,SAAS,sBAAyB,qCAAuC,+BAClGgL,EAAe9J,iBAAiBqV,GAEtCtY,SAAQ,SAACnI,EAAMgM,GACvBhM,EAAK0gB,WAGT9L,EAAW5V,UAAU+P,OAAO,sBAC5B6F,EAAW5V,UAAU+P,OAAO,2BAC5B6F,EAAWiE,MAAUjE,EAAW5V,UAAUkL,SAAS,sBAAyB,mCAAqC,qCAEjH,IAAI3O,EAAQL,KAAK0V,mBAAmB1V,KAAKsR,QAAQ4T,OAAQ,KAAM1P,GAC/CxV,KAAKka,8BAA8B7Z,GACzC+kB,WAAc1L,EAAW5V,UAAUkL,SAAS,2BAGrD,GAAI0K,EAAW5V,UAAUkL,SAAS,gCAAiC,CAEpE,IAAI4F,EAAQ5U,KAAK0V,mBAAmB1V,KAAKglB,gBAAiB,KAAMxP,IAEjD,IADAkE,EAAWtN,QAEtBpM,KAAK6b,aAAajH,GAElB5U,KAAKmV,UAAUP,Q,+BAOnC,WAAoB,WACZsQ,EAASllB,KAAKsR,QAAQ4T,OAEtBhd,EAAEmI,MAAM0C,cAAcmS,KACtBA,EAAS,IACRhd,EAAEmI,MAAMiQ,QAAQ4E,KACjBA,EAAS,CAACA,IACdA,EAAOjY,SAAQ,SAAC5M,EAAOyQ,GAEf5I,EAAEmI,MAAM0C,cAAc1S,EAAMmV,MAC5BnV,EAAMmV,GAAK,gBAAkB1E,EAC7BzQ,EAAMyQ,MAAQA,GAGd5I,EAAEmI,MAAM0C,cAAc1S,EAAMH,WAC5BG,EAAMH,QAAU,IAEhBgI,EAAEmI,MAAM0C,cAAc1S,EAAMsd,SAC5Btd,EAAMsd,MAAQ,WAAa7M,GAE3B5I,EAAEmI,MAAM0C,cAAc1S,EAAMglB,YAC5BhlB,EAAMglB,SAAW,IACrBhlB,EAAMglB,SAAW,EAAKI,mBAAmBplB,EAAOA,EAAMglB,UAEtD,EAAKL,gBAAkB,EAAKA,gBAAgBU,OAAOrlB,EAAMglB,YAC1DrlB,MAEHA,KAAKsR,QAAQ4T,OAASA,I,gCAG1B,SAAmB7kB,EAAOslB,GAiCtB,OA/BKzd,EAAEmI,MAAMiQ,QAAQqF,KACjBA,EAAgB,CAACA,IAENA,EAAcnU,KAAI,SAAC1M,EAAMgM,GACpC,IAAI8U,EACJ,GAAI9gB,aAAgBoD,EAAEuW,MAClBmH,EAAU9gB,OAEV,IAEI,IAAI4b,EAAYxY,EAAEwY,UAAU9L,MAAM9P,GAC7BoD,EAAEmI,MAAM0C,cAAc2N,EAAU3U,MAGjC7D,EAAEoT,OAAO2E,MAAM,qDAFf2F,EAAU,IAAI1d,EAAE0M,MAAM8L,EAAU3U,MAAMjH,GAG5C,MAAOiY,GACL7U,EAAEoT,OAAO2E,MAAM,0BAA4Bnb,EAAO,oBAY1D,OARIoD,EAAEmI,MAAM0C,cAAc6S,EAAQ1lB,WAC9B0lB,EAAQ1lB,QAAU,IACtB0lB,EAAQ1lB,QAAQ2lB,YAAa,EAC7BD,EAAQ1lB,QAAQ2d,OAAS,WAErB3V,EAAEmI,MAAM0C,cAAc6S,EAAQpQ,MAC9BoQ,EAAQpQ,GAAK,YAAcnV,EAAMyQ,MAAQ,IAAMA,GAE5C8U,U,mFApQgC1U,G,i2CCK9B4U,G,sSAAqB5d,EAAE6d,Q,kBAmC1C,WAAYC,GAAY,a,4FAAA,UAEtB,gBACK7nB,KAAO2nB,EAAa1T,KAMzB,EAAK8C,KAAO,KAOZ,EAAK+Q,UAAY,GAGjBD,EAAaA,GAAc,GAE3B,EAAKE,QAAUF,EAAWzH,QAAU,GAQpC,EAAKjN,QAAU0U,EAAW3U,QAAU,GAOpC,EAAK8U,UAAYC,GAAI/I,SAerB,EAAKnL,SAAW8T,EAAW9lB,SAAW,GAItCghB,GAAmBmF,oBAEnBnF,GAAmBoF,uBAAnB,OAzDsB,E,8BAzBxB,WACE,MAAO,iB,oBAUT,WACE,OAAOjU,S,sBAkFT,SAAMb,GAAK,WAETxR,KAAKkV,KAAO1D,EAEZ,IAAImB,EAAO3S,KAAKumB,WAAW/U,GAEzBxR,KAAKwmB,SAAW,CACdva,OAAQ0G,EACRU,SAAU,YAAeyS,EAAa1T,KAAMgC,cAC5CX,YAAa,qBACbC,kBAAmB,yBAGrB1T,KAAKkV,KAAKuR,KAAKve,EAAEyO,IAAI+P,WAAW,WAGzBxe,EAAEmI,MAAM0C,cAAc,EAAKzB,QAAQ+L,UAetC,EAAKsJ,eAdLze,EAAEka,OAAO3jB,IAAI,EAAK6S,QAAQ+L,SAAU,KAAM,CACxC,OAAS,IACRrC,MAAK,SAACsH,IACgB,IAAnBA,EAASrC,OAIX/X,EAAEoT,OAAO2E,MAAM,mEAAoE,2BAIrF,EAAK0G,uB,8BAOf,SAAiBxoB,GACf,IAAIogB,EAASve,KAAKkmB,QAAQ/nB,IAAS,GAInC,OAHAogB,EAAOlN,OAASkN,EAAOlN,QAAU,GACjCkN,EAAOre,QAAUqe,EAAOre,SAAW,GACnCqe,EAAOre,QAAQ8S,QAAUhT,KAAKwmB,SACvBjI,I,0BAGT,WAAe,WACTqI,EAAQ,KACRrI,EAAS,KAGbA,EAASve,KAAK6mB,iBAAiB,gBAC/BD,EAAQ,IAAI5Q,EAAoBuI,EAAOlN,OAAQkN,EAAOre,SACtDF,KAAK8mB,oBAAoBF,GAGzBrI,EAASve,KAAK6mB,iBAAiB,cAC/BD,EAAQ,IAAI/H,GAAkBN,EAAOlN,OAAQkN,EAAOre,SACpDF,KAAK8mB,oBAAoBF,GAGzBrI,EAASve,KAAK6mB,iBAAiB,kBAC/BD,EAAQ,IAAI7B,GAAsBxG,EAAOlN,OAAQkN,EAAOre,SACxDF,KAAK8mB,oBAAoBF,GASzB5mB,KAAK+mB,OAAS/mB,KAAKgnB,YAEnBhnB,KAAK+mB,OAAOE,YAAYjnB,KAAKimB,WAC7BjmB,KAAK+mB,OAAOzW,GAAGpI,EAAEyO,IAAIuQ,cAAc,kBACjC,EAAKC,KAAKjf,EAAEyO,IAAIuQ,iBAElBlnB,KAAKkV,KAAKkS,UAAUpnB,KAAK+mB,U,wBAG3B,SAAWvV,GAqBT,OApBKtJ,EAAEmK,SAASO,cACd1K,EAAEmK,SAASO,YAAc,SAACyU,EAAQnnB,GAChC,IAEIonB,EADAC,EAAe,GAEdrf,EAAEmI,MAAMyB,YAAY5R,KACvBqnB,EAAerf,EAAEmI,MAAF,QAAgBkX,EAAcrnB,EAAQ2S,MACrDyU,EAAcpnB,EAAQonB,aAExB,IACME,EADaC,WAAWC,QAAQL,EACrBM,CAAWJ,GAM5B,OALoB,IAAhBD,EACiBpf,EAAEmI,MAAMuX,aAAaJ,GAErBA,IAMlBtf,EAAEmK,SAASO,YAAYkT,EAAa5J,SAAU,M,iCAMvD,SAAoB0K,GAElBA,EAAMtW,GAAGpI,EAAEyO,IAAIkR,WAAW,WACxBjB,EAAMkB,YAGR9nB,KAAKimB,UAAUnjB,KAAK8jB,K,uBAGtB,WAAY,WAENzoB,EAAU+J,EAAEmI,MAAM0C,cAAc/S,KAAKkS,SAAS6V,QAAW7f,EAAEmI,MAAM0C,cAAc/S,KAAKkS,SAAS6V,MAAM5pB,MAAoC,eAA3B6B,KAAKkS,SAAS6V,MAAM5pB,KAChI4pB,EAAQ/nB,KAAKkV,KAAK8S,UAAU7pB,GAAM,GAyBtC,OAvBI+J,EAAEmI,MAAM0C,cAAcgV,MACxBA,EAAQ,IAAI7f,EAAE+f,GAAGC,MAAM/pB,EAAM6B,KAAKmoB,qBAC5B7X,GAAGpI,EAAEyO,IAAIuQ,cAAc,SAACvU,GAC5BzK,EAAEmI,MAAM+X,kBAAkBzV,MAG5BoV,EAAMzX,GAAGpI,EAAEyO,IAAI0R,MAAM,SAAC1R,GAGpB,IADA,IAAI2R,GAAa,EAAOC,EAAQ,EAAKhE,cAC5B3mB,EAAI,EAAGA,EAAI2qB,EAAMhkB,OAAQ3G,IAChC,GAAI2qB,EAAM3qB,GAAGwnB,UAAW,CACtBkD,GAAa,EACb,MAGCA,GACS,EAAKpT,KAAKqP,YAAYvO,EAAoB5D,MAAM,GACtDoW,eAMLT,I,8BAUT,WACE,IAAI9T,EAAO,GAWX,OAVK/L,EAAEmI,MAAM0C,cAAc/S,KAAKkS,SAAS6V,SACvC9T,EAAOjU,KAAKkS,SAAS6V,OAEH,CAClBU,aAAa,EACb1kB,UAAW,kBAAsBmE,EAAEmI,MAAM0C,cAAckB,EAAKlQ,WAAuC,GAAxB,IAAMkQ,EAAKlQ,WACtF2kB,qBAAyBxgB,EAAEmI,MAAM0C,cAAckB,EAAK0U,gBAAyC,uBAAtB1U,EAAK0U,eAC5E9P,SAAa3Q,EAAEmI,MAAM0C,cAAckB,EAAK4E,UAA6B3Q,EAAE+f,GAAGpP,SAAS+P,GAA9B3U,EAAK4E,SAC1DtG,QAAYrK,EAAEmI,MAAM0C,cAAckB,EAAK1B,SAA2B,kBAAf0B,EAAK1B,W,yBAM5D,WACE,OAAOvS,KAAKimB,Y,qBAUd,WACEjmB,KAAKkV,KAAK2T,eAAe7oB,KAAKimB,WAC9BjmB,KAAKkV,KAAO,KACZlV,KAAKimB,UAAY,KACjBjmB,KAAK+mB,OAAS,KACd/mB,KAAKsR,QAAU,KACftR,KAAKkS,SAAW,KAChBlS,KAAK7B,KAAO,O,oBAWd,SAAO2qB,GACL,IAAIvU,GAAS,EAIb,OAHIuU,aAAkBhD,IACpBvR,GAAS,GAEJA,I,yBAUT,WACE,OAAOvU,KAAKmmB,e,4vDClUK4C,G,2TAkCjB,WAAY1X,EAAQnR,GAAS,O,4FAAA,SAGzB,IAAIiR,EAAO,IAAIY,EAAwBV,GAEnC4C,EAAO,CACPhC,YAAa8W,EAAiB3W,KAC9BE,UAAW,sBACXC,QAAS,aARY,OAWzBrS,EAAUgI,EAAEmI,MAAMM,OAAOsD,EAAM/T,GAAS,IAExC,cAAMiR,EAAME,EAAQnR,IAOfoR,QAAUD,GAAU,GApBA,E,8BAxB7B,WACI,MAAO,c,oBAUX,WACI,OAAOgB,S,sBAoCX,SAAMb,GAAK,WACP,2CAAYA,GAEZxR,KAAKgpB,KAAOhpB,KAAKipB,iBACjBjpB,KAAK8nB,SAEL9nB,KAAKkV,KAAK5E,GAAGpI,EAAEyO,IAAIiJ,YAAY,SAACsJ,GAC5B,EAAKF,KAAO,EAAKC,iBACjB,EAAKnB,WACN9nB,Q,4BAGP,WACI,IAAImpB,EAASnpB,KAAKkV,KAAKkU,SAAS9nB,QAAO,SAAC+nB,GACpC,OAA6B,GAArBA,EAASnL,YAEjBgL,EAAQC,EAAUA,EAAO,GAAK,KAQlC,OAPID,GAEAA,EAAIjU,OAAOhI,SAAQ,SAAC2H,EAAO9D,GACnB5I,EAAEmI,MAAM0C,cAAc6B,EAAMY,MAC5BZ,EAAMY,GAAK,OAAS1E,MAGzBoY,I,oBAGX,WACIlpB,KAAKiX,gB,yBAGT,WACI,IAAItE,EAAOzK,EAAEmK,SAASO,YAAYmW,EAAiB7M,SAAU,CAEzD,KAAQlc,KAAKgc,0BAEbhc,KAAK+Z,uBAAuBF,UAAYlH,EAAKkH,Y,uBAIrD,SAAUlH,GAAM,WACEA,EAAKS,cAAcpT,KAAKwU,yBAC9B7Q,iBAAiB,SAAS,SAACgT,GAAD,OAAS,EAAK2S,cAAc3S,Q,mCAMlE,WACI,GAAKzO,EAAEmI,MAAM0C,cAAc/S,KAAKgpB,MAkB5B,MAAO,CACH,KAAQ,GACR,UAAa,IAlBjB,IAAIO,EAAYvpB,KAAKgpB,KAAK/T,OAAO3T,QAAO,SAACsT,GAErC,IAIIwD,EAAYxD,EAAM7I,OAAS7D,EAAE0M,MAAM7I,KAAKsM,IACxCC,IAAkB1D,EAAM7I,OAAS7D,EAAE0M,MAAM7I,KAAKwM,KAAQrQ,EAAEmI,MAAM0C,cAAc6B,EAAMzW,OACtF,OAAyBia,GAAYE,IALR,KAQjC,MAAO,CACH,KAAQtY,KAAKgpB,KAAK7qB,KAClB,UAAaorB,EAAU/X,IAAIxR,KAAK6c,uBAAwB7c,S,oCAkBpE,SAAuB4U,GAEnB,IAAIwI,EAAaxI,EAAM6F,OAcvB,OAbIvS,EAAEmI,MAAM0C,cAAcqK,KACtBA,EAAaxI,EAAMzW,MAEnB+J,EAAEmI,MAAM0C,cAAcqK,KACtBA,EAAa,gBAGblV,EAAEmI,MAAM0C,cAAc6B,EAAM1U,WAC5B0U,EAAM1U,QAAU,IAChBgI,EAAEmI,MAAM0C,cAAc6B,EAAM1U,QAAQ2d,UACpCjJ,EAAM1U,QAAQspB,OAAQ,EACtB5U,EAAM1U,QAAQ2d,OAAS,OAEpB,CACH,GAAMjJ,EAAMY,GACZ,KAAQZ,EAAMzW,KACd,MAASif,EACT,MAAqC,IAA5Bpd,KAAKslB,YAAY1Q,M,2BASlC,SAAc+B,GAEV,IAAI+C,GADJ/C,EAAOA,GAAOtP,OAAOoS,OACAxN,OACrB,IAAK/D,EAAEmI,MAAM0C,cAAc2G,GAEvB,GAAIA,EAAW5V,UAAUkL,SAAS,iCAAkC,CAChE2H,EAAI7H,kBAEJ,IAAIyW,EAAkB7L,EAAW5V,UAAUkL,SAAS,sBAAyB,qCAAuC,+BAClGhP,KAAK+Z,uBAAuB7J,iBAAiBqV,GAEnDtY,SAAQ,SAACnI,EAAMgM,GACvBhM,EAAK0gB,WAGT9L,EAAW5V,UAAU+P,OAAO,sBAC5B6F,EAAW5V,UAAU+P,OAAO,2BAC5B6F,EAAWiE,MAAUjE,EAAW5V,UAAUkL,SAAS,sBAAyB,yBAA2B,+BACpG,CACH,IAAIwG,EAAKkE,EAAW9J,aAAa,WACjC,IAAK1H,EAAEmI,MAAM0C,cAAcyC,GAAK,CAC5BmB,EAAI7H,kBAEJ,IAAI8F,EAAQ5U,KAAK0V,mBAAmB1V,KAAKgpB,KAAK/T,OAAQ,KAAMO,GAExDkE,EAAW5V,UAAUkL,SAAS,8BAEf,IADFhP,KAAKslB,YAAY1Q,IAE1B5U,KAAK6b,aAAajH,GAClB5U,KAAK4b,yBAAyBhH,IAE9B5U,KAAKmV,UAAUP,Q,oBAiBvC,SAAON,GACH,IAAIC,GAAS,EAIb,OAHID,aAAeyU,IACfxU,EAAUvU,KAAK7B,OAASmW,EAAInW,MAEzBoW,O,mFA9N+BrD,GCGzC7J,OAAOa,EAAEkO,UAAS/O,OAAOa,EAAEkO,QAAU,IACrC/O,OAAOa,EAAE4gB,SAAQzhB,OAAOa,EAAE4gB,OAAS,IACnCzhB,OAAOa,EAAEiJ,OAAM9J,OAAOa,EAAEiJ,KAAO,IAC/B9J,OAAOa,EAAEiJ,KAAKiF,UAAS/O,OAAOa,EAAEiJ,KAAKiF,QAAU,IACpD/O,OAAOa,EAAEkO,QAAQJ,oBAAsByT,EACvCpiB,OAAOa,EAAE4gB,OAAOjK,kBAAoB6K,GACpCriB,OAAOa,EAAE4gB,OAAOhD,aAAe6D,GAC/BtiB,OAAOa,EAAEkO,QAAQlF,oBAAsB0Y,EACvCviB,OAAOa,EAAEkO,QAAQ2O,sBAAwB8E,GACzCxiB,OAAOa,EAAEkO,QAAQ2S,iBAAmBe,GACpCziB,OAAOa,EAAEiJ,KAAKiF,QAAQJ,oBAAsB+T,EAC5C1iB,OAAOa,EAAEiJ,KAAKiF,QAAQyI,kBAAoBmL,EAC1C3iB,OAAOa,EAAEiJ,KAAKiF,QAAQlF,oBAAsB+Y","file":"managelayers.ol.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 9);\n","module.exports = \"<div class=\\\"m-control m-managelayers-{{baseName}}\\\">\\r\\n\\t<div id=\\\"toolbar-button-{{baseName}}\\\" class=\\\"m-toolbar-button m-toolbar-button-{{baseName}}\\\">\\r\\n\\t\\t<button id=\\\"tool-btn-{{baseName}}\\\" class=\\\"m-tool-button {{iconClass}}\\\" title=\\\"{{tooltip}}\\\"></button>\\r\\n\\t</div>\\r\\n\\t<div id=\\\"toolbar-container-{{baseName}}\\\" class=\\\"m-toolbar-container m-toolbar-container-{{baseName}} dNone\\\" title=\\\"\\\">\\r\\n\\t\\t<div id=\\\"tool-{{baseName}}\\\" class=\\\"m-tool-container m-tool-container-{{baseName}}\\\">\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n</div>\";","/*! Sortable 1.7.0 - MIT | git://github.com/rubaxa/Sortable.git */\r\n!function (t) { \"use strict\"; \"function\" == typeof define && define.amd ? define(t) : \"undefined\" != typeof module && void 0 !== module.exports ? module.exports = t() : window.Sortable = t(); }(function () { \"use strict\"; function t(e, n) { if (!e || !e.nodeType || 1 !== e.nodeType) throw \"Sortable: `el` must be HTMLElement, and not \" + {}.toString.call(e); this.el = e, this.options = n = b({}, n), e[z] = this; var o = { group: Math.random(), sort: !0, disabled: !1, store: null, handle: null, scroll: !0, scrollSensitivity: 30, scrollSpeed: 10, draggable: /[uo]l/i.test(e.nodeName) ? \"li\" : \">*\", ghostClass: \"sortable-ghost\", chosenClass: \"sortable-chosen\", dragClass: \"sortable-drag\", ignore: \"a, img\", filter: null, preventOnFilter: !0, animation: 0, setData: function (t, e) { t.setData(\"Text\", e.textContent); }, dropBubble: !1, dragoverBubble: !1, dataIdAttr: \"data-id\", delay: 0, forceFallback: !1, fallbackClass: \"sortable-fallback\", fallbackOnBody: !1, fallbackTolerance: 0, fallbackOffset: { x: 0, y: 0 }, supportPointer: !1 !== t.supportPointer }; for (var i in o) !(i in n) && (n[i] = o[i]); dt(n); for (var a in this) \"_\" === a.charAt(0) && \"function\" == typeof this[a] && (this[a] = this[a].bind(this)); this.nativeDraggable = !n.forceFallback && nt, r(e, \"mousedown\", this._onTapStart), r(e, \"touchstart\", this._onTapStart), n.supportPointer && r(e, \"pointerdown\", this._onTapStart), this.nativeDraggable && (r(e, \"dragover\", this), r(e, \"dragenter\", this)), st.push(this._onDragOver), n.store && this.sort(n.store.get(this)); } function e(t, e) { \"clone\" !== t.lastPullMode && (e = !0), x && x.state !== e && (s(x, \"display\", e ? \"none\" : \"\"), e || x.state && (t.options.group.revertClone ? (N.insertBefore(x, k), t._animate(C, x)) : N.insertBefore(x, C)), x.state = e); } function n(t, e, n) { if (t) { n = n || Q; do { if (\">*\" === e && t.parentNode === n || m(t, e)) return t; } while (t = o(t)); } return null; } function o(t) { var e = t.host; return e && e.nodeType ? e : t.parentNode; } function i(t) { t.dataTransfer && (t.dataTransfer.dropEffect = \"move\"), t.preventDefault(); } function r(t, e, n) { t.addEventListener(e, n, tt); } function a(t, e, n) { t.removeEventListener(e, n, tt); } function l(t, e, n) { if (t) if (t.classList) t.classList[n ? \"add\" : \"remove\"](e); else { var o = (\" \" + t.className + \" \").replace(V, \" \").replace(\" \" + e + \" \", \" \"); t.className = (o + (n ? \" \" + e : \"\")).replace(V, \" \"); } } function s(t, e, n) { var o = t && t.style; if (o) { if (void 0 === n) return Q.defaultView && Q.defaultView.getComputedStyle ? n = Q.defaultView.getComputedStyle(t, \"\") : t.currentStyle && (n = t.currentStyle), void 0 === e ? n : n[e]; e in o || (e = \"-webkit-\" + e), o[e] = n + (\"string\" == typeof n ? \"\" : \"px\"); } } function c(t, e, n) { if (t) { var o = t.getElementsByTagName(e), i = 0, r = o.length; if (n) for (; i < r; i++)n(o[i], i); return o; } return []; } function d(t, e, n, o, i, r, a, l) { t = t || e[z]; var s = Q.createEvent(\"Event\"), c = t.options, d = \"on\" + n.charAt(0).toUpperCase() + n.substr(1); s.initEvent(n, !0, !0), s.to = i || e, s.from = r || e, s.item = o || e, s.clone = x, s.oldIndex = a, s.newIndex = l, e.dispatchEvent(s), c[d] && c[d].call(t, s); } function h(t, e, n, o, i, r, a, l) { var s, c, d = t[z], h = d.options.onMove; return (s = Q.createEvent(\"Event\")).initEvent(\"move\", !0, !0), s.to = e, s.from = t, s.dragged = n, s.draggedRect = o, s.related = i || e, s.relatedRect = r || e.getBoundingClientRect(), s.willInsertAfter = l, t.dispatchEvent(s), h && (c = h.call(d, s, a)), c; } function u(t) { t.draggable = !1; } function p() { it = !1; } function f(t, e) { var n = t.lastElementChild.getBoundingClientRect(); return e.clientY - (n.top + n.height) > 5 || e.clientX - (n.left + n.width) > 5; } function g(t) { for (var e = t.tagName + t.className + t.src + t.href + t.textContent, n = e.length, o = 0; n--;)o += e.charCodeAt(n); return o.toString(36); } function v(t, e) { var n = 0; if (!t || !t.parentNode) return -1; for (; t && (t = t.previousElementSibling);)\"TEMPLATE\" === t.nodeName.toUpperCase() || \">*\" !== e && !m(t, e) || n++; return n; } function m(t, e) { if (t) { var n = (e = e.split(\".\")).shift().toUpperCase(), o = new RegExp(\"\\\\s(\" + e.join(\"|\") + \")(?=\\\\s)\", \"g\"); return !(\"\" !== n && t.nodeName.toUpperCase() != n || e.length && ((\" \" + t.className + \" \").match(o) || []).length != e.length); } return !1; } function _(t, e) { var n, o; return function () { void 0 === n && (n = arguments, o = this, J(function () { 1 === n.length ? t.call(o, n[0]) : t.apply(o, n), n = void 0; }, e)); }; } function b(t, e) { if (t && e) for (var n in e) e.hasOwnProperty(n) && (t[n] = e[n]); return t; } function D(t) { return $ && $.dom ? $.dom(t).cloneNode(!0) : K ? K(t).clone(!0)[0] : t.cloneNode(!0); } function y(t) { lt.length = 0; for (var e = t.getElementsByTagName(\"input\"), n = e.length; n--;) { var o = e[n]; o.checked && lt.push(o); } } function w(t) { return J(t, 0); } function T(t) { return clearTimeout(t); } if (\"undefined\" == typeof window || !window.document) return function () { throw new Error(\"Sortable.js requires a window with a document\"); }; var C, S, E, x, N, k, B, P, Y, X, O, I, R, A, M, L, F, U, j, H, W = {}, V = /\\s+/g, q = /left|right|inline/, z = \"Sortable\" + (new Date).getTime(), G = window, Q = G.document, Z = G.parseInt, J = G.setTimeout, K = G.jQuery || G.Zepto, $ = G.Polymer, tt = !1, et = !1, nt = \"draggable\" in Q.createElement(\"div\"), ot = function (t) { return !navigator.userAgent.match(/(?:Trident.*rv[ :]?11\\.|msie)/i) && (t = Q.createElement(\"x\"), t.style.cssText = \"pointer-events:auto\", \"auto\" === t.style.pointerEvents); }(), it = !1, rt = Math.abs, at = Math.min, lt = [], st = [], ct = _(function (t, e, n) { if (n && e.scroll) { var o, i, r, a, l, s, c = n[z], d = e.scrollSensitivity, h = e.scrollSpeed, u = t.clientX, p = t.clientY, f = window.innerWidth, g = window.innerHeight; if (Y !== n && (P = e.scroll, Y = n, X = e.scrollFn, !0 === P)) { P = n; do { if (P.offsetWidth < P.scrollWidth || P.offsetHeight < P.scrollHeight) break; } while (P = P.parentNode); } P && (o = P, i = P.getBoundingClientRect(), r = (rt(i.right - u) <= d) - (rt(i.left - u) <= d), a = (rt(i.bottom - p) <= d) - (rt(i.top - p) <= d)), r || a || (a = (g - p <= d) - (p <= d), ((r = (f - u <= d) - (u <= d)) || a) && (o = G)), W.vx === r && W.vy === a && W.el === o || (W.el = o, W.vx = r, W.vy = a, clearInterval(W.pid), o && (W.pid = setInterval(function () { if (s = a ? a * h : 0, l = r ? r * h : 0, \"function\" == typeof X) return X.call(c, l, s, t); o === G ? G.scrollTo(G.pageXOffset + l, G.pageYOffset + s) : (o.scrollTop += s, o.scrollLeft += l); }, 24))); } }, 30), dt = function (t) { function e(t, e) { return void 0 !== t && !0 !== t || (t = n.name), \"function\" == typeof t ? t : function (n, o) { var i = o.options.group.name; return e ? t : t && (t.join ? t.indexOf(i) > -1 : i == t); }; } var n = {}, o = t.group; o && \"object\" == typeof o || (o = { name: o }), n.name = o.name, n.checkPull = e(o.pull, !0), n.checkPut = e(o.put), n.revertClone = o.revertClone, t.group = n; }; try { window.addEventListener(\"test\", null, Object.defineProperty({}, \"passive\", { get: function () { tt = { capture: !1, passive: et = !1 }; } })); } catch (t) { } return t.prototype = { constructor: t, _onTapStart: function (t) { var e, o = this, i = this.el, r = this.options, a = r.preventOnFilter, l = t.type, s = t.touches && t.touches[0], c = (s || t).target, h = t.target.shadowRoot && t.path && t.path[0] || c, u = r.filter; if (y(i), !C && !(/mousedown|pointerdown/.test(l) && 0 !== t.button || r.disabled) && !h.isContentEditable && (c = n(c, r.draggable, i)) && B !== c) { if (e = v(c, r.draggable), \"function\" == typeof u) { if (u.call(this, t, c, this)) return d(o, h, \"filter\", c, i, i, e), void (a && t.preventDefault()); } else if (u && (u = u.split(\",\").some(function (t) { if (t = n(h, t.trim(), i)) return d(o, t, \"filter\", c, i, i, e), !0; }))) return void (a && t.preventDefault()); r.handle && !n(h, r.handle, i) || this._prepareDragStart(t, s, c, e); } }, _prepareDragStart: function (t, e, n, o) { var i, a = this, s = a.el, h = a.options, p = s.ownerDocument; n && !C && n.parentNode === s && (U = t, N = s, S = (C = n).parentNode, k = C.nextSibling, B = n, L = h.group, A = o, this._lastX = (e || t).clientX, this._lastY = (e || t).clientY, C.style[\"will-change\"] = \"all\", i = function () { a._disableDelayedDrag(), C.draggable = a.nativeDraggable, l(C, h.chosenClass, !0), a._triggerDragStart(t, e), d(a, N, \"choose\", C, N, N, A); }, h.ignore.split(\",\").forEach(function (t) { c(C, t.trim(), u); }), r(p, \"mouseup\", a._onDrop), r(p, \"touchend\", a._onDrop), r(p, \"touchcancel\", a._onDrop), r(p, \"selectstart\", a), h.supportPointer && r(p, \"pointercancel\", a._onDrop), h.delay ? (r(p, \"mouseup\", a._disableDelayedDrag), r(p, \"touchend\", a._disableDelayedDrag), r(p, \"touchcancel\", a._disableDelayedDrag), r(p, \"mousemove\", a._disableDelayedDrag), r(p, \"touchmove\", a._disableDelayedDrag), h.supportPointer && r(p, \"pointermove\", a._disableDelayedDrag), a._dragStartTimer = J(i, h.delay)) : i()); }, _disableDelayedDrag: function () { var t = this.el.ownerDocument; clearTimeout(this._dragStartTimer), a(t, \"mouseup\", this._disableDelayedDrag), a(t, \"touchend\", this._disableDelayedDrag), a(t, \"touchcancel\", this._disableDelayedDrag), a(t, \"mousemove\", this._disableDelayedDrag), a(t, \"touchmove\", this._disableDelayedDrag), a(t, \"pointermove\", this._disableDelayedDrag); }, _triggerDragStart: function (t, e) { (e = e || (\"touch\" == t.pointerType ? t : null)) ? (U = { target: C, clientX: e.clientX, clientY: e.clientY }, this._onDragStart(U, \"touch\")) : this.nativeDraggable ? (r(C, \"dragend\", this), r(N, \"dragstart\", this._onDragStart)) : this._onDragStart(U, !0); try { Q.selection ? w(function () { Q.selection.empty(); }) : window.getSelection().removeAllRanges(); } catch (t) { } }, _dragStarted: function () { if (N && C) { var e = this.options; l(C, e.ghostClass, !0), l(C, e.dragClass, !1), t.active = this, d(this, N, \"start\", C, N, N, A); } else this._nulling(); }, _emulateDragOver: function () { if (j) { if (this._lastX === j.clientX && this._lastY === j.clientY) return; this._lastX = j.clientX, this._lastY = j.clientY, ot || s(E, \"display\", \"none\"); var t = Q.elementFromPoint(j.clientX, j.clientY), e = t, n = st.length; if (t && t.shadowRoot && (e = t = t.shadowRoot.elementFromPoint(j.clientX, j.clientY)), e) do { if (e[z]) { for (; n--;)st[n]({ clientX: j.clientX, clientY: j.clientY, target: t, rootEl: e }); break; } t = e; } while (e = e.parentNode); ot || s(E, \"display\", \"\"); } }, _onTouchMove: function (e) { if (U) { var n = this.options, o = n.fallbackTolerance, i = n.fallbackOffset, r = e.touches ? e.touches[0] : e, a = r.clientX - U.clientX + i.x, l = r.clientY - U.clientY + i.y, c = e.touches ? \"translate3d(\" + a + \"px,\" + l + \"px,0)\" : \"translate(\" + a + \"px,\" + l + \"px)\"; if (!t.active) { if (o && at(rt(r.clientX - this._lastX), rt(r.clientY - this._lastY)) < o) return; this._dragStarted(); } this._appendGhost(), H = !0, j = r, s(E, \"webkitTransform\", c), s(E, \"mozTransform\", c), s(E, \"msTransform\", c), s(E, \"transform\", c), e.preventDefault(); } }, _appendGhost: function () { if (!E) { var t, e = C.getBoundingClientRect(), n = s(C), o = this.options; l(E = C.cloneNode(!0), o.ghostClass, !1), l(E, o.fallbackClass, !0), l(E, o.dragClass, !0), s(E, \"top\", e.top - Z(n.marginTop, 10)), s(E, \"left\", e.left - Z(n.marginLeft, 10)), s(E, \"width\", e.width), s(E, \"height\", e.height), s(E, \"opacity\", \"0.8\"), s(E, \"position\", \"fixed\"), s(E, \"zIndex\", \"100000\"), s(E, \"pointerEvents\", \"none\"), o.fallbackOnBody && Q.body.appendChild(E) || N.appendChild(E), t = E.getBoundingClientRect(), s(E, \"width\", 2 * e.width - t.width), s(E, \"height\", 2 * e.height - t.height); } }, _onDragStart: function (t, e) { var n = this, o = t.dataTransfer, i = n.options; n._offUpEvents(), L.checkPull(n, n, C, t) && ((x = D(C)).draggable = !1, x.style[\"will-change\"] = \"\", s(x, \"display\", \"none\"), l(x, n.options.chosenClass, !1), n._cloneId = w(function () { N.insertBefore(x, C), d(n, N, \"clone\", C); })), l(C, i.dragClass, !0), e ? (\"touch\" === e ? (r(Q, \"touchmove\", n._onTouchMove), r(Q, \"touchend\", n._onDrop), r(Q, \"touchcancel\", n._onDrop), i.supportPointer && (r(Q, \"pointermove\", n._onTouchMove), r(Q, \"pointerup\", n._onDrop))) : (r(Q, \"mousemove\", n._onTouchMove), r(Q, \"mouseup\", n._onDrop)), n._loopId = setInterval(n._emulateDragOver, 50)) : (o && (o.effectAllowed = \"move\", i.setData && i.setData.call(n, o, C)), r(Q, \"drop\", n), n._dragStartId = w(n._dragStarted)); }, _onDragOver: function (o) { var i, r, a, l, c = this.el, d = this.options, u = d.group, g = t.active, v = L === u, m = !1, _ = d.sort; if (void 0 !== o.preventDefault && (o.preventDefault(), !d.dragoverBubble && o.stopPropagation()), !C.animated && (H = !0, g && !d.disabled && (v ? _ || (l = !N.contains(C)) : F === this || (g.lastPullMode = L.checkPull(this, g, C, o)) && u.checkPut(this, g, C, o)) && (void 0 === o.rootEl || o.rootEl === this.el))) { if (ct(o, d, this.el), it) return; if (i = n(o.target, d.draggable, c), r = C.getBoundingClientRect(), F !== this && (F = this, m = !0), l) return e(g, !0), S = N, void (x || k ? N.insertBefore(C, x || k) : _ || N.appendChild(C)); if (0 === c.children.length || c.children[0] === E || c === o.target && f(c, o)) { if (0 !== c.children.length && c.children[0] !== E && c === o.target && (i = c.lastElementChild), i) { if (i.animated) return; a = i.getBoundingClientRect(); } e(g, v), !1 !== h(N, c, C, r, i, a, o) && (C.contains(c) || (c.appendChild(C), S = c), this._animate(r, C), i && this._animate(a, i)); } else if (i && !i.animated && i !== C && void 0 !== i.parentNode[z]) { O !== i && (O = i, I = s(i), R = s(i.parentNode)); var b = (a = i.getBoundingClientRect()).right - a.left, D = a.bottom - a.top, y = q.test(I.cssFloat + I.display) || \"flex\" == R.display && 0 === R[\"flex-direction\"].indexOf(\"row\"), w = i.offsetWidth > C.offsetWidth, T = i.offsetHeight > C.offsetHeight, B = (y ? (o.clientX - a.left) / b : (o.clientY - a.top) / D) > .5, P = i.nextElementSibling, Y = !1; if (y) { var X = C.offsetTop, A = i.offsetTop; Y = X === A ? i.previousElementSibling === C && !w || B && w : i.previousElementSibling === C || C.previousElementSibling === i ? (o.clientY - a.top) / D > .5 : A > X; } else m || (Y = P !== C && !T || B && T); var M = h(N, c, C, r, i, a, o, Y); !1 !== M && (1 !== M && -1 !== M || (Y = 1 === M), it = !0, J(p, 30), e(g, v), C.contains(c) || (Y && !P ? c.appendChild(C) : i.parentNode.insertBefore(C, Y ? P : i)), S = C.parentNode, this._animate(r, C), this._animate(a, i)); } } }, _animate: function (t, e) { var n = this.options.animation; if (n) { var o = e.getBoundingClientRect(); 1 === t.nodeType && (t = t.getBoundingClientRect()), s(e, \"transition\", \"none\"), s(e, \"transform\", \"translate3d(\" + (t.left - o.left) + \"px,\" + (t.top - o.top) + \"px,0)\"), e.offsetWidth, s(e, \"transition\", \"all \" + n + \"ms\"), s(e, \"transform\", \"translate3d(0,0,0)\"), clearTimeout(e.animated), e.animated = J(function () { s(e, \"transition\", \"\"), s(e, \"transform\", \"\"), e.animated = !1; }, n); } }, _offUpEvents: function () { var t = this.el.ownerDocument; a(Q, \"touchmove\", this._onTouchMove), a(Q, \"pointermove\", this._onTouchMove), a(t, \"mouseup\", this._onDrop), a(t, \"touchend\", this._onDrop), a(t, \"pointerup\", this._onDrop), a(t, \"touchcancel\", this._onDrop), a(t, \"pointercancel\", this._onDrop), a(t, \"selectstart\", this); }, _onDrop: function (e) { var n = this.el, o = this.options; clearInterval(this._loopId), clearInterval(W.pid), clearTimeout(this._dragStartTimer), T(this._cloneId), T(this._dragStartId), a(Q, \"mouseover\", this), a(Q, \"mousemove\", this._onTouchMove), this.nativeDraggable && (a(Q, \"drop\", this), a(n, \"dragstart\", this._onDragStart)), this._offUpEvents(), e && (H && (e.preventDefault(), !o.dropBubble && e.stopPropagation()), E && E.parentNode && E.parentNode.removeChild(E), N !== S && \"clone\" === t.active.lastPullMode || x && x.parentNode && x.parentNode.removeChild(x), C && (this.nativeDraggable && a(C, \"dragend\", this), u(C), C.style[\"will-change\"] = \"\", l(C, this.options.ghostClass, !1), l(C, this.options.chosenClass, !1), d(this, N, \"unchoose\", C, S, N, A), N !== S ? (M = v(C, o.draggable)) >= 0 && (d(null, S, \"add\", C, S, N, A, M), d(this, N, \"remove\", C, S, N, A, M), d(null, S, \"sort\", C, S, N, A, M), d(this, N, \"sort\", C, S, N, A, M)) : C.nextSibling !== k && (M = v(C, o.draggable)) >= 0 && (d(this, N, \"update\", C, S, N, A, M), d(this, N, \"sort\", C, S, N, A, M)), t.active && (null != M && -1 !== M || (M = A), d(this, N, \"end\", C, S, N, A, M), this.save()))), this._nulling(); }, _nulling: function () { N = C = S = E = k = x = B = P = Y = U = j = H = M = O = I = F = L = t.active = null, lt.forEach(function (t) { t.checked = !0; }), lt.length = 0; }, handleEvent: function (t) { switch (t.type) { case \"drop\": case \"dragend\": this._onDrop(t); break; case \"dragover\": case \"dragenter\": C && (this._onDragOver(t), i(t)); break; case \"mouseover\": this._onDrop(t); break; case \"selectstart\": t.preventDefault(); } }, toArray: function () { for (var t, e = [], o = this.el.children, i = 0, r = o.length, a = this.options; i < r; i++)n(t = o[i], a.draggable, this.el) && e.push(t.getAttribute(a.dataIdAttr) || g(t)); return e; }, sort: function (t) { var e = {}, o = this.el; this.toArray().forEach(function (t, i) { var r = o.children[i]; n(r, this.options.draggable, o) && (e[t] = r); }, this), t.forEach(function (t) { e[t] && (o.removeChild(e[t]), o.appendChild(e[t])); }); }, save: function () { var t = this.options.store; t && t.set(this); }, closest: function (t, e) { return n(t, e || this.options.draggable, this.el); }, option: function (t, e) { var n = this.options; if (void 0 === e) return n[t]; n[t] = e, \"group\" === t && dt(n); }, destroy: function () { var t = this.el; t[z] = null, a(t, \"mousedown\", this._onTapStart), a(t, \"touchstart\", this._onTapStart), a(t, \"pointerdown\", this._onTapStart), this.nativeDraggable && (a(t, \"dragover\", this), a(t, \"dragenter\", this)), Array.prototype.forEach.call(t.querySelectorAll(\"[draggable]\"), function (t) { t.removeAttribute(\"draggable\"); }), st.splice(st.indexOf(this._onDragOver), 1), this._onDrop(), this.el = t = null; } }, r(Q, \"touchmove\", function (e) { t.active && e.preventDefault(); }), t.utils = { on: r, off: a, css: s, find: c, is: function (t, e) { return !!n(t, e, t); }, extend: b, throttle: _, closest: n, toggleClass: l, clone: D, index: v, nextTick: w, cancelNextTick: T }, t.create = function (e, n) { return new t(e, n); }, t.version = \"1.7.0\", t; });","module.exports = \"<div id=\\\"tool-activelayers\\\">\\r\\n\\t<div id=\\\"toc-activelayers\\\" class=\\\"m-toc-activelayers sortable-activelayers\\\">\\r\\n\\t\\t{{#each overlayLayers}}\\r\\n\\t\\t<div id=\\\"tocLayer_{{id}}\\\" data-id=\\\"{{id}}\\\" class=\\\"toc-item-layer\\\">\\r\\n\\t\\t\\t<div id=\\\"titleTocLayer_{{id}}\\\" class=\\\"toc-item-layer-header {{#if outOfRange}}out-of-range{{/if}}{{#if visible}} visible{{/if}}\\\">\\r\\n\\t\\t\\t\\t<div class=\\\"m-area-accion-activelayers-collapse\\\">\\r\\n\\t\\t\\t\\t\\t<button data-id=\\\"{{id}}\\\" class=\\\"m-accion-activelayers-collapse {{#if collapsed}}g-cartografia-flecha-abajo2{{else}}g-cartografia-flecha-arriba2{{/if}}\\\"\\r\\n\\t\\t\\t\\t\\t title=\\\"Opciones de capa\\\"></button>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<div class=\\\"m-area-title\\\">\\r\\n\\t\\t\\t\\t\\t<div id=\\\"textTitleLayer_{{id}}\\\" title=\\\"{{title}}\\\" class=\\\"m-title\\\">{{groupTitle}}-{{title}}</div>\\r\\n\\t\\t\\t\\t\\t{{#if canEditName}}\\r\\n\\t\\t\\t\\t\\t<div class=\\\"m-button\\\">\\r\\n\\t\\t\\t\\t\\t\\t<button data-id=\\\"{{id}}\\\" class=\\\"m-accion-activelayers-rename g-cartografia-editar\\\" title=\\\"Cambiar nombre\\\"></button>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t{{/if}}\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<div class=\\\"m-area-activate\\\" title=\\\"Activar/Desactivar capa\\\">\\r\\n\\t\\t\\t\\t\\t<input type=\\\"checkbox\\\" data-id=\\\"{{id}}\\\" class=\\\"m-accion-activelayers-activate\\\" {{#if visible}} checked{{/if}}> </input>\\r\\n\\t\\t\\t\\t\\t </div> <div class=\\\"m-area-origin\\\">\\r\\n\\t\\t\\t\\t\\t<span>{{origen}}</span>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<div class=\\\"m-area-order-hook\\\" title=\\\"Orden de capas\\\">\\r\\n\\t\\t\\t\\t\\t<div class=\\\"m-accion-activelayers-order\\\">\\r\\n\\t\\t\\t\\t\\t\\t<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 50 50\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<path d=\\\"M25 0c-.254 0-.523.086-.719.281l-7 7a1.005 1.005 0 0 0-.218 1.094c.156.371.535.625.937.625h14.031c.551 0 1-.45 1-1a1.01 1.01 0 0 0-.437-.813L25.719.282A1.015 1.015 0 0 0 25 0zM2 13v4h46v-4zm0 10v4h46v-4zm0 10v4h46v-4zm16 8c-.402 0-.781.25-.938.625-.156.375-.066.809.22 1.094l7 7c.195.195.46.281.718.281.258 0 .523-.086.719-.281l7-7c.285-.285.375-.719.218-1.094A1.023 1.023 0 0 0 32 41z\\\" />\\r\\n\\t\\t\\t\\t\\t\\t</svg>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<div id=\\\"optionsTocLayer_{{id}}\\\" class=\\\"toc-item-layer-options{{#if collapsed}} dNone{{/if}}\\\">\\r\\n\\t\\t\\t\\t<div class=\\\"layer-option-row\\\">\\r\\n\\t\\t\\t\\t\\t<div class=\\\"transparency-control\\\">\\r\\n\\t\\t\\t\\t\\t\\t<input type=\\\"range\\\" data-id=\\\"{{id}}\\\" title=\\\"Nivel de transparencia\\\" class=\\\"m-accion-activelayers-transparency\\\"\\r\\n\\t\\t\\t\\t\\t\\t min=\\\"0\\\" max=\\\"1\\\" step=\\\"0.1\\\" value=\\\"{{opacity}}\\\" {{#unless visible}} disabled {{/unless}} {{#if outOfRange}}\\r\\n\\t\\t\\t\\t\\t\\t disabled{{/if}}/> <span class=\\\"transparency-percentage\\\">{{opacityPer}}%</span>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t{{#gt styles.length 1}}\\r\\n\\t\\t\\t\\t\\t<div>\\r\\n\\t\\t\\t\\t\\t\\t<button data-id=\\\"{{id}}\\\" class=\\\"m-accion-activelayers-showstyles g-cartografia-lista\\\" title=\\\"Estilos de la capa\\\"></button>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t{{/gt}} {{#if metadata}}\\r\\n\\t\\t\\t\\t\\t<div>\\r\\n\\t\\t\\t\\t\\t\\t<button data-id=\\\"{{id}}\\\" class=\\\"m-accion-activelayers-metadata g-cartografia-texto\\\" title=\\\"Ver metadatos\\\"></button>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t{{/if}} {{#if infoLayer}}\\r\\n\\t\\t\\t\\t\\t<div>\\r\\n\\t\\t\\t\\t\\t\\t<button data-id=\\\"{{id}}\\\" class=\\\"m-accion-activelayers-info g-cartografia-info\\\" title=\\\"Información de la capa\\\"></button>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t{{/if}}\\r\\n\\t\\t\\t\\t\\t{{#if canRemove}}\\r\\n\\t\\t\\t\\t\\t<div>\\r\\n\\t\\t\\t\\t\\t\\t<!-- <span data-id=\\\"{{id}}\\\" class=\\\"m-accion-activelayers-remove g-cartografia-papelera\\\"></span> -->\\r\\n\\t\\t\\t\\t\\t\\t<button data-id=\\\"{{id}}\\\" class=\\\"m-accion-activelayers-remove g-cartografia-papelera\\\" title=\\\"Eliminar capa\\\"></button>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t{{/if}}\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<div class=\\\"layer-option-row\\\">\\r\\n\\t\\t\\t\\t\\t<div class=\\\"legend\\\">\\r\\n\\t\\t\\t\\t\\t\\t<h3>Leyenda</h3>\\r\\n\\t\\t\\t\\t\\t\\t<img data-id=\\\"{{id}}\\\" src=\\\"{{legend}}\\\"></img>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\r\\n\\t\\t\\t\\t<div class=\\\"layer-option-row\\\">\\r\\n\\t\\t\\t\\t\\t<div id=\\\"stylesTocLayer_{{id}}\\\" class=\\\"{{#unless showStyles}}dNone{{/unless}}\\\">\\r\\n\\t\\t\\t\\t\\t\\t<h3>Estilos de capa</h3>\\r\\n\\t\\t\\t\\t\\t\\t{{#each styles}}\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"m-accion-activelayers-styles\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<input id=\\\"{{@index}}-{{id}}\\\" data-id=\\\"{{id}}\\\" type=\\\"radio\\\" class=\\\"m-accion-activelayers-activestyle\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t {{#if selected}} checked{{/if}} name=\\\"{{id}}\\\" value=\\\"{{@index}}\\\" />\\r\\n\\t\\t\\t\\t\\t\\t\\t<label for=\\\"{{@index}}-{{id}}\\\">{{Title}}</label>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t{{/each}}\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t\\t{{else}}\\r\\n\\t\\t<div class=\\\"info\\\">\\r\\n\\t\\t\\t<span>No existe ninguna capa activa</span>\\r\\n\\t\\t</div>\\r\\n\\t\\t{{/each}}\\r\\n\\t</div>\\r\\n</div>\";","module.exports = \"<div id=\\\"tool-baselayers\\\">\\r\\n\\t<div id=\\\"toc-baselayers\\\" class=\\\"m-toc-baselayers\\\">\\r\\n\\t\\t{{#if baseMapBlanco}}\\r\\n\\t\\t<div id=\\\"{{baseMapBlanco.id}}\\\" data-id=\\\"{{baseMapBlanco.id}}\\\" class=\\\"box m-accion-baselayers-load {{#if activo}} baseActivo{{/if}}\\\">\\r\\n\\t\\t\\t<img data-id=\\\"{{baseMapBlanco.id}}\\\" class=\\\"m-accion-baselayers-load\\\">\\r\\n\\t\\t\\t<div class=\\\"caption simple-caption\\\">\\r\\n\\t\\t\\t\\t<h5 data-id=\\\"{{baseMapBlanco.id}}\\\" class=\\\"m-accion-baselayers-load\\\">Fondo Blanco</h5>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t\\t{{/if}} {{#gt baseLayers.length 0}} {{#each baseLayers}}\\r\\n\\t\\t<div id=\\\"{{id}}\\\" class=\\\"box{{#if activo}} baseActivo{{/if}}\\\">\\r\\n\\t\\t\\t<img data-id=\\\"{{id}}\\\" class=\\\"m-accion-baselayers-load\\\" src=\\\"{{img}}\\\" alt=\\\"{{descripcion}}\\\">\\r\\n\\t\\t\\t<div class=\\\"caption simple-caption\\\">\\r\\n\\t\\t\\t\\t<h5 data-id=\\\"{{id}}\\\" class=\\\"m-accion-baselayers-load\\\">{{title}}</h5>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t\\t{{/each}} {{/gt}}\\r\\n\\t</div>\\r\\n</div>\";","module.exports = \"<div id=\\\"tool-thematiclayers\\\">\\r\\n\\t<div id=\\\"toc-thematiclayers\\\" class=\\\"m-toc-thematiclayers\\\">\\r\\n\\t\\t{{#gt groups.length 0}} {{#each groups}}\\r\\n\\t\\t<div id=\\\"tocGroup_{{id}}\\\" data-id=\\\"{{id}}\\\" class=\\\"toc-item-group\\\">\\r\\n\\t\\t\\t<div class=\\\"toc-item-group-header\\\">\\r\\n\\t\\t\\t\\t<div class=\\\"layer-group-name\\\">\\r\\n\\t\\t\\t\\t\\t<button data-id=\\\"{{id}}\\\" class=\\\"m-accion-thematiclayers-collapse {{#if collapsed}}g-cartografia-flecha-abajo2{{else}}g-cartografia-flecha-arriba2{{/if}}\\\"\\r\\n\\t\\t\\t\\t\\t title=\\\"Lista de capas\\\"></button>\\r\\n\\t\\t\\t\\t\\t<span>{{title}}</span>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<!-- <div class=\\\"layer-group-button\\\">\\r\\n\\t\\t\\t\\t\\t<button data-id=\\\"{{id}}\\\" class=\\\"m-accion-thematiclayers-load-group {{#if activated}}g-cartografia-cancelar2{{else}}g-cartografia-mas2{{/if}}\\\"\\r\\n\\t\\t\\t\\t\\t title=\\\"{{#if activated}}Eliminar todas las capas del grupo{{else}}Añadir todas las capas del grupo{{/if}}\\\"></button>\\r\\n\\t\\t\\t\\t</div> -->\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<div id=\\\"optionsTocGroup_{{id}}\\\" class=\\\"toc-item-group-options{{#if collapsed}} dNone{{/if}}\\\">\\r\\n\\t\\t\\t\\t{{#gt overlays.length 0}} {{#each overlays}}\\r\\n\\t\\t\\t\\t<div class=\\\"toc-item-group-overlay\\\">\\r\\n\\t\\t\\t\\t\\t<input id=\\\"{{@index}}-{{id}}\\\" class=\\\"m-accion-thematiclayers-load\\\" type=\\\"checkbox\\\" data-id=\\\"{{id}}\\\" value=\\\"{{id}}\\\" title=\\\"Añadir/Eliminar capa\\\"\\r\\n\\t\\t\\t\\t\\t {{#if load}}checked{{/if}}>\\r\\n\\t\\t\\t\\t\\t<label for=\\\"{{@index}}-{{id}}\\\">{{title}}</label>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t{{/each}} {{/gt}}\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t\\t{{/each}} {{/gt}}\\r\\n\\t</div>\\r\\n</div>\";","module.exports = \"<div id=\\\"toolbar-managelayers\\\" class=\\\"m-control m-toolbar m-control-toolbar-managelayers\\\">\\r\\n\\t<!-- TOOLBARS BUTTONS -->\\r\\n\\t<div id=\\\"toolbar-buttons-managelayers\\\" class=\\\"m-toolbar-buttons m-toolbar-buttons-managelayers\\\"></div>\\r\\n\\t<!-- TITLE -->\\r\\n\\t<div id=\\\"toolbar-title-managelayers\\\" class=\\\"title\\\">Gestión de capas</div>\\r\\n\\r\\n\\t<div id=\\\"toolbar-containers-managelayers\\\" class=\\\"m-toolbar-containers m-toolbar-containers-managelayers\\\">\\r\\n\\t\\t<div id=\\\"m-waiting-result\\\" class=\\\"dNone m-waiting-result g-cartografia-spinner\\\"></div>\\r\\n\\t</div>\\r\\n</div>\";","module.exports = \"<div id=\\\"tool-wmclayers\\\">\\r\\n\\t<div id=\\\"toc-wmclayers\\\" class=\\\"m-toc-wmclayers\\\">\\r\\n\\t\\t{{#gt wmcLayers.length 0}}\\r\\n\\t\\t<div class=\\\"toc-item-group-header\\\">\\r\\n\\t\\t\\t<div class=\\\"layer-group-name\\\">\\r\\n\\t\\t\\t\\t<span>Capas WMC: {{name}}</span>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<div class=\\\"layer-group-button\\\">\\r\\n\\t\\t\\t\\t<!-- <button data-id=\\\"{{id}}\\\" class=\\\"m-accion-thematiclayers-load-group {{#if activated}}g-cartografia-cancelar2{{else}}g-cartografia-mas2{{/if}}\\\"\\r\\n\\t\\t\\t\\t title=\\\"{{#if activated}}Eliminar todas las capas del grupo{{else}}Añadir todas las capas del grupo{{/if}}\\\"></button> -->\\r\\n\\t\\t\\t\\t<button class=\\\"m-accion-wmclayers-load-group g-cartografia-mas2\\\" title=\\\"Añadir todas las capas\\\"></button>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t\\t<!-- <div class=\\\"title\\\">\\r\\n\\t\\t\\t<span>Capas WMC: {{name}}</span>\\r\\n\\t\\t\\t<button class=\\\"m-accion-wmclayers-load-group g-cartografia-mas2\\\" title=\\\"Añadir todas las capas\\\"></button>\\r\\n\\t\\t</div> -->\\r\\n\\t\\t{{#each wmcLayers}}\\r\\n\\t\\t<div id=\\\"wmclayer_{{id}}\\\" class=\\\"toc-item-layer\\\">\\r\\n\\t\\t\\t<input id=\\\"{{@index}}-{{id}}\\\" class=\\\"m-accion-wmclayers-load\\\" type=\\\"checkbox\\\" data-id=\\\"{{id}}\\\" value=\\\"{{id}}\\\" {{#if load}}checked{{/if}}\\r\\n\\t\\t\\t title=\\\"Añadir/Eliminar capa\\\">\\r\\n\\t\\t\\t<label for=\\\"{{@index}}-{{id}}\\\">{{title}}</label>\\r\\n\\t\\t</div>\\r\\n\\t\\t{{/each}} {{else}}\\r\\n\\t\\t<div class=\\\"info\\\">\\r\\n\\t\\t\\t<span>No se ha añadido ninguna capa WMC</span>\\r\\n\\t\\t</div>\\r\\n\\t\\t{{/gt}}\\r\\n\\t</div>\\r\\n</div>\";","/**\r\n * @module M/impl/control/ManageLayersControl\r\n */\r\nexport default class ManageLayersControl extends M.impl.Control {\r\n  /**\r\n   * @classdesc\r\n   * Main constructor of the ManageLayersControl.\r\n   *\r\n   * @constructor\r\n   * @extends {M.impl.Control}\r\n   * @api stable\r\n   */\r\n  constructor(params) {\r\n    super();\r\n\r\n    this.params_ = params || {};\r\n\r\n    this.facadeMap_ = null;\r\n  }\r\n  /**\r\n   * This function adds the control to the specified map\r\n   *\r\n   * @public\r\n   * @function\r\n   * @param {M.Map} map to add the plugin\r\n   * @param {HTMLElement} html of the plugin\r\n   * @api stable\r\n   */\r\n  addTo(map, element) {\r\n    // specific code\r\n    this.facadeMap_ = map;\r\n    this.element = element;\r\n\r\n    // super addTo\r\n    super.addTo(map, element);\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @public\r\n   * @function\r\n   * @api stable\r\n   */\r\n  activate() {}\r\n\r\n  /**\r\n   *\r\n   * @public\r\n   * @function\r\n   * @api stable\r\n   */\r\n  deactivate() {}\r\n\r\n  destroy() {\r\n    this.deactivate();\r\n    this.element.remove();\r\n    //this.facadeMap_.removeControls(this);\r\n    this.facadeMap_.getMapImpl().removeControl(this);\r\n    this.facadeMap_ = null;\r\n    this.element = null;\r\n  }\r\n}\r\n","/**\r\n * @module M/control/ManageLayersControl\r\n */\r\n\r\nimport ManageLayersImplControl from 'impl/managelayerscontrol';\r\nimport template from 'templates/template_managelayers_control';\r\n\r\nexport default class ManageLayersControl extends M.Control {\r\n\r\n\r\n  /**\r\n   * Name to identify this control\r\n   * @const\r\n   * @type {string}\r\n   * @public\r\n   * @api stable\r\n   */\r\n  static get NAME() {\r\n    return 'ManageLayers';\r\n  }\r\n\r\n  /**\r\n   * Name to identify url template\r\n   * @const\r\n   * @type {string}\r\n   * @public\r\n   * @api stable\r\n   */\r\n  /*static get TEMPLATE() {\r\n    return 'template_managelayers_control.html';\r\n  }*/\r\n\r\n  /**\r\n   * Configuracion basica de control\r\n   */\r\n  static get CONFIG_BASE() {\r\n    return {\r\n      controlName: ManageLayersControl.NAME,\r\n      template: template,\r\n      iconClass: 'g-cartografia-capas2',\r\n      tooltip: 'Gestor capas'\r\n    };\r\n  }\r\n\r\n  /**\r\n   * @classdesc\r\n   * Main constructor of the class. Creates a PluginControl\r\n   * control\r\n   *\r\n   * @constructor\r\n   * @extends {M.Control}\r\n   * @api stable\r\n   */\r\n  constructor (impl, params, options) {\r\n    // 1. checks if the implementation can create ManageLayersControl\r\n    if (M.utils.isUndefined(ManageLayersImplControl)) {\r\n      M.exception('La implementación usada no puede crear controles ManageLayersControl');\r\n    }\r\n\r\n    super(impl, options.controlName);\r\n\r\n    /**\r\n     * Params of the control\r\n     * @private\r\n     * @type {params}\r\n     */\r\n    this.params_ = params || {};\r\n\r\n\r\n    /**\r\n     * Opciones para el control:\r\n     *\r\n     * \t\tA establecer desde cada control:\r\n     * \t\t\tcontrolName: Nombre (ID) del control mapea\r\n     * \t\t\ttemplate:\t Template para creacion del control\r\n     * \t\t\tbaseName:\t Nombre base del control para construccion generica del control (si no se indica es el controlName)\r\n     *\r\n     * \t\tA establecer por el usuario:\r\n     * \t\t\ticonClass: \t Icono representacion del control\r\n     *\t\t\ttooltip: \t Tooltip del control\r\n     * @private\r\n     * @type {options}\r\n     */\r\n    this.options_ = this.getControlOptions_(options);\r\n  }\r\n  /**\r\n   * This function creates the view\r\n   *\r\n   * @public\r\n   * @function\r\n   * @param {M.Map} map to add the control\r\n   * @api stable\r\n   */\r\n  createView(map) {\r\n    return new Promise((success, fail) => {\r\n      let html = M.template.compileSync(this.options_.template, {\r\n        //'jsonp': true,\r\n        vars: this.options_\r\n      });\r\n        let content = null;\r\n        //Si se indica configuracion para toolbar: annadir control en toolbar, si no annadir control al panel\r\n        if (!M.utils.isNullOrEmpty(this.options_.toolbar)) {\r\n          let toolbar = this.options_.toolbar;\r\n          //Annadir toolbar si no esta\r\n          let isLoad = !M.utils.isNullOrEmpty(this.getPanel()._element.querySelector(toolbar.selector));\r\n          if (isLoad === false) {\r\n            this.getPanel()._controlsContainer.appendChild(toolbar.target);\r\n          }\r\n          //Cargar contenido del control en las zonas del toolbar: boton y contenido por separado\r\n          let button = html.querySelector(this.getSelectorToolbarButton_());\r\n          let container = html.querySelector(this.getSelectorToolbarContainer_());\r\n          toolbar.target.querySelector(toolbar.selectorBtn).appendChild(button);\r\n          toolbar.target.querySelector(toolbar.selectorContainer).appendChild(container);\r\n          content = toolbar.target;\r\n        } else {\r\n          //Cargamos el control en el panel\r\n          content = html;\r\n          this.getPanel()._controlsContainer.appendChild(html);\r\n        }\r\n        //Establecer eventos\r\n        this.addEvents(content);\r\n        success(content);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @function\r\n   * @param {HTMLElement} html to add the plugin\r\n   * @api stable\r\n   * @export\r\n   */\r\n  /*getActivationButton(html) {\r\n    return html.querySelector('button#m-managelayerscontrol-button');\r\n  }*/\r\n\r\n  activate() {\r\n    //Mostrar panel de contenido asociado\r\n    this.getToolbarContainer_().classList.toggle('dNone');\r\n    this.getControlButton_().classList.toggle('active');\r\n    //Mostrar titulo del contenido asociado\r\n    this.getTitleControlManageLayers_().innerText = this.options_.tooltip;\r\n    super.activate();\r\n  }\r\n\r\n  deactivate() {\r\n    //Ocultar panel de contenido asociado\r\n    this.getToolbarContainer_().classList.toggle('dNone');\r\n    this.getControlButton_().classList.toggle('active');\r\n    super.deactivate();\r\n  }\r\n\r\n  getControlOptions_(options) {\r\n    options = options || {};\r\n    //Merge opciones de usuario con configuracion basica y con la configuracion especifica del plugin\r\n    let opt_ = M.utils.extend({}, ManageLayersControl.CONFIG_BASE, true);\r\n    opt_ = M.utils.extend(opt_, options, true);\r\n    //_Identificador base del control: si no se indica sera el nombre del control en minusculas\r\n    opt_.baseName = ((M.utils.isNullOrEmpty(opt_.baseName)) ? opt_.controlName : opt_.baseName);\r\n    opt_.baseName = (opt_.baseName).toLowerCase();\r\n\r\n    return opt_;\r\n  }\r\n\r\n  getConfigDefault_() {\r\n    return this.CONFIG_BASE;\r\n  }\r\n\r\n  addEvents(html) { }\r\n\r\n  render() { }\r\n\r\n  /**\r\n   * This function returns the HTML button control.\r\n   *\r\n   * @public\r\n   * @function\r\n   * @param {HTMLElement} element - Template control\r\n   * @returns {HTMLElement} HTML control button\r\n   * @api stable\r\n   * @export\r\n   */\r\n  getActivationButton(html) {\r\n    return html.querySelector(this.getSelectorButton_());\r\n  }\r\n\r\n  /**\r\n   * This function checks if an object is equals\r\n   * to this control\r\n   *\r\n   * @public\r\n   * @function\r\n   * @param {*} obj - Object to compare\r\n   * @returns {boolean} equals - Returns if they are equal or not\r\n   * @api stable\r\n   */\r\n  equals(obj) {\r\n    let equals = false;\r\n    if (obj instanceof ManageLayersControl) {\r\n      equals = (this.name === obj.name);\r\n    }\r\n    return equals;\r\n  }\r\n\r\n\r\n  //Id toolbar botones del control\r\n  getSelectorToolbarButton_() {\r\n    return '#toolbar-button-' + this.options_.baseName;\r\n  }\r\n  //Id toolbar contenido del control;\r\n  getSelectorToolbarContainer_() {\r\n    return '#toolbar-container-' + this.options_.baseName;\r\n  }\r\n  //Id bton accion del control\r\n  getSelectorButton_() {\r\n    return '#tool-btn-' + this.options_.baseName;\r\n  }\r\n  //Id panel contenido del control\r\n  getSelectorContainer_() {\r\n    return '#tool-' + this.options_.baseName;\r\n  }\r\n  //Obtener item del DOM: toolbar del control\r\n  getToolbarContainer_() {\r\n    return this.getPanel()._element.querySelector(this.getSelectorToolbarContainer_());\r\n  }\r\n  //Obtener item del DOM: panel detalle del control\r\n  getControlContainer_() {\r\n    return this.getPanel()._element.querySelector(this.getSelectorContainer_());\r\n  }\r\n  //Obtener item del DOM: boton del control\r\n  getControlButton_() {\r\n    return this.getPanel()._element.querySelector(this.getSelectorButton_());\r\n  }\r\n  //Obtener el item de titulo del subplugin activo\r\n  getTitleControlManageLayers_() {\r\n    return this.getPanel()._element.querySelector('#toolbar-title-managelayers');\r\n  }\r\n\r\n  //Obtiene opciones de configuracion del control\r\n  getOptionsControlManageLayers(item) {\r\n    return this.getOptionsManageLayers(item, (this.name).toLowerCase());\r\n  }\r\n  //Establece opciones de configuracion del control\r\n  setOptionsControlManageLayers(item, options) {\r\n    this.setOptionsManageLayers(item, options, (this.name).toLowerCase());\r\n  }\r\n  getOptionsManageLayers(item, name) {\r\n    let options = item.options.manageLayers;\r\n    if (!M.utils.isNullOrEmpty(name) && !M.utils.isNullOrEmpty(options))\r\n      options = options[name];\r\n    return options;\r\n  }\r\n  setOptionsManageLayers(item, options, name) {\r\n    if (M.utils.isNullOrEmpty(item.options.manageLayers))\r\n      item.options.manageLayers = {};\r\n\r\n    if (!M.utils.isNullOrEmpty(name))\r\n      item.options.manageLayers[name] = options;\r\n    else\r\n      item.options.manageLayers = options;\r\n  }\r\n  resetOptionsManageLayers(layer) {\r\n    layer.options.manageLayers = {};\r\n  }\r\n  //Obtiene elemento del DOM escapando caracteres (no validos para busqueda por CSS)\r\n  getQuerySelectorScapeCSS(target, selector, name) {\r\n    return target.querySelector(selector + CSS.escape(name));\r\n  }\r\n\r\n  activateLoading() {\r\n    this.getPanel()._element.querySelector('#m-waiting-result').classList.remove('dNone');\r\n    this.getPanel()._element.querySelector('.m-toolbar-containers-managelayers').style.minHeight = '70px';\r\n  }\r\n  deactivateLoading() {\r\n    this.getPanel()._element.querySelector('#m-waiting-result').classList.add('dNone');\r\n    this.getPanel()._element.querySelector('.m-toolbar-containers-managelayers').style.minHeight = 'initial';\r\n  }\r\n\r\n  //********** FUNCIONES GENERALES DE GESTION DE CAPAS *********\r\n  addLayers(layers) {\r\n    this.map_.addLayers(layers);\r\n  }\r\n\r\n  removeLayers(layers) {\r\n    //FIXME: CORRECION MAPEA:\r\n    //this.map_.removeLayers(layer);\r\n    //No usamos el metodo removelayer del map porque tiene programado de forma interna la indentificacion de la capa\r\n    //NO usa el ID por lo que si hay varias capas iguales (con distinto ID) las borra todas\r\n    //Definimos nuevo metodo que elimine directamente el elemento enviado, que es el que se quiere quitar, no hay que buscarlo\r\n    this.map_.getImpl().removeItemLayers(layers);\r\n  }\r\n\r\n  //Determina si la capa indicada esta cargada (capa activa)\r\n  isLoadLayer(layer) {\r\n    let isLoad = false;\r\n    let item = this.findLayerById(layer.id);\r\n    if (item != null)\r\n      isLoad = true;\r\n    return isLoad;\r\n  }\r\n  //Buscar capa por nombe en las capas cargadas (activas)\r\n  findLayerByName(layerName) {\r\n    return this.findItemByProperty(this.map_.getLayers(), 'name', layerName);\r\n  }\r\n  //Buscar capa por id en las capas cargadas (activas)\r\n  findLayerById(layerId) {\r\n    return this.findItemByProperty(this.map_.getLayers(), 'id', layerId);\r\n  }\r\n  //Buscar en lista de elementos un item que coincida en la propiedad indicada el valor buscado\r\n  findItemByProperty(lstItems, itemProperty, itemValue) {\r\n    let item = null;\r\n    if (lstItems && itemProperty) {\r\n      lstItems.some((it) => {\r\n        if (it[itemProperty] === itemValue) {\r\n          item = it;\r\n          return true;\r\n        }\r\n      });\r\n    }\r\n    return item;\r\n  }\r\n}\r\n","/**\r\n * @module M/impl/control/ActiveLayersControl\r\n */\r\nexport default class ActiveLayersControl extends M.impl.Control {\r\n  /**\r\n   * @classdesc\r\n   * Main constructor of the ActiveLayersControl.\r\n   *\r\n   * @constructor\r\n   * @extends {M.impl.Control}\r\n   * @api stable\r\n   */\r\n  constructor (params) {\r\n    super();\r\n    this.params_ = params || {};\r\n    this.facadeMap_ = null;\r\n    this.totalActiveLayers_ = 0;\r\n  }\r\n  /**\r\n   * This function adds the control to the specified map\r\n   *\r\n   * @public\r\n   * @function\r\n   * @param {M.Map} map to add the plugin\r\n   * @param {HTMLElement} element of the plugin\r\n   * @api stable\r\n   */\r\n  addTo(map, element) {\r\n    this.facadeMap_ = map;\r\n    this.element = element;\r\n\r\n    let olMap = map.getMapImpl();\r\n    ol.control.Control.call(this, {\r\n      'element': element,\r\n      'target': null\r\n    });\r\n    olMap.addControl(this);\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @public\r\n   * @function\r\n   * @api stable\r\n   */\r\n  activate() {\r\n    //Actilet eventos\r\n    this.registerEvents();\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @public\r\n   * @function\r\n   * @api stable\r\n   */\r\n  deactivate() {\r\n    //Desactilet eventos\r\n    this.unregisterEvents();\r\n  }\r\n\r\n  /**\r\n   * This function destroys this control, cleaning the HTML\r\n   * and unregistering all events\r\n   *\r\n   * @public\r\n   * @function\r\n   * @api stable\r\n   * @export\r\n   */\r\n  destroy() {\r\n    this.deactivate();\r\n    this.element.remove();\r\n    this.facadeMap_.getMapImpl().removeControl(this);\r\n    this.facadeMap_ = null;\r\n    this.element = null;\r\n  }\r\n\r\n  /**\r\n   * Registers events on map and layers to render the\r\n   * activelayers\r\n   *\r\n   * @public\r\n   * @function\r\n   * @api stable\r\n   */\r\n  registerEvents() {\r\n    if (!M.utils.isNullOrEmpty(this.facadeMap_)) {\r\n      let olMap = this.facadeMap_.getMapImpl();\r\n\r\n      this.registerViewEvents_(olMap.getView());\r\n      this.registerLayersEvents_(olMap.getLayers());\r\n\r\n      olMap.on('change:view', (evt) => this.onViewChange_(evt) );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Unegisters events for map and layers from the activelayers\r\n   *\r\n   * @public\r\n   * @function\r\n   * @api stable\r\n   */\r\n  unregisterEvents() {\r\n    if (!M.utils.isNullOrEmpty(this.facadeMap_)) {\r\n      let olMap = this.facadeMap_.getMapImpl();\r\n\r\n      this.unregisterViewEvents_(olMap.getView());\r\n      this.unregisterLayersEvents_(olMap.getLayers());\r\n      olMap.un('change:view', (evt) => this.onViewChange_(evt) );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * TODO\r\n   */\r\n  registerViewEvents_(view) {\r\n    view.on('change:resolution', () => this.renderPanel() );\r\n  }\r\n\r\n  /**\r\n   * TODO\r\n   */\r\n  registerLayersEvents_(layers) {\r\n    layers.forEach( (ly) => this.registerLayerEvents_(ly) );\r\n    layers.on('remove', () => this.renderPanel() );\r\n    layers.on('add', (evt) => this.onAddLayer_(evt) );\r\n\r\n  }\r\n\r\n  /**\r\n   * TODO\r\n   */\r\n  registerLayerEvents_(layer) {\r\n    layer.on('change:visible', () => this.renderPanel() );\r\n    layer.on('change:extent', () => this.renderPanel() );\r\n  }\r\n\r\n  /**\r\n   * TODO\r\n   */\r\n  unregisterViewEvents_(view) {\r\n    view.un('change:resolution', () => this.renderPanel() );\r\n  }\r\n\r\n  /**\r\n   * TODO\r\n   */\r\n  unregisterLayersEvents_(layers) {\r\n    layers.forEach( (ly) => this.registerLayerEvents_(ly) );\r\n    layers.un('remove', () => this.renderPanel() );\r\n    layers.un('add', (evt) => this.onAddLayer_(evt));\r\n  }\r\n\r\n  /**\r\n   * TODO\r\n   */\r\n  unregisterLayerEvents_(layer) {\r\n    layer.un('change:visible', () => this.renderPanel () );\r\n    layer.un('change:extent', () => this.renderPanel() );\r\n  }\r\n\r\n  /**\r\n   * TODO\r\n   */\r\n  onViewChange_(evt) {\r\n    // removes listener from previous view\r\n    this.unregisterViewEvents_(evt.oldValue);\r\n    // attaches listeners to the new view\r\n    let olMap = this.facadeMap_.getMapImpl();\r\n    this.registerViewEvents_(olMap.getView());\r\n  }\r\n\r\n  /**\r\n   * TODO\r\n   */\r\n\r\n  onAddLayer_(evt) {\r\n    let ly = evt.element;\r\n    this.registerLayerEvents_(ly);\r\n    ly.setZIndex(this.totalActiveLayers_ + 1); // cualquier capa que se añada la pongo en el top de zindex\r\n    this.renderPanel();\r\n    //setTimeout(() => this.renderPanel());\r\n  }\r\n\r\n  renderPanel(evt) {\r\n    //TODO: Tambien se podria obtener el control apartir del mapa con el nombre del control\r\n    this.facadeCtrol_.renderPanel();\r\n  }\r\n\r\n  moveLayer(id, oldIndex, newIndex) {\r\n    //Obtenemos posicion de la capa en el array\r\n    // let posLayer = 0;\r\n    let lstLayers = this.getFilterLayerList(false);\r\n    /*     lstLayers.forEach((item, index) => {\r\n          if (id == item.id) {\r\n            posLayer = index;\r\n          }\r\n        }); */\r\n\r\n    //Determinar tipo de movimiento\r\n    let avance = newIndex - oldIndex;\r\n    //Bajar capa\r\n    if (avance > 0) {\r\n      //Subir resto de capas una posicion\r\n      for (let i = avance; i > 0; i--) {\r\n        lstLayers[newIndex + 1 - i].setZIndex((lstLayers[newIndex + 1 - i].getZIndex() + 1));\r\n      }\r\n      //Bajar capa a la posicion indicada\r\n      lstLayers[oldIndex].setZIndex((lstLayers[oldIndex].getZIndex() - avance));\r\n    } else {\r\n      avance *= (-1);\r\n      //Bajar resto de capas una posicion\r\n      for (let i = 1; i <= avance; i++) {\r\n        lstLayers[newIndex - 1 + i].setZIndex((lstLayers[newIndex - 1 + i].getZIndex() - 1));\r\n      }\r\n      //Subir capa a la posicion indicada\r\n      lstLayers[oldIndex].setZIndex((lstLayers[oldIndex].getZIndex() + avance));\r\n    }\r\n  }\r\n\r\n  updateOrderLayer(layer, order) {\r\n    layer.setZIndex(order);\r\n  }\r\n\r\n  /**\r\n   *\r\n   * Devuelve la lista de capas que se mostrarán en las capas activas ordenadas de mayor a menor zindex si reverse está a false,\r\n   * o de menor a mayor zindex si reverse está a true\r\n   * @param {*} reverse\r\n   * @returns\r\n   * @memberof ActiveLayersControl\r\n   */\r\n  getFilterLayerList(reverse) {\r\n    const filterLayers = this.facadeMap_.getLayers().filter((layer) => {\r\n      const isBaseMap = (layer.isBaseMap === true);\r\n      const isDrawLayer = (layer.name === '__draw__');\r\n      /* let isTransparent = true;\r\n      let displayInLayerSwitcher = true; */\r\n      const isTransparent = (layer.transparent === true);\r\n      const displayInLayerSwitcher = (layer.displayInLayerSwitcher === true);\r\n      const isNotWMC = (layer.type !== M.layer.type.WMC);\r\n      const isNotWMSFull = !((layer.type === M.layer.type.WMS) && M.utils.isNullOrEmpty(layer.name));\r\n      if (isBaseMap) {\r\n        this.updateOrderLayer(layer, 0);\r\n      }\r\n      else if (isNotWMC && !isDrawLayer) {\r\n        //Los WMC no tienen indice y layer de dibujos siempre encima\r\n        if (isTransparent === false) {\r\n          this.updateOrderLayer(layer, 1);\r\n        }\r\n        //Capas configuradas como no accesibles desde el gesto de capas: se cargaran y no se podra actuar sobre ellas\r\n        else if (displayInLayerSwitcher === false) {\r\n          this.updateOrderLayer(layer, 2);\r\n        }\r\n      }\r\n      return (!isBaseMap && !isDrawLayer && isTransparent && isNotWMC && isNotWMSFull && displayInLayerSwitcher);\r\n    }).sort((a, b) => {\r\n      const zindexA = a.getZIndex();\r\n      const zindexB = b.getZIndex();\r\n      if (isNaN(zindexA) && isNaN(zindexB)) {\r\n        return 0;\r\n      }\r\n      if (isNaN(zindexA)) { // Si viene un NaN lo pongo en el TOP\r\n        return -1;\r\n      }\r\n      if (isNaN(zindexB)) {\r\n        return 1;\r\n      }\r\n      const sum = zindexA - zindexB;\r\n      return reverse ? sum : -sum;\r\n    }).map((layer, position, arr) => {\r\n      if (reverse) {\r\n        layer.setZIndex(position + 3); // Ordeno realmente desde la posición 3\r\n      } else {\r\n        layer.setZIndex(arr.length + 2 - position); // Ordeno realmente desde la posición 3\r\n      }\r\n      return layer;\r\n    });\r\n    this.totalActiveLayers_ = filterLayers.length;\r\n    return filterLayers;\r\n\r\n  }\r\n  /**\r\n   * Asigna un estilo a la capa\r\n   *\r\n   * @param {any} layer\r\n   * @param {any} selectedStyle\r\n   * @memberof ActiveLayersControl\r\n   */\r\n  setLayerStyle(layer, selectedStyle) {\r\n    // Cambiamos el estilo\r\n    layer.getImpl().setSelectedStyle(selectedStyle);\r\n  }\r\n  /**\r\n   * Recupera el link de metadatos de la capa\r\n   *\r\n   * @param {any} layer\r\n   * @returns\r\n   * @memberof ActiveLayersControl\r\n   */\r\n  getMetadataLink(layer) {\r\n    return layer.getImpl().getMetadataURL();\r\n  }\r\n  /**\r\n   * Recupera todos los estilos asociados a una capa a partir de sus capabilities\r\n   *\r\n   * @param {any} layer\r\n   * @returns\r\n   * @memberof ActiveLayersControl\r\n   */\r\n  getStylesLayer(layer) {\r\n    return layer.getImpl().getStylesLayer();\r\n  }\r\n  /**\r\n   * Recupera la posición del estilo seleccionado para la capa dentro de su array de estilos\r\n   *\r\n   * @param {any} layer\r\n   * @memberof ActiveLayersControl\r\n   */\r\n  getLayerStylePosition(layer) {\r\n    return layer.getImpl().selectedStyle_;\r\n  }\r\n\r\n\r\n\r\n}","/**\r\n * @module M/control/ActiveLayersControl\r\n */\r\nimport ManageLayersControl from './managelayerscontrol.js';\r\nimport ActiveLayersImplControl from 'impl/activelayersControl';\r\nimport Sortable from './_externs_html.sortable.min.js';\r\nimport template from 'templates/activelayers';\r\n\r\nexport default class ActiveLayersControl extends ManageLayersControl {\r\n\r\n\r\n    /**\r\n     * Name to identify this control\r\n     * @const\r\n     * @type {string}\r\n     * @public\r\n     * @api stable\r\n     */\r\n    static get NAME() {\r\n        return 'ActiveLayers';\r\n    }\r\n\r\n    /**\r\n     * Name to identify url template\r\n     * @const\r\n     * @public\r\n     * @type {string}\r\n     * @api stable\r\n     */\r\n    static get TEMPLATE() {\r\n        return template;\r\n    }\r\n\r\n    /**\r\n     * @classdesc\r\n     * Main constructor of the class. Creates a ActiveLayersControl\r\n     * control\r\n     *\r\n     * @constructor\r\n     * @extends {M.Control}\r\n     * @api stable\r\n     */\r\n    constructor(params, options) {\r\n        // 1. checks if the implementation can create ActiveLayersControl\r\n        if (M.utils.isUndefined(ActiveLayersImplControl)) {\r\n            M.exception('La implementación usada no puede crear controles ActiveLayersControl');\r\n        }\r\n        // Parametros del control\r\n        let opt_ = {\r\n            controlName: ActiveLayersControl.NAME,\r\n            iconClass: 'g-cartografia-capas2',\r\n            tooltip: 'Capas activas'\r\n        };\r\n        // Se annaden los parametros de control a las opciones\r\n        options = M.utils.extend(opt_, options, true);\r\n        // 2. implementation of this control\r\n        let impl = new ActiveLayersImplControl(params);\r\n\r\n        super(impl, params, options);\r\n\r\n        /**\r\n         * Params of the control\r\n         * @private\r\n         * @type {params}\r\n         */\r\n        this.params_ = params || {};\r\n\r\n        //Almacenamos en impl referencia a facade para poder actualizar panel al procesar eventos\r\n        impl.facadeCtrol_ = this;\r\n\r\n        //Contador auxiliar para establecer ids genericos para capas que no tenan\r\n        this.countID_ = 0;\r\n\r\n        // FUNCIONES a eventos para poder eliminarlos después\r\n        this.boundClickLayer_ = evt => this.clickLayer(evt);\r\n    }\r\n    addEvents(html) {\r\n        let content = html.querySelector(this.getSelectorContainer_());\r\n        // change slider event\r\n        content.addEventListener('input', (evt) => this.clickLayerSlider(evt));\r\n    }\r\n\r\n    clickLayerSlider(evt) {\r\n        evt = (evt || window.event);\r\n        if (!M.utils.isNullOrEmpty(evt.target)) {\r\n            let itemTarget = evt.target;\r\n            let id = itemTarget.getAttribute('data-id');\r\n            //Si tenemos datos de la capa\r\n            if (!M.utils.isNullOrEmpty(id)) {\r\n                let layer = this.findLayerById(id);\r\n                if (itemTarget.classList.contains('m-accion-activelayers-transparency')) {\r\n                    layer.setOpacity(parseFloat(itemTarget.value));\r\n                    itemTarget.nextElementSibling.innerHTML = itemTarget.value * 100 + '%';\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    clickLayer(evt) {\r\n        evt = (evt || window.event);\r\n        if (!M.utils.isNullOrEmpty(evt.target)) {\r\n            let itemTarget = evt.target;\r\n            let id = itemTarget.getAttribute('data-id');\r\n            //Si tenemos datos de la capa\r\n            if (!M.utils.isNullOrEmpty(id)) {\r\n                //Obtener datos de la capa seleccionada\r\n                let layer = this.findLayerById(id);\r\n                //Obtener control y opciones del toc del elemento seleccionado\r\n                let ctolContainer = this.getControlContainer_();\r\n                let itemTocOptions = this.getQuerySelectorScapeCSS(ctolContainer, '#optionsTocLayer_', id);\r\n\r\n                //Mostrar/Ocultar opciones de capa\r\n                if (itemTarget.classList.contains('m-accion-activelayers-collapse')) {\r\n                    //Actualizar configuracion estado del toc\r\n                    let configToc = this.getOptionsControlManageLayers(layer);\r\n                    configToc.collapsed = !(itemTocOptions.classList.contains('dNone'));\r\n                    //Mostrar/Ocultar opciones\r\n                    itemTocOptions.classList.toggle('dNone');\r\n                    itemTarget.classList.toggle('g-cartografia-flecha-abajo2');\r\n                    itemTarget.classList.toggle('g-cartografia-flecha-arriba2');\r\n                }\r\n                //Cambiar nombre\r\n                else if (itemTarget.classList.contains('m-accion-activelayers-rename')) {\r\n                    //Establecer titulo como editable\r\n                    let titleText = this.getQuerySelectorScapeCSS(ctolContainer, '#textTitleLayer_', id);\r\n                    let input = document.createElement(\"input\");\r\n                    input.type = \"text\";\r\n                    input.value = titleText.innerText;\r\n                    titleText.innerText = \"\";\r\n                    titleText.appendChild(input);\r\n                    input.addEventListener('focus', function () { this.select(); });\r\n                    input.focus();\r\n                    let _event_blur = (evt) => {\r\n                        //Desactivar edicion y almacenar cambios\r\n                        titleText.innerHTML = input.value;\r\n                        layer.legend = input.value;\r\n                        input.removeEventListener('blur', (evt) => _event_blur(evt));\r\n                        input = null;\r\n                    };\r\n                    //Procesar cambios\r\n                    input.addEventListener('blur', (evt) => _event_blur(evt));\r\n                }\r\n                // Activar/Desactivar\r\n                else if (itemTarget.classList.contains('m-accion-activelayers-activate')) {\r\n                    if ((layer.transparent === true) || !layer.isVisible()) {\r\n                        let opacity = itemTarget.parentElement.parentElement.querySelector('div.tools > input');\r\n                        if (!M.utils.isNullOrEmpty(opacity)) {\r\n                            layer.setOpacity(opacity.value);\r\n                        }\r\n                        layer.setVisible(!layer.isVisible());\r\n                    }\r\n                }\r\n\r\n                //Metadatos\r\n                else if (itemTarget.classList.contains('m-accion-activelayers-metadata')) {\r\n                    //TODO: PTE IMPLEMENTACION\r\n\r\n                    if ((layer.type === M.layer.type.WMS) || (layer.type === M.layer.type.WFS)) {\r\n                        this.getImpl().getMetadataLink(layer).then((metadataLink) => {\r\n                            window.open(metadataLink, '_blank');\r\n                        });\r\n                    }\r\n\r\n                }\r\n                //Informacion de la capa\r\n                else if (itemTarget.classList.contains('m-accion-activelayers-info')) {\r\n                    //Obtenemos abstract de la capa y mostrar en popup\r\n                    layer.getImpl().getAbstractLayer().then((descripcion) => {\r\n                        let titulo = 'Información: ' + layer.legend;\r\n                        if (M.utils.isNullOrEmpty(descripcion))\r\n                            descripcion = 'No hay descripción asociada a la capa';\r\n                        //Mostrar informacion\r\n                        M.dialog.info(descripcion, titulo);\r\n                    });\r\n                }\r\n                //Mostrar/ocultar estilos de la capa\r\n                else if (itemTarget.classList.contains('m-accion-activelayers-showstyles')) {\r\n                    let stylesContainer = this.getQuerySelectorScapeCSS(ctolContainer, '#stylesTocLayer_', id);\r\n                    //Actualizar configuracion estado del toc\r\n                    let configToc = this.getOptionsControlManageLayers(layer);\r\n                    configToc.showStyles = (stylesContainer.classList.contains('dNone'));\r\n                    //Mostrar/Ocultar opciones\r\n                    stylesContainer.classList.toggle('dNone');\r\n                }\r\n                //Activar estilo\r\n                else if (itemTarget.classList.contains('m-accion-activelayers-activestyle')) {\r\n                    let position = itemTarget.value;\r\n                    let previousPosition = this.getImpl().getLayerStylePosition(layer);\r\n                    if (position != previousPosition) {\r\n                        this.getImpl().setLayerStyle(layer, position);\r\n                        this.renderPanel();\r\n                    }\r\n\r\n                }\r\n                //Eliminar\r\n                else if (itemTarget.classList.contains('m-accion-activelayers-remove')) {\r\n                    //Eliminar capa cargada y configuracion del toc\r\n                    this.resetOptionsManageLayers(layer);\r\n                    this.removeLayers(layer);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    moveLayer(itemTarget, oldIndex, newIndex) {\r\n        //Realizar movimiento de la capa\r\n        let id = ((!M.utils.isNullOrEmpty(itemTarget)) ? itemTarget.getAttribute('data-id') : '');\r\n        if (!M.utils.isNullOrEmpty(id)) {\r\n            this.getImpl().moveLayer(id, oldIndex, newIndex);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * This function registers events on map and layers to render\r\n     * the activelayers\r\n     *\r\n     * @function\r\n     * @api stable\r\n     */\r\n    render() {\r\n        this.renderPanel();\r\n    }\r\n\r\n    /**\r\n     * Re-draw the layer panel to represent the current state of the layers.\r\n     *\r\n     * @public\r\n     * @function\r\n     * @api stable\r\n     */\r\n    renderPanel() {\r\n        this.activateLoading();\r\n        this.getTemplateVariables_().then((templateVariables) => {\r\n            let html = M.template.compileSync(ActiveLayersControl.TEMPLATE, {\r\n                //'jsonp' : true,\r\n                'vars': {\r\n                    'overlayLayers': templateVariables\r\n                }\r\n            });\r\n            //Antes de eliminar lista anterior sortable de capas activas\r\n            if (this.sortableList) {\r\n                this.sortableList.destroy();\r\n                this.sortableList = null;\r\n            }\r\n            // Eliminar eventos de accion anteriores\r\n            let actions = this.getControlContainer_().querySelectorAll('[class^=m-accion-]');\r\n            Array.from(actions).forEach(action => {\r\n                action.removeEventListener('click', this.boundClickLayer_);\r\n            });\r\n            //Actualizar contenido\r\n            this.registerImgErrorEvents_(html);\r\n            this.getControlContainer_().innerHTML = html.innerHTML;\r\n            //Crear nuevo sortable para lista de capas activas\r\n            if (!this.sortableList) {\r\n                let itemSortable = this.getControlContainer_().querySelector('.sortable-activelayers');\r\n                this.sortableList = Sortable.create(itemSortable, {\r\n                    animation: 150,\r\n                    handle: '.m-accion-activelayers-order',\r\n                    onEnd: (evt) => {\r\n                        //Realizar movimiento de la capa\r\n                        this.moveLayer(evt.item, evt.oldIndex, evt.newIndex);\r\n                    }\r\n                });\r\n            }\r\n            // Annadimos los eventos al las acciones\r\n            actions = this.getControlContainer_().querySelectorAll('[class^=m-accion-]');\r\n            Array.from(actions).forEach(action => {\r\n                action.addEventListener('click', this.boundClickLayer_);\r\n            });\r\n            this.deactivateLoading();\r\n\r\n        });\r\n\r\n    }\r\n\r\n    /**\r\n     * Gets the variables of the template to compile\r\n     */\r\n    getTemplateVariables_() {\r\n        //Actualizar configuracion de capas para mostrar el toc\r\n        this.setConfigLayers();\r\n\r\n        // gets base layers and overlay layers\r\n\r\n        let overlayLayers = this.getImpl().getFilterLayerList(false);\r\n        /************* */\r\n        //let promises = overlayLayers.map(this.parseLayerForTemplate_, this);\r\n        let promises = overlayLayers.map((ly) => this.parseLayerForTemplate_(ly));\r\n\r\n        return Promise.all(promises).catch(err => console.log('Catch', err));\r\n\r\n    }\r\n\r\n    /**\r\n     * This function checks if an object is equals\r\n     * to this control\r\n     *\r\n     * @private\r\n     * @function\r\n     */\r\n    parseLayerForTemplate_(layer, index) {\r\n        return new Promise((success, fail) => {\r\n            //Sobre la layer establecemos parametros inciales de visualizacion en el toc de capas activas\r\n            let configToc = this.getOptionsControlManageLayers(layer);\r\n            if (M.utils.isNullOrEmpty(configToc)) {\r\n                configToc = {\r\n                    index: index,\r\n                    collapsed: true,\r\n                    showStyles: false\r\n                };\r\n                this.setOptionsControlManageLayers(layer, configToc);\r\n            }\r\n\r\n            //Titulo de la capa\r\n            let layerTitle = layer.legend;\r\n            if (M.utils.isNullOrEmpty(layerTitle))\r\n                layerTitle = layer.name;\r\n            if (M.utils.isNullOrEmpty(layerTitle))\r\n                layerTitle = 'Servicio - ' + layer.type;\r\n\r\n            //Acceso metadatos\r\n            let metadata = layer.options.metadata;\r\n\r\n            //Tendran informacion de capa solo los servicios OGC (WMTS, WMS y WFS)\r\n            let infoLayer = ((layer.type === M.layer.type.WMS) || (layer.type === M.layer.type.WMTS) || (layer.type === M.layer.type.WFS));\r\n\r\n            let groupId = null;\r\n            let groupTitle = null;\r\n            let group = layer.layerGroup_;\r\n            if (group != null) {\r\n                groupId = group.id;\r\n                groupTitle = group.title\r\n            }\r\n\r\n            let result = {\r\n                'groupId': groupId,\r\n                'groupTitle': groupTitle,\r\n                'metadata': (!M.utils.isNullOrEmpty(metadata)),\r\n                'infoLayer': infoLayer,\r\n                'origen': layer.options.origen,\r\n                'collapsed': (configToc.collapsed === true),\r\n                'showStyles': (configToc.showStyles === true),\r\n                'base': (layer.transparent === false),\r\n                'visible': (layer.isVisible() === true),\r\n                'id': layer.id,\r\n                'name': layer.name,\r\n                'title': layerTitle,\r\n                'legend': layer.getLegendURL(),\r\n                'outOfRange': !layer.inRange(),\r\n                'opacity': layer.getOpacity(),\r\n                'opacityPer': layer.getOpacity() * 100,\r\n                'styles': [],\r\n                'canEditName': (layer.options.origen != 'Inicial' && layer.options.origen != 'Tematica'),\r\n                'canRemove': layer.options.origen != 'Inicial'\r\n            };\r\n            // Inicializamos el array de promises para lanzar el sucess desde un promise.all\r\n            let promises = [];\r\n            // Si es de tipo WMS, WMTS o WFS y no se han insertado metadatos por configuración, se consulta por sus metadatos\r\n            if ((layer.type === M.layer.type.WMS) || (layer.type === M.layer.type.WFS) && (M.utils.isNullOrEmpty(metadata))) {\r\n                promises.push(this.getImpl().getMetadataLink(layer).then((metadataLink) => {\r\n                    result.metadata = metadataLink;\r\n                }).catch(err => console.log('Catch', err)));\r\n            }\r\n            // Si se trata de una capa WMS se buscan los estilos asociados a la capa. No se hace para WMTS porque\r\n            // no parece que exista un método para asignar el estilo\r\n            if (((layer.type === M.layer.type.WMS))) {\r\n                promises.push(this.getImpl().getStylesLayer(layer).then((styles) => {\r\n                    let selectedStyle = this.getImpl().getLayerStylePosition(layer);\r\n                    result.styles = styles.map((style, index) => {\r\n                        style.id = layer.id;\r\n                        style.selected = (selectedStyle == index);\r\n                        return style;\r\n                    });\r\n                    result.legend = layer.getLegendURL();\r\n                }).catch(err => console.log('Catch', err)));\r\n            }\r\n            // Una vez que estén resueltas todas las promesas, devuelvo el resultado\r\n            Promise.all(promises).then(() => {\r\n                success(result);\r\n            }).catch(err => console.log('Catch', err));\r\n        });\r\n    }\r\n\r\n    /**\r\n     * TODO\r\n     */\r\n    registerImgErrorEvents_(html) {\r\n        let imgElements = html.querySelectorAll('img');\r\n        Array.prototype.forEach.call(imgElements, (imgElem) => {\r\n            imgElem.addEventListener(\"error\", (evt) => {\r\n                let id = evt.target.getAttribute('data-id');\r\n                let layer = this.findLayerById(id);\r\n                let legendErrorUrl = M.utils.concatUrlPaths([M.config.THEME_URL, M.Layer.LEGEND_ERROR]);\r\n                if (!M.utils.isNullOrEmpty(layer)) {\r\n                    layer.setLegendURL(legendErrorUrl);\r\n                    evt.target.src = legendErrorUrl;\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * This function checks if an object is equals\r\n     * to this control\r\n     *\r\n     * @public\r\n     * @function\r\n     * @param {*} obj - Object to compare\r\n     * @returns {boolean} equals - Returns if they are equal or not\r\n     * @api stable\r\n     */\r\n    equals(obj) {\r\n        let equals = false;\r\n        if (obj instanceof ActiveLayersControl) {\r\n            equals = (this.name === obj.name);\r\n        }\r\n        return equals;\r\n    }\r\n\r\n    //Establece la configuracion para las capas al mostrar toc de elementos activos\r\n    setConfigLayers() {\r\n\r\n        //Para las capas activas: Establecer configuracion para visualizacion en toc capas activas\r\n        let layers = this.map_.getLayers();\r\n        layers.forEach((layer, index) => {\r\n            if (M.utils.isUndefined(layer.options))\r\n                layer.options = {};\r\n\r\n            //ID: Si no tiene establecemos el nombre de la capa\r\n            if (M.utils.isNullOrEmpty(layer.id)) {\r\n                layer.id = (this.countID_++) + '_' + layer.name;\r\n            }\r\n            //Origen de la capa: si no se indica, establecemos por defecto que es desde la creacion inicial del mapa\r\n            if (M.utils.isNullOrEmpty(layer.options.origen))\r\n                layer.options.origen = 'Inicial';\r\n\r\n            //Leyenda: Establecer url de leyenda si se indica\r\n            if (!M.utils.isNullOrEmpty(layer.options.urlLegend)) {\r\n                layer.setLegendURL(layer.options.urlLegend);\r\n            }\r\n\r\n            /*  //Capas WMS: podemos utilizar parametros y asi poder cargar WMS con mismo name de capa\r\n             if (layer.type === M.layer.type.WMS || layer.type === M.layer.type.WMTS) {\r\n                 //FIXME: Correcion NUCLEO MAPEA: Tener en cuenta parametro styles para la obtencion de la leyenda\r\n                 layer.getImpl().getStylesLayer();\r\n             } */\r\n        });\r\n    }\r\n\r\n    /*     setOrderLayers() {\r\n            //Dejamos margen entre posBase y posDisplay para elementos cargados pero no gestionables desde el gestor de capas\r\n            let posicion = 0;\r\n            //Capas activas (Las retorna ordenadas por zindex)\r\n            let layers = this.map_.getLayers();\r\n            console.log(\"------------- Nueva lista ----------\");\r\n            //Para cada capa cargada establecer posicion segun visualizacion en pantalla\r\n            layers.forEach((layer, zIndex) => {\r\n                let isBaseMap = (layer.isBaseMap === true);\r\n                let isDrawLayer = (layer.name === '__draw__');\r\n                let isTransparent = (layer.transparent === true);\r\n                let displayInLayerSwitcher = (layer.displayInLayerSwitcher === true);\r\n                let isNotWMC = (layer.type !== M.layer.type.WMC);\r\n                let isNotWMSFull = !((layer.type === M.layer.type.WMS) && M.utils.isNullOrEmpty(layer.name));\r\n\r\n                //Mapa base\r\n                if (isBaseMap) {\r\n                    console.log(\"Base Index:\" + layer.getImpl().getZIndex() + \" \" + layer.legend);\r\n                    this.getImpl().updateOrderLayer(layer, 0);\r\n                } else if (!isBaseMap && !isDrawLayer && isTransparent && isNotWMC && isNotWMSFull && displayInLayerSwitcher) {\r\n                    posicion++;\r\n                    console.log(\"Index:\" + layer.getImpl().getZIndex() + \" \" + layer.legend);\r\n                    //Actualizar posicion de la capa\r\n                    this.getImpl().updateOrderLayer(layer, posicion);\r\n                }\r\n\r\n            });\r\n        } */\r\n\r\n}","/**\r\n * @module M/impl/control/BaseLayersControl\r\n */\r\n\r\nexport default class BaseLayersControl extends M.impl.Control {\r\n  /**\r\n   * @classdesc\r\n   * Main constructor of the BaseLayersControl.\r\n   *\r\n   * @constructor\r\n   * @extends {M.impl.Control}\r\n   * @api stable\r\n   */\r\n  constructor(params) {\r\n    super();\r\n    this.params_ = params || {};\r\n    this.facadeMap_ = null;\r\n  }\r\n  /**\r\n   * This function adds the control to the specified map\r\n   *\r\n   * @public\r\n   * @function\r\n   * @param {M.Map} map to add the plugin\r\n   * @param {HTMLElement} element of the plugin\r\n   * @api stable\r\n   */\r\n  addTo(map, element) {\r\n    this.facadeMap_ = map;\r\n    this.element = element;\r\n\r\n    let olMap = map.getMapImpl();\r\n    ol.control.Control.call(this, {\r\n      'element': element,\r\n      'target': null\r\n    });\r\n    olMap.addControl(this);\r\n  }\r\n\r\n  /*\r\n  removeBaseMap = function(id) {\r\n    //Desactivar\r\n    //var baseMap = this.getItemBaseLayer (id);\r\n    //baseMap.setVisible(true);\r\n    this.facadeMap_.removeLayers(id);\r\n  };\r\n\r\n  setBaseMap = function(id) {\r\n    //Activar\r\n    //var baseMap = this.getItemBaseLayer (id);\r\n    //baseMap.setVisible(true);\r\n    //baseMap.setZIndex(0);\r\n    this.facadeMap_.addLayers(id);\r\n    id.setZIndex(0);\r\n  };\r\n\r\n  getItemBaseLayer = function(id) {\r\n    var layerBase = null;\r\n    //Obtenemos baseLayer indicada\r\n    var lstLayers = this.facadeMap_.getBaseLayers();\r\n    lstLayers.forEach(function (item, index) {\r\n      if (id == item.id) {\r\n        layerBase = item;\r\n        return;\r\n      }\r\n    }, this);\r\n    return layerBase;\r\n  };\r\n  */\r\n\r\n  /**\r\n   * This function destroys this control, cleaning the HTML\r\n   * and unregistering all events\r\n   *\r\n   * @public\r\n   * @function\r\n   * @api stable\r\n   * @export\r\n   */\r\n  destroy() {\r\n    this.deactivate();\r\n    this.element.remove();\r\n    this.facadeMap_.getMapImpl().removeControl(this);\r\n    this.facadeMap_ = null;\r\n    this.element = null;\r\n  }\r\n\r\n}","/**\r\n * @module M/plugin/BaseLayersControl\r\n */\r\nimport ManageLayersControl from './managelayerscontrol.js';\r\nimport BaseLayersImplControl from 'impl/baselayersControl';\r\nimport template from 'templates/baselayers';\r\n\r\nexport default class BaseLayersControl extends ManageLayersControl {\r\n\r\n\r\n    /**\r\n     * Name to identify this control\r\n     * @const\r\n     * @type {string}\r\n     * @public\r\n     * @api stable\r\n     */\r\n    static get NAME() {\r\n        return 'BaseLayers';\r\n    }\r\n\r\n    /**\r\n     * Name to identify url template\r\n     * @const\r\n     * @type {string}\r\n     * @public\r\n     * @api stable\r\n     */\r\n    static get TEMPLATE() {\r\n        return template;\r\n    }\r\n\r\n    static get BASEMAP_BLANCO() {\r\n        return 'base_blanco';\r\n    }\r\n    static get IMG_BASEMAP_DEFAULT() {\r\n        return 'assets/img/default.png';\r\n    }\r\n    static get IMG_BASEMAP_WHITE() {\r\n        return 'assets/img/osm.png';\r\n    }\r\n\r\n    /**\r\n     * @classdesc\r\n     * Main constructor of the class. Creates a BaseLayersControl\r\n     * control\r\n     *\r\n     * @constructor\r\n     * @extends {M.Control}\r\n     * @api stable\r\n     */\r\n    constructor(params, options) {\r\n        // 1. checks if the implementation can create BaseLayersControl\r\n        if (M.utils.isUndefined(BaseLayersImplControl)) {\r\n            M.exception('La implementación usada no puede crear controles BaseLayersControl');\r\n        }\r\n        let opt_ = {\r\n            controlName: BaseLayersControl.NAME,\r\n            iconClass: 'g-cartografia-localizacion',\r\n            tooltip: 'Mapas base'\r\n        };\r\n        // Se annaden los parametros de control a las opciones\r\n        options = M.utils.extend(opt_, options, true);\r\n        // 2. implementation of this control\r\n        let impl = new BaseLayersImplControl();\r\n\r\n        super(impl, params, options);\r\n\r\n        /**\r\n         * Params of the control\r\n         * @private\r\n         * @type {params}\r\n         */\r\n        this.params_ = params || {};\r\n\r\n        this.map_ = null;\r\n        this.baseMaps_ = [];\r\n        this.mapaActivo = null;\r\n        this.activatedBlankMap = null;\r\n    }\r\n\r\n    addTo(map) {\r\n        super.addTo(map);\r\n        this.map_ = map;\r\n        this.baseMaps_ = this.loadConfigInicial();\r\n        this.activatedBlankMap = !M.utils.isNullOrEmpty(this.params_.activatedBlankMap) ? this.params_.activatedBlankMap : true;\r\n        //Si no hay mapa activo, establecer seleccion por defecto\r\n        if (M.utils.isNullOrEmpty(this.mapaActivo) && this.activatedBlankMap) {\r\n            this.mapaActivo = BaseLayersControl.BASEMAP_BLANCO;\r\n        }\r\n        this.renderPanel();\r\n    }\r\n\r\n    render() {\r\n        //No es necesario actualizar el panel cada vez que cargamos el control(no hya cambios que actualziar)\r\n        //El metodo render() que se usa al activar el control vacio, y solo al annadir llamamos una vez para construir inicialmente el panel\r\n    }\r\n\r\n    renderPanel() {\r\n        let tempVars= this.getTemplateVariables_();\r\n\r\n        let html = M.template.compileSync(BaseLayersControl.TEMPLATE, {\r\n            //'jsonp' : true,\r\n            'vars': tempVars\r\n        });\r\n            this.getControlContainer_().innerHTML = html.innerHTML;\r\n            /*           //Establecer mapa activo\r\n                      if (!M.utils.isNullOrEmpty(this.mapaActivo)) {\r\n                          let selectItem = this.getControlContainer_().querySelector('[data-id=' + this.mapaActivo + ']');\r\n                          selectItem.click();\r\n                      } */\r\n\r\n    }\r\n\r\n    /**\r\n     * Gets the variables of the template to compile\r\n     */\r\n    getTemplateVariables_() {\r\n        //Generar lista de mapas base\r\n        let baseLayers = this.baseMaps_;\r\n        let configTemplate = {\r\n            'baseLayers': baseLayers.map(this.parseLayerForTemplate_, this)\r\n        };\r\n        if (this.activatedBlankMap) {\r\n            configTemplate.baseMapBlanco = {\r\n                id: BaseLayersControl.BASEMAP_BLANCO,\r\n                activo: BaseLayersControl.BASEMAP_BLANCO == this.mapaActivo\r\n            };\r\n        }\r\n        return configTemplate;\r\n    }\r\n\r\n\r\n    /**\r\n     * This function checks if an object is equals\r\n     * to this control\r\n     *\r\n     * @private\r\n     * @function\r\n     */\r\n    parseLayerForTemplate_(baseMap) {\r\n        let layer = baseMap.layer;\r\n        //Nombre(Titulo) mapa\r\n        let title = layer.legend;\r\n        if (M.utils.isNullOrEmpty(title))\r\n            title = layer.name;\r\n        if (M.utils.isNullOrEmpty(title))\r\n            title = 'Mapa base';\r\n        let descripcion = layer.options.descripcion;\r\n        if (M.utils.isNullOrEmpty(descripcion))\r\n            descripcion = 'Imagen mapa base - ' + title;\r\n        let urlImg = baseMap.img;\r\n        let activo = (this.mapaActivo === baseMap.id);\r\n        return {\r\n            'id': baseMap.id,\r\n            'title': title,\r\n            'descripcion': descripcion,\r\n            'img': urlImg,\r\n            'activo': activo\r\n        };\r\n    }\r\n\r\n    addEvents(html) {\r\n        let content = html.querySelector(this.getSelectorContainer_());\r\n        content.addEventListener(\"click\", (evt) => this.clickBaseLayer(evt));\r\n        this.map_.on(M.evt.CHANGE_WMC, () => {\r\n            this.mapaActivo = null;\r\n            this.baseMaps_ = this.loadConfigInicial();\r\n            this.renderPanel();\r\n        });\r\n    }\r\n\r\n    clickBaseLayer(evt) {\r\n        evt = (evt || window.event);\r\n        let itemTarget = evt.target;\r\n        if (!M.utils.isNullOrEmpty(itemTarget)) {\r\n            //Cambio de mapa base\r\n            if (itemTarget.classList.contains('m-accion-baselayers-load')) {\r\n                evt.stopPropagation();\r\n\r\n                let id = itemTarget.getAttribute('data-id');\r\n                if (!M.utils.isNullOrEmpty(id)) {\r\n                    //Obtenemos el elemento activo\r\n                    let activeItem = this.getControlContainer_().querySelector('.baseActivo');\r\n                    let activeId = ((activeItem) ? activeItem.getAttribute('id') : null);\r\n                    //Establecer mapa base seleccionado\r\n                    if (id != activeId) {\r\n\r\n                        //Establecer mapa base seleccionado\r\n                        let selectItem = this.getControlContainer_().querySelector('#' + id);\r\n                        selectItem.classList.toggle('baseActivo');\r\n\r\n                        try {\r\n                            //Si tenemos capa la annadimos (puede ser mapa en blanco, no annade capa)\r\n                            let selectMap = this.findItemByProperty(this.baseMaps_, 'id', id);\r\n                            if (selectMap && selectMap.layer) {\r\n                                // this.addLayers(selectMap.layer);\r\n                                //Hack a mapea, si se usa directamente selectMap.layer.setVisible\r\n                                //pone invisible la capa si ya hay una capa base activa y utiliza el updateResolutionsFromBaseLayers que reinicia los estilos\r\n                                selectMap.layer.getImpl().getOL3Layer().setVisible(true);\r\n                            }\r\n                        } catch (error) {\r\n                            //console.log(error);\r\n                        }\r\n\r\n                        try {\r\n                            //Eliminar seleccion mapa base actual\r\n                            if (activeId) {\r\n                                activeItem.classList.toggle('baseActivo');\r\n                                let activeMap = this.findItemByProperty(this.baseMaps_, 'id', activeId);\r\n                                activeMap.layer.getImpl().getOL3Layer().setVisible(false);\r\n                            }\r\n                        } catch (error) {\r\n                            //console.log(error);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    //Establece la configuracion inicial para el funcionamiento del control\r\n    loadConfigInicial() {\r\n        let baseMaps = this.params_.baseMaps;\r\n        let bmapLoaded = false;\r\n        // Annadimos las posibles capas base que haya en el mapa, como las del wmc\r\n        let loadedBaseMaps = this.map_.getBaseLayers().map((layer) => {\r\n            return {\r\n                img: \"\",\r\n                layer: layer\r\n            };\r\n        });\r\n        if (loadedBaseMaps.length) {\r\n            for (let i = 0; i < loadedBaseMaps.length; i++) {\r\n                // Pongo como activa la que venga como visible\r\n                if (loadedBaseMaps[i].layer.isVisible() && !bmapLoaded) {\r\n                    loadedBaseMaps[i].activo = true;\r\n                    bmapLoaded = true;\r\n                } else {\r\n                    loadedBaseMaps[i].activo = false;\r\n                }\r\n            }\r\n            // Elimino cualquier otra capa activa que viniera por configuración\r\n            for (let bl of baseMaps) {\r\n                bl.activo = false;\r\n            }\r\n            // Si no venía ninguna como activa, marco la primera de la lista\r\n            if (!bmapLoaded) {\r\n                loadedBaseMaps[0].layer.setVisible(true);\r\n                loadedBaseMaps[0].activo = true;\r\n                bmapLoaded = true;\r\n            }\r\n            baseMaps = [...baseMaps, ...loadedBaseMaps];\r\n        }\r\n\r\n        if (M.utils.isNullOrEmpty(baseMaps))\r\n            baseMaps = [];\r\n        // parses parameters to Array\r\n        if (!M.utils.isArray(baseMaps))\r\n            baseMaps = [baseMaps];\r\n\r\n        let maps = baseMaps.map((itemMap, index) => {\r\n            // Pongo el z_index a 0\r\n            itemMap.layer.setZIndex(0);\r\n            //Id mapa\r\n            itemMap.id = 'base_' + index;\r\n            //Procesar seleccion mapa base por defecto\r\n            if ((itemMap.activo === true) && M.utils.isNullOrEmpty(this.mapaActivo)) {\r\n                this.mapaActivo = itemMap.id;\r\n                if (!bmapLoaded) {\r\n                    this.addLayers(itemMap.layer);\r\n                }\r\n            }\r\n            // Comprobar si tiene una imagen asignada\r\n            if (M.utils.isNullOrEmpty(itemMap.img))\r\n                itemMap.img = this.getImgLayer(itemMap.layer);\r\n            //Capa asociada al mapa\r\n            let baseLayer;\r\n            if (itemMap.layer instanceof M.Layer)\r\n                baseLayer = itemMap.layer;\r\n            else {\r\n                try {\r\n                    //Si no es un obj Layer: obtener configuracion y creamos objeto\r\n                    let parameter = M.parameter.layer(itemMap.layer);\r\n                    if (!M.utils.isNullOrEmpty(parameter.type))\r\n                        baseLayer = new M.layer[parameter.type](itemMap.layer);\r\n                    else\r\n                        M.dialog.error('No se ha especificado un tipo válido para la capa');\r\n                } catch (err) {\r\n                    M.dialog.error('El formato de la capa (' + itemMap.layer + ') no se reconoce');\r\n                }\r\n            }\r\n\r\n            //Establecer ID de layer si no tiene\r\n            if (M.utils.isNullOrEmpty(baseLayer.id)) {\r\n                baseLayer.id = itemMap.id;\r\n            }\r\n\r\n\r\n            //FIXME: Creamos todas las capas como overlays no consultables y simplemente colocamos en ultima posicion\r\n            //La gestion interna de capas base hace efectos raros con los zoom\r\n            baseLayer.isbaseLayer = true;\r\n            baseLayer.transparent = false;\r\n            if (M.utils.isUndefined(baseLayer.options))\r\n                baseLayer.options = {};\r\n            baseLayer.options.queryable = false;\r\n\r\n            //Establecer layer configurada\r\n            itemMap.layer = baseLayer;\r\n\r\n            return itemMap;\r\n        });\r\n        return maps;\r\n    }\r\n\r\n    /**\r\n     * This function checks if an object is equals\r\n     * to this control\r\n     *\r\n     * @public\r\n     * @function\r\n     * @param {*} obj - Object to compare\r\n     * @returns {boolean} equals - Returns if they are equal or not\r\n     * @api stable\r\n     */\r\n    equals(obj) {\r\n        let equals = false;\r\n        if (obj instanceof BaseLayersControl) {\r\n            equals = (this.name === obj.name);\r\n        }\r\n        return equals;\r\n    }\r\n\r\n    getImgLayer(layer) {\r\n        if (layer.type === M.layer.type.WMS) {\r\n            const legend = layer.getLegendURL();\r\n            if (legend) {\r\n                return legend;\r\n            } else {\r\n                return layer.url + (layer.url.indexOf(\"?\") > -1 ? '&' : '?') + \"service=WMS&request=GetMap\" +\r\n                    \"&layers=\" + layer.name +\r\n                    \"&bbox=\" + this.map_.getMaxExtent() +\r\n                    \"&width=200&height=120&version=1.1.1\" +\r\n                    \"&srs=\" + this.map_.getProjection().code + \"&format=image/png\";\r\n            }\r\n        } else {\r\n            return BaseLayersControl.IMG_BASEMAP_DEFAULT;\r\n        }\r\n\r\n    }\r\n\r\n\r\n}","//******\tMODIFICICACION CODIGO NUCLEO DE MAPEA ******\r\n\r\n// *************************************\r\n// GESTION DE LAYERS MEDIENTE IDs\r\n// Criterio para establecer igual de objetos para elementos tipo LAYER\r\n// Se modifica para tener en cuenta en primera instancia el parametro id, en caso de no tener id se mantiene procedimiento original de capa elemento\r\nexport default class MapeaCoreExtension {\r\n\r\n    constructor () { }\r\n\r\n    static initMapeaCoreExtension(this_) {\r\n        //FIXME: Modificar funcionalidad original core mapea:\r\n        // \t\t Usar id para determinar igualdad de objetos layer\r\n        if (M.utils.isNullOrEmpty(this_.fnEquals_)) {\r\n            //Almacenar funcionalidad original metodo equals de las layer\r\n            this_.fnEquals_ = [];\r\n            this_.fnEquals_[M.layer.type.GeoJSON] = M.layer.GeoJSON.prototype.equals;\r\n            this_.fnEquals_[M.layer.type.KML] = M.layer.KML.prototype.equals;\r\n            this_.fnEquals_[M.layer.type.Mapbox] = M.layer.Mapbox.prototype.equals;\r\n            this_.fnEquals_[M.layer.type.OSM] = M.layer.OSM.prototype.equals;\r\n            this_.fnEquals_[M.layer.type.WFS] = M.layer.WFS.prototype.equals;\r\n            this_.fnEquals_[M.layer.type.WMC] = M.layer.WMC.prototype.equals;\r\n            this_.fnEquals_[M.layer.type.WMS] = M.layer.WMS.prototype.equals;\r\n            this_.fnEquals_[M.layer.type.WMTS] = M.layer.WMTS.prototype.equals;\r\n\r\n            //Definimos funcionalidad generica evaluando primero IDs\r\n            let fnEquals_ = this_.fnEquals_;\r\n            let _fn_equals = function (obj) {\r\n                let equals = false;\r\n                //Usar IDs si tiene, sino, repdoducir comportamiento original segun el tipo del objeto\r\n                if (!M.utils.isUndefined(this.id))\r\n                    equals = (this.id === obj.id);\r\n                else\r\n                    equals = fnEquals_[this.type](obj);\r\n                return equals;\r\n            };\r\n            //Establecer nueva funcionalidad teniendo en cuenta IDs\r\n            M.layer.GeoJSON.prototype.equals = _fn_equals;\r\n            M.layer.KML.prototype.equals = _fn_equals;\r\n            M.layer.Mapbox.prototype.equals = _fn_equals;\r\n            M.layer.OSM.prototype.equals = _fn_equals;\r\n            M.layer.WFS.prototype.equals = _fn_equals;\r\n            M.layer.WMC.prototype.equals = _fn_equals;\r\n            M.layer.WMS.prototype.equals = _fn_equals;\r\n            M.layer.WMTS.prototype.equals = _fn_equals;\r\n        }\r\n        // FIN GESTION DE LAYERS MEDIENTE IDs\r\n        // *************************************\r\n    }\r\n    static overrideMapeaCore() {\r\n        // ******************************\r\n        // PROCESO CAPABILITIES\r\n        // Ampliamos funcionalidad existente proceso capabilities\r\n        // @EXTENSION: Incluir funcionalidad getCapabilities para WFS (igual que la actual para WMS)\r\n        M.impl.layer.WFS.prototype.getCapabilities = M.impl.layer.WMS.prototype.getCapabilities;\r\n\r\n        // @EXTENSION: Obtener Abstract\r\n        M.impl.layer.WMS.prototype.getAbstractLayer =\r\n            M.impl.layer.WFS.prototype.getAbstractLayer =\r\n            M.impl.layer.WMTS.prototype.getAbstractLayer = function () {\r\n                return new Promise(function (success, fail) {\r\n                    if (!M.utils.isNullOrEmpty(this.abstract_)) {\r\n                        success(this.abstract_);\r\n                    }\r\n                    else {\r\n                        this.getCapabilities().then(function (info) {\r\n                            let infoLayer = null;\r\n                            //TODO: PTE: si se indican varias capas que descripcion obtener ....\r\n                            //Capas WMS/WFS\r\n                            if (!M.utils.isUndefined(info.getInfoCapabilities))\r\n                                infoLayer = info.getInfoCapabilities(this.name);\r\n                            //FIXME: Capas WMTS Verificar si el esquema es correcto o depende de la version ...\r\n                            else if (!M.utils.isUndefined(info.Contents) && info.Contents.Layer)\r\n                                infoLayer = info.Contents.Layer[0];\r\n                            this.abstract_ = ((infoLayer) ? infoLayer.Abstract : '');\r\n                            success(this.abstract_);\r\n                        }.bind(this)).catch(err => fail(err));\r\n                    }\r\n                }.bind(this));\r\n            };\r\n\r\n        // @EXTENSION: Obtener Metadatos de la capa\r\n        M.impl.layer.WMS.prototype.getMetadataURL =\r\n            M.impl.layer.WFS.prototype.getMetadataURL = function () {\r\n                return new Promise((success, fail) => {\r\n                    if (!M.utils.isNullOrEmpty(this.metadataLink_)) {\r\n                        success(this.metadataLink_);\r\n                    }\r\n                    else {\r\n                        this.getCapabilities().then((info) => {\r\n                            let infoLayer = null;\r\n                            if (this instanceof M.impl.layer.WMTS) {\r\n                                // Nada\r\n                            } else {\r\n                                infoLayer = info.getInfoCapabilities(this.name);\r\n                            }\r\n                            this.metadataLink_ = ((infoLayer) ? (infoLayer.MetadataURL) ? infoLayer.MetadataURL[0].OnlineResource : false : false);\r\n                            // Lo siguiente es un arreglo para poder servir los metadatos de las capas provenientes de Andalucía que no tienen un metadataURL (Practicamente todas)\r\n                            // Para ello, se compara la url base de la capa con las de IECA y Junta de Andalucía, realizando una consulta sobre la capa y recogiendo\r\n                            // el identificador para formar la URL que redirige al geonetwork de la ide de Andalucía.\r\n                            let baseURLs = ['www.ideandalucia.es', 'www.callejerodeandalucia.es', 'www.juntadeandalucia.es'];\r\n                            // Consigo la url base de la capa\r\n                            let baseUrlLayer = document.createElement(\"a\");\r\n                            baseUrlLayer.href = this.url;\r\n                            if (!this.metadataLink_ && baseURLs.indexOf(baseUrlLayer.hostname) > -1) {\r\n                                // URL dónde se busca el uuid de la capa\r\n                                let searchMetadataURL = 'http://www.ideandalucia.es/catalogo/inspire/srv/spa/q';\r\n                                // URL dónde se inserta el uuid y ya redirecciona al metadato completo de la capa\r\n                                let metadataURL = 'http://www.ideandalucia.es/catalogo/inspire/srv/spa/metadata.formatter.html?xsl=metadato_completo&uuid=';\r\n                                M.remote.get(searchMetadataURL, { any: this.name }, { 'jsonp': true }).then((response) => {\r\n                                    // Parseamos el XML devuelto\r\n                                    let parser = new DOMParser();\r\n                                    let xmlDoc = parser.parseFromString(response.text, \"text/xml\");\r\n                                    // Se recoge el uuid del xml\r\n                                    let uuid = xmlDoc.getElementsByTagName(\"uuid\");\r\n\r\n                                    // Si existe se compone el link a los metadatos\r\n                                    if (uuid.length) {\r\n                                        this.metadataLink_ = metadataURL + uuid[0].childNodes[0].nodeValue;\r\n                                    }\r\n                                    success(this.metadataLink_);\r\n                                }).catch(err => fail(err));\r\n                            } else {\r\n                                success(this.metadataLink_);\r\n                            }\r\n\r\n                        }).catch(err => fail(err));\r\n                    }\r\n                });\r\n            };\r\n\r\n        // @EXTENSION: Obtener Lista de estilos asociados\r\n        M.impl.layer.WMS.prototype.getStylesLayer = function () {\r\n            return new Promise((success, fail) => {\r\n                if (!M.utils.isNullOrEmpty(this.listStyles_)) {\r\n                    success(this.listStyles_);\r\n                } else {\r\n                    this.getCapabilities().then((info) => {\r\n                        let infoLayer = info.getInfoCapabilities(this.name);\r\n                        this.listStyles_ = (!M.utils.isNullOrEmpty(infoLayer)) ? ((!M.utils.isNullOrEmpty(infoLayer.Style)) ? infoLayer.Style : []) : [];\r\n                        // Inicializamos con el estilo por defecto\r\n                        this.selectedStyle_ = 0;\r\n                        if (!M.utils.isNullOrEmpty(this.listStyles_[0]) && !M.utils.isNullOrEmpty(this.listStyles_[0].LegendURL))\r\n                            this.setLegendURL(this.listStyles_[0].LegendURL[0].OnlineResource);\r\n                        // Se recorren todos los estilos por si el usuario hubiese inicializado por paramtros otro estilo\r\n                        this.listStyles_.forEach((style, index) => {\r\n                            // Si se ha configurado un estilo, marcar el índice y establecer la leyenda\r\n                            if (style.Name == this.getOL3Layer().getSource().getParams().STYLES) {\r\n                                this.selectedStyle_ = index;\r\n                                if (!M.utils.isNullOrEmpty(style.LegendURL)) {\r\n                                    this.setLegendURL(style.LegendURL[0].OnlineResource);\r\n                                }\r\n                            }\r\n                        });\r\n                        success(this.listStyles_);\r\n                    }).catch(err => fail(err));\r\n                }\r\n            });\r\n        };\r\n        // @EXTENSION: Obtener estilo seleccionado\r\n        M.impl.layer.WMS.prototype.getSelectedStyle = function () {\r\n            if (!M.utils.isNullOrEmpty(this.listStyles_)) {\r\n                return this.listStyles_[this.selectedStyle_];\r\n            } else {\r\n                return null;\r\n            }\r\n        };\r\n        // @EXTENSION: Establecer estilo seleccionado\r\n        M.impl.layer.WMS.prototype.setSelectedStyle = function (selectedStyle) {\r\n            if (!M.utils.isNullOrEmpty(this.listStyles_)) {\r\n                let style = this.listStyles_[selectedStyle];\r\n                this.getOL3Layer().getSource().updateParams({ STYLES: style.Name });\r\n                this.selectedStyle_ = selectedStyle;\r\n                // Al cambiar el estilo, hay que cambiar la leyenda asociada\r\n                if (!M.utils.isNullOrEmpty(style.LegendURL))\r\n                    this.setLegendURL(style.LegendURL[0].OnlineResource);\r\n            }\r\n        };\r\n\r\n        // @EXTENSION: Obtener capabilities asociado a la capa indicada\r\n        M.impl.GetCapabilities.prototype.getInfoCapabilities = function (layerName) {\r\n            let obj = this;\r\n            let key = null;\r\n            let capabilities = null;\r\n            for (key in obj) {\r\n                if (!M.utils.isNullOrEmpty(obj[key]) && !M.utils.isUndefined(obj[key].Capability)) {\r\n                    capabilities = obj[key].Capability;\r\n                    break;\r\n                }\r\n            }\r\n\r\n            //Obtenemos informacion del capabilities asociado a la capa\r\n            let info = null;\r\n            if (!M.utils.isNullOrEmpty(capabilities))\r\n                info = this.getInfoCapabilitiesRecursive_(capabilities.Layer, layerName);\r\n\r\n            return info;\r\n        };\r\n        //Buscar capa recursivamente por name\r\n        M.impl.GetCapabilities.prototype.getInfoCapabilitiesRecursive_ = function (layer, layerName) {\r\n            let itemInfo = null;\r\n            let i, ilen;\r\n            if (!M.utils.isNullOrEmpty(layer)) {\r\n                // array\r\n                if (M.utils.isArray(layer)) {\r\n                    for (i = 0, ilen = layer.length; (i < ilen) && (itemInfo === null); i++) {\r\n                        itemInfo = this.getInfoCapabilitiesRecursive_(layer[i], layerName);\r\n                    }\r\n                } else if (M.utils.isObject(layer)) {\r\n                    // base case\r\n                    if (M.utils.isNullOrEmpty(layerName) || (layer.Name === layerName)) {\r\n                        itemInfo = layer;\r\n                    }\r\n                    // recursive case\r\n                    else if (!M.utils.isUndefined(layer.Layer)) {\r\n                        itemInfo = this.getInfoCapabilitiesRecursive_(layer.Layer, layerName);\r\n                    }\r\n                }\r\n            }\r\n            return itemInfo;\r\n        };\r\n\r\n        // FIN PROCESO CAPABILITIES\r\n        // ******************************\r\n\r\n        // ******************************\r\n        // PROCESO ELIMINAR LAYER\r\n        // Modificar funcionalidad actual\r\n        // Se eliminara el objeto layer enviado, no se aplicara busqueda para obtener la layer asociasada\r\n        // Se define metodo generico, y establecemos funcionalidad especifica acorde al codigo actual de mapea segun el tipo de la capa\r\n\r\n        // @EXTENSION: Eliminar capas enviadas como parametro\r\n        M.impl.Map.prototype.removeItemLayers = function (layers) {\r\n            if (M.utils.isNullOrEmpty(layers)) {\r\n                layers = [];\r\n            }\r\n            if (!M.utils.isArray(layers)) {\r\n                layers = [layers];\r\n            }\r\n            \r\n            layers.forEach( itemLayer => {\r\n                //JGL: .remove (de ol.Collection) no está funcionando en mapea5\r\n                //this.layers_.remove(itemLayer);\r\n                //usando el filtro de Array funciona en ambos\r\n                this.layers_ = this.layers_.filter( item => item != itemLayer );\r\n               \r\n                if ((itemLayer.type !== M.layer.type.MBtiles) && (itemLayer.type !== M.layer.type.WMC)) {\r\n                    itemLayer.getImpl().destroy();\r\n                }\r\n                if ((itemLayer.type == M.layer.type.KML) && (itemLayer.extract === true)) {\r\n                    this.featuresHandler_.removeLayer(itemLayer.getImpl());\r\n                }\r\n            });\r\n\r\n            return this;\r\n        };\r\n        // PROCESO ELIMINAR LAYER\r\n        // ******************************\r\n\r\n\r\n        // ******************************\r\n        // ELIMINAR CAPA OSM\r\n        // Eliminar bug codigo: falta scope\r\n        // @BUG\r\n        M.impl.layer.OSM.prototype.destroy = function () {\r\n            let olMap = this.map.getMapImpl();\r\n            if (!M.utils.isNullOrEmpty(this.ol3Layer)) {\r\n                olMap.removeLayer(this.ol3Layer);\r\n                this.ol3Layer = null;\r\n            }\r\n\r\n            this.map.getLayers().forEach(function (lay) {\r\n                if (lay instanceof M.layer.OSM || lay instanceof M.layer.Mapbox) {\r\n                    this.haveOSMorMapboxLayer = true;\r\n                }\r\n            }, this);\r\n\r\n            if (!this.haveOSMorMapboxLayer) {\r\n                this.map.getImpl().getMapImpl().getControls().getArray().forEach(function (data) {\r\n                    if (data instanceof ol.control.Attribution) {\r\n                        this.map.getImpl().getMapImpl().removeControl(data);\r\n                    }\r\n                    //FIXME: Correcion nucleo mapea: enviar scope\r\n                }, this);\r\n            }\r\n            this.map = null;\r\n        };\r\n        // FIN ELIMINAR CAPA OSM\r\n        // ******************************\r\n\r\n        // ******************************\r\n        // GESTION LEYENDA LAYERS\r\n        // Almacenar ulr de la leyenda\r\n        // @OVERRIDE\r\n        M.impl.Layer.prototype.getLegendURL = function () {\r\n            //Si no tiene valor establecer img leyenda por defecto\r\n            if (M.utils.isNullOrEmpty(this.legendUrl_))\r\n                this.legendUrl_ = M.utils.concatUrlPaths([M.config.THEME_URL, M.Layer.LEGEND_DEFAULT]);\r\n            return this.legendUrl_;\r\n        };\r\n        // @OVERRIDE\r\n        M.impl.Layer.prototype.setLegendURL = function (legendUrl) {\r\n            this.legendUrl_ = legendUrl;\r\n        };\r\n        // FIN GESTION LEYENDA LAYERS\r\n        // ******************************\r\n\r\n        // ************************************************************\r\n        // INDICES DE ORDENACION DEFINIDOS POR DEFECTO\r\n        // El orden ya no se establece de manera estandar por mapea si no por la visualizacion en la pantalla\r\n        // @OVERRIDE\r\n        M.impl.Map.Z_INDEX = {};\r\n        M.impl.Map.Z_INDEX[M.layer.type.WMC] = 1;\r\n        M.impl.Map.Z_INDEX[M.layer.type.WMS] = 1;\r\n        M.impl.Map.Z_INDEX[M.layer.type.WMTS] = 1;\r\n        M.impl.Map.Z_INDEX[M.layer.type.Mapbox] = 1;\r\n        M.impl.Map.Z_INDEX[M.layer.type.OSM] = 1;\r\n        M.impl.Map.Z_INDEX[M.layer.type.KML] = 1;\r\n        M.impl.Map.Z_INDEX[M.layer.type.WFS] = 1;\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","/**\r\n * @module M/control/ThematicLayersControl\r\n */\r\nimport ManageLayersImplControl from 'impl/managelayerscontrol';\r\nimport ManageLayersControl from './managelayerscontrol.js';\r\nimport template from 'templates/thematiclayers';\r\n\r\nexport default class ThematicLayersControl extends ManageLayersControl {\r\n\r\n\r\n    /**\r\n     * Name to identify this control\r\n     * @const\r\n     * @type {string}\r\n     * @public\r\n     * @api stable\r\n     */\r\n    static get NAME() {\r\n        return 'ThematicLayers';\r\n    }\r\n\r\n    /**\r\n     * Name to identify url template\r\n     * @const\r\n     * @type {string}\r\n     * @public\r\n     * @api stable\r\n     */\r\n    static get TEMPLATE() {\r\n        return template;\r\n    }\r\n\r\n    /**\r\n     * @classdesc\r\n     * Main constructor of the class. Creates a ThematicLayersControl\r\n     * control\r\n     *\r\n     * @constructor\r\n     * @extends {M.Control}\r\n     * @api stable\r\n     */\r\n    constructor(params, options) {\r\n\r\n        // 2. implementation of this control\r\n        let impl = new ManageLayersImplControl(params);\r\n\r\n        let opt_ = {\r\n            controlName: ThematicLayersControl.NAME,\r\n            iconClass: 'g-cartografia-medir-area',\r\n            tooltip: 'Capas temáticas'\r\n        };\r\n        // Se annaden los parametros de control a las opciones\r\n        options = M.utils.extend(opt_, options, true);\r\n\r\n        super(impl, params, options);\r\n\r\n\r\n        /**\r\n         * Params of the control\r\n         * @private\r\n         * @type {params}\r\n         */\r\n        this.params_ = params || {};\r\n\r\n        this.thematicLayers_ = [];\r\n\r\n        //Establecemos configuracion inicial\r\n        this.loadConfigInicial();\r\n    }\r\n\r\n    /**\r\n     * This function checks if an object is equals\r\n     * to this control\r\n     *\r\n     * @public\r\n     * @function\r\n     * @param {*} obj - Object to compare\r\n     * @returns {boolean} equals - Returns if they are equal or not\r\n     * @api stable\r\n     */\r\n    equals(obj) {\r\n        let equals = false;\r\n        if (obj instanceof ThematicLayersControl) {\r\n            equals = (this.name === obj.name);\r\n        }\r\n        return equals;\r\n    }\r\n\r\n\r\n    render() {\r\n        this.renderPanel();\r\n    }\r\n\r\n    renderPanel() {\r\n        let html = M.template.compileSync(ThematicLayersControl.TEMPLATE, {\r\n            //'jsonp' : true,\r\n            'vars': this.getTemplateVariables_()\r\n        });\r\n            this.getControlContainer_().innerHTML = html.innerHTML;\r\n\r\n    }\r\n\r\n    addEvents(html) {\r\n        let content = html.querySelector(this.getSelectorContainer_());\r\n        content.addEventListener(\"click\", (evt) => this.clickThematicLayer(evt));\r\n    }\r\n\r\n    /**\r\n     * Gets the variables of the template to compile\r\n     */\r\n    getTemplateVariables_() {\r\n        let groups = this.params_.groups;\r\n        let templateData = {\r\n            'groups': groups.map(this.parseGroupForTemplate_, this)\r\n        };\r\n        return templateData;\r\n    }\r\n\r\n    parseGroupForTemplate_(group, index) {\r\n        //Sobre el grupo establecemos parametros inciales de visualizacion en el toc de capas tematicas\r\n        let configToc = this.getOptionsControlManageLayers(group);\r\n        if (M.utils.isNullOrEmpty(configToc)) {\r\n            configToc = {\r\n                index: index,\r\n                collapsed: true,\r\n                activated: false\r\n            };\r\n            this.setOptionsControlManageLayers(group, configToc);\r\n        }\r\n        return {\r\n            'id': group.id,\r\n            'title': group.title,\r\n            'collapsed': (configToc.collapsed === true),\r\n            'overlays': group.overlays.map(this.parseLayerForTemplate_, this),\r\n            'activated': (configToc.activated === true),\r\n        };\r\n    }\r\n    parseLayerForTemplate_(layer, index) {\r\n        //Nombre(Titulo) capa\r\n        let layerTitle = layer.legend;\r\n        if (M.utils.isNullOrEmpty(layerTitle))\r\n            layerTitle = layer.name;\r\n        if (M.utils.isNullOrEmpty(layerTitle))\r\n            layerTitle = 'Servicio WMS';\r\n        return {\r\n            'id': layer.id,\r\n            'name': layer.name,\r\n            'title': layerTitle,\r\n            'load': (this.isLoadLayer(layer) === true)\r\n        };\r\n    }\r\n    //Proceso eventos\r\n    clickThematicLayer(evt) {\r\n        evt = (evt || window.event);\r\n        if (!M.utils.isNullOrEmpty(evt.target)) {\r\n            let itemTarget = evt.target;\r\n            let id = itemTarget.getAttribute('data-id');\r\n            if (!M.utils.isNullOrEmpty(id)) {\r\n                evt.stopPropagation();\r\n                //Obtener control y opciones del toc del elemento seleccionado\r\n                let ctolContainer = this.getControlContainer_();\r\n                let itemTocOptions = this.getQuerySelectorScapeCSS(ctolContainer, '#optionsTocGroup_', id);\r\n\r\n                //Collapse grupo\r\n                if (itemTarget.classList.contains('m-accion-thematiclayers-collapse')) {\r\n                    //Actualizar configuracion estado del toc\r\n                    let group = this.findItemByProperty(this.params_.groups, 'id', id);\r\n                    let configToc = this.getOptionsControlManageLayers(group);\r\n                    configToc.collapsed = !(itemTocOptions.classList.contains('dNone'));\r\n                    //Mostrar/Ocultar grupo\r\n                    itemTarget.classList.toggle('g-cartografia-flecha-abajo2');\r\n                    itemTarget.classList.toggle('g-cartografia-flecha-arriba2');\r\n                    itemTocOptions.classList.toggle('dNone');\r\n                }\r\n                //Annadir/Eliminar todas los elementos del grupo\r\n                else if (itemTarget.classList.contains('m-accion-thematiclayers-load-group')) {\r\n                    //Determinar accion y obtener elementos a procesar\r\n                    let selectorItems = ((itemTarget.classList.contains('g-cartografia-mas2')) ? 'input[type=checkbox]:not(:checked)' : 'input[type=checkbox]:checked');\r\n                    let itemsSelect = itemTocOptions.querySelectorAll(selectorItems);\r\n                    //Realizar operacion para los elementos seleccionados\r\n                    itemsSelect.forEach((item, index) => {\r\n                        item.click();\r\n                    });\r\n                    //Actualizar estado accion de grupo\r\n                    itemTarget.classList.toggle('g-cartografia-mas2');\r\n                    itemTarget.classList.toggle('g-cartografia-cancelar2');\r\n                    itemTarget.title = ((itemTarget.classList.contains('g-cartografia-mas2')) ? 'Añadir todas las capas del grupo' : 'Eliminar todas las capas del grupo');\r\n                    // Se annade a la configuración del grupo si está activo o no, para el caso en que cambiemos de pestanna\r\n                    let group = this.findItemByProperty(this.params_.groups, 'id', id);\r\n                    let configToc = this.getOptionsControlManageLayers(group);\r\n                    configToc.activated = !(itemTarget.classList.contains('g-cartografia-mas2'));\r\n                }\r\n                //Annadir/Eliminar capa\r\n                else if (itemTarget.classList.contains('m-accion-thematiclayers-load')) {\r\n                    //Acaba de cambiar el estado: checked refleja la accion a realizar no el estado actual\r\n                    let layer = this.findItemByProperty(this.thematicLayers_, 'id', id);\r\n                    let isLoad = (!itemTarget.checked);\r\n                    if (isLoad === true)\r\n                        this.removeLayers(layer);\r\n                    else\r\n                        this.addLayers(layer);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    //EStablece la configuracion inicial para el funcionamiento del control\r\n    loadConfigInicial() {\r\n        let groups = this.params_.groups;\r\n        //Procesar configuracion enviada y establecer datos necesarios\r\n        if (M.utils.isNullOrEmpty(groups))\r\n            groups = [];\r\n        if (!M.utils.isArray(groups))\r\n            groups = [groups];\r\n        groups.forEach((group, index) => {\r\n            //Establecer ID de grupo si no tiene\r\n            if (M.utils.isNullOrEmpty(group.id)) {\r\n                group.id = 'grp_thematic_' + index;\r\n                group.index = index;\r\n            }\r\n            //Opcion para gestion de componente managelayers\r\n            if (M.utils.isNullOrEmpty(group.options))\r\n                group.options = {};\r\n            //Titulo\r\n            if (M.utils.isNullOrEmpty(group.title))\r\n                group.title = 'Grupo - ' + index;\r\n            //Capas\r\n            if (M.utils.isNullOrEmpty(group.overlays))\r\n                group.overlays = [];\r\n            group.overlays = this.loadConfigOverlays(group, group.overlays);\r\n            //Actualizar lista de capas tematicas completa\r\n            this.thematicLayers_ = this.thematicLayers_.concat(group.overlays);\r\n        }, this);\r\n        //Actualizar configuracion\r\n        this.params_.groups = groups;\r\n    }\r\n    //Establece configuracion  inicial para las capas del grupo\r\n    loadConfigOverlays(group, overlaysParam) {\r\n        // parses parameters to Array\r\n        if (!M.utils.isArray(overlaysParam))\r\n            overlaysParam = [overlaysParam];\r\n        // gets the parameters as M.Layer objects to add\r\n        let overlays = overlaysParam.map((item, index) => {\r\n            let overlay;\r\n            if (item instanceof M.Layer)\r\n                overlay = item;\r\n            else {\r\n                try {\r\n                    //Si no es un obj Layer: obtener configuracion y creamos objeto\r\n                    let parameter = M.parameter.layer(item);\r\n                    if (!M.utils.isNullOrEmpty(parameter.type))\r\n                        overlay = new M.layer[parameter.type](item);\r\n                    else\r\n                        M.dialog.error('No se ha especificado un tipo válido para la capa');\r\n                } catch (err) {\r\n                    M.dialog.error('El formato de la capa (' + item + ') no se reconoce');\r\n                }\r\n            }\r\n            //Origen de la capa: tematica\r\n            if (M.utils.isNullOrEmpty(overlay.options))\r\n                overlay.options = {};\r\n            overlay.options.isTematica = true;\r\n            overlay.options.origen = 'Tematica';\r\n            //Establecer ID de layer si no tiene\r\n            if (M.utils.isNullOrEmpty(overlay.id))\r\n                overlay.id = 'thematic_' + group.index + '_' + index;\r\n\r\n            return overlay;\r\n        });\r\n\r\n        return overlays;\r\n    }\r\n\r\n}","/**\r\n * @module M/plugin/ManageLayers\r\n */\r\nimport 'assets/css/managelayers';\r\nimport api from '../../api.json';\r\nimport MapeaCoreExtension from './_mapea_core_extension.js';\r\nimport ActiveLayersControl from './activelayersControl.js';\r\nimport BaseLayersControl from './baselayersControl.js';\r\nimport ThematicLayersControl from './thematiclayersControl.js';\r\nimport template from 'templates/template_managelayers_toolbar';\r\n\r\n\r\nexport default class ManageLayers extends M.Plugin {\r\n\r\n\r\n  /**\r\n   * Name to identify this plugin\r\n   * @const\r\n   * @type {string}\r\n   * @public\r\n   * @api stable\r\n   */\r\n  static get NAME() {\r\n    return 'ManageLayers';\r\n  }\r\n\r\n  /**\r\n   * Name to identify url template\r\n   * @const\r\n   * @type {string}\r\n   * @public\r\n   * @api stable\r\n   */\r\n  static get TEMPLATE() {\r\n    return template;\r\n  }\r\n\r\n  /**\r\n   * @classdesc\r\n   * Main facade plugin object. This class creates a plugin\r\n   * object which has an implementation Object\r\n   *\r\n   * @constructor\r\n   * @extends {M.Plugin}\r\n   * @param {Object} impl implementation object\r\n   * @api stable\r\n   */\r\n  constructor(parameters) {\r\n\r\n    super();\r\n    this.name = ManageLayers.NAME;\r\n    /**\r\n     * Facade of the map\r\n     * @private\r\n     * @type {M.Map}\r\n     */\r\n    this.map_ = null;\r\n\r\n    /**\r\n     * Array of controls\r\n     * @private\r\n     * @type {Array<M.Control>}\r\n     */\r\n    this.controls_ = [];\r\n\r\n    //Proceso de parametros enviados\r\n    parameters = parameters || {};\r\n\r\n    this.config_ = parameters.config || {};\r\n    /**\r\n     * Params config control\r\n     * Configuracion por defecto:\r\n\r\n     * @private\r\n     * @type {object}\r\n     */\r\n    this.params_ = parameters.params || {};\r\n\r\n    /**\r\n     * Metadata from api.json\r\n     * @private\r\n     * @type {Object}\r\n     */\r\n    this.metadata_ = api.metadata;\r\n\r\n    /**\r\n     * Options of the controls\r\n     * Configuracion por defecto: (panel tools de mapea, si exite NO se crea)\r\n       panel: {\r\n         {String} name: \t\t'managelayers',\r\n         {String} className: \t'm-managelayers',\r\n         {String} iconClass: \t'g-cartografia-capas2',\r\n         {String} position:  \t M.ui.position.TR,\r\n         {String} tooltip: \t\t'Gestor de capas'\r\n       }\r\n     * @private\r\n     * @type {object}\r\n     */\r\n    this.options_ = parameters.options || {};\r\n\r\n\r\n    //FIXME: Correcion de partes del nucleo de mapea para el proceso de capabilities\r\n    MapeaCoreExtension.overrideMapeaCore();\r\n    //FIXME: Correcion nucleo mapea: Establecemos gestion de layers mediante IDs\r\n    MapeaCoreExtension.initMapeaCoreExtension(this);\r\n\r\n  }\r\n\r\n  /**\r\n   * This function adds this plugin into the map\r\n   *\r\n   * @public\r\n   * @function\r\n   * @param {M.Map} map the map to add the plugin\r\n   * @api stable\r\n   */\r\n  addTo(map) {\r\n    //Asignar el mapa\r\n    this.map_ = map;\r\n    //Creamos toolbar plugin: contiene todos los controles del plugin\r\n    let html = this.createView(map);\r\n      //Configuracion de la toolbar\r\n      this.toolbar_ = {\r\n        target: html,\r\n        selector: '#toolbar-' + (ManageLayers.NAME).toLowerCase(),\r\n        selectorBtn: '.m-toolbar-buttons',\r\n        selectorContainer: '.m-toolbar-containers'\r\n      };\r\n      //Inicializar controles en toolbar cuando este cargado el mapa\r\n      this.map_.once(M.evt.COMPLETED, () => {\r\n        //Cargar si se indica configuracion para metadatos\r\n        //M.remote.get (url, data, options)\r\n        if (!M.utils.isNullOrEmpty(this.params_.metadata)) {\r\n          M.remote.get(this.params_.metadata, null, {\r\n            \"jsonp\": false\r\n          }).then((response) => {\r\n            if (response.error === false) {\r\n              //let data = response.text;\r\n              //let results = JSON.parse(data);\r\n            } else {\r\n              M.dialog.error(\"Se ha producido un error al cargar la configuración de metadatos\", \"Configuración metadatos\");\r\n            }\r\n\r\n            //Cargamos controles\r\n            this.initControls();\r\n          });\r\n        } else //Cargamos controles\r\n          this.initControls();\r\n      });\r\n  }\r\n\r\n  getConfigControl(name) {\r\n    let config = this.config_[name] || {};\r\n    config.params = config.params || {};\r\n    config.options = config.options || {};\r\n    config.options.toolbar = this.toolbar_;\r\n    return config;\r\n  }\r\n\r\n  initControls() {\r\n    let ctrol = null;\r\n    let config = null;\r\n\r\n    //Capas activas\r\n    config = this.getConfigControl('activeLayers');\r\n    ctrol = new ActiveLayersControl(config.params, config.options);\r\n    this.addControlToPlugin_(ctrol);\r\n\r\n    //Mapas base\r\n    config = this.getConfigControl('baseLayers');\r\n    ctrol = new BaseLayersControl(config.params, config.options);\r\n    this.addControlToPlugin_(ctrol);\r\n\r\n    //Capas tematicas(favoritas)\r\n    config = this.getConfigControl('thematicLayers');\r\n    ctrol = new ThematicLayersControl(config.params, config.options);\r\n    this.addControlToPlugin_(ctrol);\r\n\r\n    /* //Capas WMC\r\n    config = this.getConfigControl('wmcLayers');\r\n    ctrol = WMCLayersControl(config.params, config.options);\r\n    this.addControlToPlugin_(ctrol); */\r\n\r\n\r\n    //Creamos para el plugin\r\n    this.panel_ = this.getPanel_();\r\n    // Asignar los controles al panel y el panel al mapa\r\n    this.panel_.addControls(this.controls_);\r\n    this.panel_.on(M.evt.ADDED_TO_MAP, () =>\r\n      this.fire(M.evt.ADDED_TO_MAP)\r\n    );\r\n    this.map_.addPanels(this.panel_);\r\n  }\r\n\r\n  createView(map) {\r\n    if (!M.template.compileSync) { // JGL: retrocompatibilidad Mapea4\r\n      M.template.compileSync = (string, options) => {\r\n        let templateCompiled;\r\n        let templateVars = {};\r\n        let parseToHtml;\r\n        if (!M.utils.isUndefined(options)) {\r\n          templateVars = M.utils.extends(templateVars, options.vars);\r\n          parseToHtml = options.parseToHtml;\r\n        }\r\n        const templateFn = Handlebars.compile(string);\r\n        const htmlText = templateFn(templateVars);\r\n        if (parseToHtml !== false) {\r\n          templateCompiled = M.utils.stringToHtml(htmlText);\r\n        } else {\r\n          templateCompiled = htmlText;\r\n        }\r\n        return templateCompiled;\r\n      };\r\n    }\r\n\r\n    return M.template.compileSync(ManageLayers.TEMPLATE, {\r\n      //'jsonp' : true\r\n    });\r\n  }\r\n\r\n\r\n  addControlToPlugin_(ctrol) {\r\n    //Al activar el control: refrescar panel\r\n    ctrol.on(M.evt.ACTIVATED, () => {\r\n      ctrol.render();\r\n    });\r\n    //Annadir control\r\n    this.controls_.push(ctrol);\r\n  }\r\n\r\n  getPanel_() {\r\n    //Comprobar si el panel existe\r\n    let name = ((!M.utils.isNullOrEmpty(this.options_.panel) && !M.utils.isNullOrEmpty(this.options_.panel.name)) ? this.options_.panel.name : 'managelayers');\r\n    let panel = this.map_.getPanels(name)[0];\r\n    //Si no existe lo creamos\r\n    if (M.utils.isNullOrEmpty(panel)) {\r\n      panel = new M.ui.Panel(name, this.getPanelOptions_());\r\n      panel.on(M.evt.ADDED_TO_MAP, (html) => {\r\n        M.utils.enableTouchScroll(html);\r\n      });\r\n      //Al mostrar el panel siempre activar control de capas activas\r\n      panel.on(M.evt.SHOW, (evt) => {\r\n        // Recorro todos los controles del panel.Si ninguno esta activo se activa el de capas activas\r\n        let ctrlActive = false, ctrls = this.getControls();\r\n        for (let i = 0; i < ctrls.length; i++) {\r\n          if (ctrls[i].activated) {\r\n            ctrlActive = true;\r\n            break;\r\n          }\r\n        }\r\n        if (!ctrlActive) {\r\n          let ctrol = this.map_.getControls(ActiveLayersControl.NAME)[0];\r\n          ctrol.activate();\r\n        }\r\n\r\n      });\r\n    }\r\n\r\n    return panel;\r\n  }\r\n\r\n  /**\r\n   * Control panel configuration options\r\n   *\r\n   * @public\r\n   * @function\r\n   * @api stable\r\n   */\r\n  getPanelOptions_() {\r\n    let opt_ = {};\r\n    if (!M.utils.isNullOrEmpty(this.options_.panel))\r\n      opt_ = this.options_.panel;\r\n\r\n    let panelOptions_ = {\r\n      collapsible: true,\r\n      className: 'm-managelayers' + ((!M.utils.isNullOrEmpty(opt_.className)) ? (' ' + opt_.className) : ''),\r\n      collapsedButtonClass: ((!M.utils.isNullOrEmpty(opt_.collapsedClass)) ? opt_.collapsedClass : 'g-cartografia-capas2'),\r\n      position: ((!M.utils.isNullOrEmpty(opt_.position)) ? opt_.position : M.ui.position.TR),\r\n      tooltip: ((!M.utils.isNullOrEmpty(opt_.tooltip)) ? opt_.tooltip : 'Gestor de capas')\r\n    };\r\n    return panelOptions_;\r\n  }\r\n\r\n\r\n  getControls() {\r\n    return this.controls_;\r\n  }\r\n\r\n  /**\r\n   * This function destroys this plugin\r\n   *\r\n   * @public\r\n   * @function\r\n   * @api stable\r\n   */\r\n  destroy() {\r\n    this.map_.removeControls(this.controls_);\r\n    this.map_ = null;\r\n    this.controls_ = null;\r\n    this.panel_ = null;\r\n    this.params_ = null;\r\n    this.options_ = null;\r\n    this.name = null;\r\n  }\r\n\r\n  /**\r\n   * This function compare if pluging recieved by param is instance of   this\r\n   *\r\n   * @public\r\n   * @function\r\n   * @param {M.plugin} plugin to comapre\r\n   * @api stable\r\n   */\r\n  equals(plugin) {\r\n    let equals = false;\r\n    if (plugin instanceof ManageLayers) {\r\n      equals = true;\r\n    }\r\n    return equals;\r\n  }\r\n\r\n  /**\r\n   * This function gets metadata plugin\r\n   *\r\n   * @public\r\n   * @function\r\n   * @api stable\r\n   */\r\n  getMetadata(){\r\n    return this.metadata_;\r\n  }\r\n}\r\n","/**\r\n * @module M/control/WMCLayersControl\r\n */\r\nimport ManageLayersControl from './managelayerscontrol.js';\r\nimport ManageLayersImplControl from 'impl/managelayerscontrol';\r\nimport template from 'templates/wmclayers';\r\n\r\nexport default class WMCLayersControl extends ManageLayersControl {\r\n\r\n\r\n    /**\r\n     * Name to identify this control\r\n     * @const\r\n     * @type {string}\r\n     * @public\r\n     * @api stable\r\n     */\r\n    static get NAME() {\r\n        return 'WMCLayers';\r\n    }\r\n\r\n    /**\r\n     * Name to identify url template\r\n     * @const\r\n     * @type {string}\r\n     * @public\r\n     * @api stable\r\n     */\r\n    static get TEMPLATE() {\r\n        return template;\r\n    }\r\n\r\n    /**\r\n     * @classdesc\r\n     * Main constructor of the class. Creates a WMCLayersControl\r\n     * control\r\n     *\r\n     * @constructor\r\n     * @extends {M.Control}\r\n     * @api stable\r\n     */\r\n    constructor(params, options) {\r\n\r\n        // 2. implementation of this control\r\n        let impl = new ManageLayersImplControl(params);\r\n\r\n        let opt_ = {\r\n            controlName: WMCLayersControl.NAME,\r\n            iconClass: 'g-cartografia-capas',\r\n            tooltip: 'Capas WMC'\r\n        };\r\n        // Se annaden los parametros de control a las opciones\r\n        options = M.utils.extend(opt_, options, true);\r\n\r\n        super(impl, params, options);\r\n\r\n        /**\r\n         * Params of the control\r\n         * @private\r\n         * @type {params}\r\n         */\r\n        this.params_ = params || {};\r\n\r\n    }\r\n\r\n    addTo(map) {\r\n        super.addTo(map);\r\n        //Proceso inicial si existe WMC cargado: mostrar capas\r\n        this.wmc_ = this.getWMCSelected();\r\n        this.render();\r\n        //Evento recarga cuando se cambia WMC seleccionado\r\n        this.map_.on(M.evt.CHANGE_WMC, (wmc) => {\r\n            this.wmc_ = this.getWMCSelected();\r\n            this.render();\r\n        }, this);\r\n    }\r\n\r\n    getWMCSelected() {\r\n        let lstWMC = this.map_.getWMC().filter((wmcLayer) => {\r\n            return (wmcLayer.selected == true);\r\n        });\r\n        let wmc = ((lstWMC) ? lstWMC[0] : null);\r\n        if (wmc) {\r\n            //Establecemos id para cada capa\r\n            wmc.layers.forEach((layer, index) => {\r\n                if (M.utils.isNullOrEmpty(layer.id))\r\n                    layer.id = 'WMC_' + index;\r\n            });\r\n        }\r\n        return wmc;\r\n    }\r\n\r\n    render() {\r\n        this.renderPanel();\r\n    }\r\n\r\n    renderPanel() {\r\n        let html = M.template.compileSync(WMCLayersControl.TEMPLATE, {\r\n            //'jsonp' : true,\r\n            'vars': this.getTemplateVariables_()\r\n        });\r\n            this.getControlContainer_().innerHTML = html.innerHTML;\r\n\r\n    }\r\n\r\n    addEvents(html) {\r\n        let content = html.querySelector(this.getSelectorContainer_());\r\n        content.addEventListener(\"click\", (evt) => this.clickWmcLayer(evt));\r\n    }\r\n\r\n    /**\r\n     * Gets the variables of the template to compile\r\n     */\r\n    getTemplateVariables_() {\r\n        if (!M.utils.isNullOrEmpty(this.wmc_)) {\r\n            //Generar lista de capas del WMC\r\n            let wmcLayers = this.wmc_.layers.filter((layer) => {\r\n                //TODO: Mostrar todas las capas cargadas ...\r\n                let isTransparent = true;\r\n                let displayInLayerSwitcher = true;\r\n                //let isTransparent = (layer.transparent === true);\r\n                //let displayInLayerSwitcher = (layer.displayInLayerSwitcher === true);\r\n                let isNotWMC = (layer.type !== M.layer.type.WMC);\r\n                let isNotWMSFull = !((layer.type === M.layer.type.WMS) && M.utils.isNullOrEmpty(layer.name));\r\n                return (isTransparent && isNotWMC && isNotWMSFull && displayInLayerSwitcher);\r\n            }); //.reverse();\r\n\r\n            return {\r\n                'name': this.wmc_.name,\r\n                'wmcLayers': wmcLayers.map(this.parseLayerForTemplate_, this)\r\n            };\r\n        } else {\r\n            return {\r\n                'name': '',\r\n                'wmcLayers': []\r\n            };\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * This function checks if an object is equals\r\n     * to this control\r\n     *\r\n     * @private\r\n     * @function\r\n     */\r\n    parseLayerForTemplate_(layer) {\r\n        //Titulo capa\r\n        let layerTitle = layer.legend;\r\n        if (M.utils.isNullOrEmpty(layerTitle)) {\r\n            layerTitle = layer.name;\r\n        }\r\n        if (M.utils.isNullOrEmpty(layerTitle)) {\r\n            layerTitle = 'Servicio WMS';\r\n        }\r\n        //Establecer origen si no tiene\r\n        if (M.utils.isNullOrEmpty(layer.options))\r\n            layer.options = {};\r\n        if (M.utils.isNullOrEmpty(layer.options.origen)) {\r\n            layer.options.isWMC = true;\r\n            layer.options.origen = 'WMC';\r\n        }\r\n        return {\r\n            'id': layer.id,\r\n            'name': layer.name,\r\n            'title': layerTitle,\r\n            'load': (this.isLoadLayer(layer) === true)\r\n            //'base': (layer.transparent === false),\r\n            //'visible' : (layer.isVisible() === true),\r\n            //'legend' : layer.getLegendURL(),\r\n            //'outOfRange' : !layer.inRange(),\r\n            //'opacity' : layer.getOpacity()\r\n        };\r\n    }\r\n\r\n    clickWmcLayer(evt) {\r\n        evt = (evt || window.event);\r\n        let itemTarget = evt.target;\r\n        if (!M.utils.isNullOrEmpty(itemTarget)) {\r\n            //Annadir/Eliminar todas los elementos del WMC\r\n            if (itemTarget.classList.contains('m-accion-wmclayers-load-group')) {\r\n                evt.stopPropagation();\r\n                //Determinar accion y obtener elementos a procesar\r\n                let selectorItems = ((itemTarget.classList.contains('g-cartografia-mas2')) ? 'input[type=checkbox]:not(:checked)' : 'input[type=checkbox]:checked');\r\n                let itemsSelect = this.getControlContainer_().querySelectorAll(selectorItems);\r\n                //Realizar operacion para los elementos seleccionados\r\n                itemsSelect.forEach((item, index) => {\r\n                    item.click();\r\n                });\r\n                //Actualizar estado accion de grupo\r\n                itemTarget.classList.toggle('g-cartografia-mas2');\r\n                itemTarget.classList.toggle('g-cartografia-cancelar2');\r\n                itemTarget.title = ((itemTarget.classList.contains('g-cartografia-mas2')) ? 'Añadir todas las capas' : 'Eliminar todas las capas');\r\n            } else {\r\n                let id = itemTarget.getAttribute('data-id');\r\n                if (!M.utils.isNullOrEmpty(id)) {\r\n                    evt.stopPropagation();\r\n                    //Obtenemos del WMC cargado los datos de la capa\r\n                    let layer = this.findItemByProperty(this.wmc_.layers, 'id', id);\r\n                    //Annadir/Eliminar capa\r\n                    if (itemTarget.classList.contains('m-accion-wmclayers-load')) {\r\n                        let isLoad = this.isLoadLayer(layer);\r\n                        if (isLoad === true) {\r\n                            this.removeLayers(layer);\r\n                            this.resetOptionsManageLayers(layer);\r\n                        } else\r\n                            this.addLayers(layer);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * This function checks if an object is equals\r\n     * to this control\r\n     *\r\n     * @public\r\n     * @function\r\n     * @param {*} obj - Object to compare\r\n     * @returns {boolean} equals - Returns if they are equal or not\r\n     * @api stable\r\n     */\r\n    equals(obj) {\r\n        let equals = false;\r\n        if (obj instanceof WMCLayersControl) {\r\n            equals = (this.name === obj.name);\r\n        }\r\n        return equals;\r\n    }\r\n\r\n}","import M$control$ActiveLayersControl from 'C:/proyectos/managelayers/src/facade/js/activelayersControl';\nimport M$plugin$BaseLayersControl from 'C:/proyectos/managelayers/src/facade/js/baselayersControl';\nimport M$plugin$ManageLayers from 'C:/proyectos/managelayers/src/facade/js/managelayers';\nimport M$control$ManageLayersControl from 'C:/proyectos/managelayers/src/facade/js/managelayerscontrol';\nimport M$control$ThematicLayersControl from 'C:/proyectos/managelayers/src/facade/js/thematiclayersControl';\nimport M$control$WMCLayersControl from 'C:/proyectos/managelayers/src/facade/js/wmclayersControl';\nimport M$impl$control$ActiveLayersControl from 'C:/proyectos/managelayers/src/impl/ol/js/activelayersControl';\nimport M$impl$control$BaseLayersControl from 'C:/proyectos/managelayers/src/impl/ol/js/baselayersControl';\nimport M$impl$control$ManageLayersControl from 'C:/proyectos/managelayers/src/impl/ol/js/managelayerscontrol';\n\nif (!window.M.control) window.M.control = {};\nif (!window.M.plugin) window.M.plugin = {};\nif (!window.M.impl) window.M.impl = {};\nif (!window.M.impl.control) window.M.impl.control = {};\nwindow.M.control.ActiveLayersControl = M$control$ActiveLayersControl;\nwindow.M.plugin.BaseLayersControl = M$plugin$BaseLayersControl;\nwindow.M.plugin.ManageLayers = M$plugin$ManageLayers;\nwindow.M.control.ManageLayersControl = M$control$ManageLayersControl;\nwindow.M.control.ThematicLayersControl = M$control$ThematicLayersControl;\nwindow.M.control.WMCLayersControl = M$control$WMCLayersControl;\nwindow.M.impl.control.ActiveLayersControl = M$impl$control$ActiveLayersControl;\nwindow.M.impl.control.BaseLayersControl = M$impl$control$BaseLayersControl;\nwindow.M.impl.control.ManageLayersControl = M$impl$control$ManageLayersControl;\n"],"sourceRoot":""}